define("travsky/jcf/1.0.0/app-debug", [ "backbone-debug", "marionette-debug", "./app_router-debug", "jquery-debug", "underscore-debug", "querystring-debug", "./util/SidebarManager-debug", "./view/menu_view-debug", "./template/menu-debug.tpl", "./view/container_view-debug", "./template/container-debug.tpl", "./view/auth/sidebar_view-debug", "./template/auth/sidebar-debug.tpl", "./view/server/sidebar_view-debug", "./collection/group_collection-debug", "./util/CommonUtil-debug", "./view/errorPage_view-debug", "./template/errorPage-debug.tpl", "./view/alert_view-debug", "./template/alert-debug.tpl", "bs-modal-debug", "./model/alert_model-debug", "./model/group_model-debug", "./template/server/sidebar-debug.tpl", "./view/deploy/sidebar_view-debug", "./template/deploy/sidebar-debug.tpl", "./view/service/sidebar_view-debug", "./template/service/sidebar-debug.tpl", "./view/service/serviceContent_view-debug", "./template/service/serviceContent-debug.tpl", "./view/dataSource/sidebar_view-debug", "./template/dataSource/sidebar-debug.tpl", "./view/dataSource/dataSourceContent_view-debug", "./template/dataSource/dataSourceContent-debug.tpl", "./view/context/sidebar_view-debug", "./template/context/sidebar-debug.tpl", "./view/context/contextContent_view-debug", "./template/context/contextContent-debug.tpl", "./view/log/sidebar_view-debug", "./template/log/sidebar-debug.tpl", "./view/log/logContent_view-debug", "./template/log/logContent-debug.tpl", "./view/dataSource/dataSourceTabbar_view-debug", "./template/dataSource/dataSourceTabbar-debug.tpl", "./view/dataSource/groupDataSourceTabbar_view-debug", "./util/DataSourceAuthCheckUtil-debug", "./template/dataSource/groupDataSourceTabbar-debug.tpl", "./view/dataSource/serverDataSourceTabbar_view-debug", "./template/dataSource/serverDataSourceTabbar-debug.tpl", "./view/context/serverContextTabbar_view-debug", "./util/ContextAuthCheckUtil-debug", "./template/context/serverContextTabbar-debug.tpl", "./util/SidebarUtil-debug", "./api/IndexApi-debug", "./model/navbar_model-debug", "./controller/IndexController-debug", "./view/navbar_view-debug", "./template/navbar-debug.tpl", "./controller/SidebarController-debug", "./view/sidebar_view-debug", "./template/sidebar-debug.tpl", "./view/foot_view-debug", "./template/foot-debug.tpl", "./view/tipIndex_view-debug", "./template/tipIndex-debug.tpl", "./view/app_view-debug", "./view/sysIndex_view-debug", "./template/sysIndex-debug.tpl", "./api/auth/UserMgrApi-debug", "./view/auth/userMgrLayout-debug", "./view/auth/userList_view-debug", "./template/auth/userList-debug.tpl", "./collection/auth/user_collection-debug", "./model/auth/user_model-debug", "./view/auth/userModify_view-debug", "./template/auth/userModify-debug.tpl", "./util/SpecialPatternInputCheckUtil2-debug", "./view/auth/userDetail_view-debug", "./template/auth/userDetail-debug.tpl", "./template/auth/userItem-debug.tpl", "./view/auth/userAdd_view-debug", "./template/auth/userAdd-debug.tpl", "./template/auth/userMgrLayout-debug.tpl", "./view/pagebar_view2-debug", "./template/pagebar2-debug.tpl", "./template/auth/userSearchItem-debug.tpl", "./view/auth/roleMgrLayout-debug", "./template/auth/roleItem-debug.tpl", "./template/auth/roleList-debug.tpl", "./template/auth/roleSearchItem-debug.tpl", "./view/auth/roleAdd_view-debug", "./template/auth/roleAdd-debug.tpl", "ztree-core-debug", "ztree-excheck-debug", "./view/auth/roleUpdate_view-debug", "./template/auth/roleUpdate-debug.tpl", "./model/confirm_model-debug", "./view/confirm_view-debug", "./template/confirm-debug.tpl", "./view/server/serverMgrLayout-debug", "./template/server/serverMgrLayout-debug.tpl", "./view/server/serverAdd_view-debug", "./template/server/serverAdd-debug.tpl", "./view/server/server-debug", "./view/server/AuthCheck4ServerUtil-debug", "./view/server/groupAdd_view-debug", "./view/server/checkCacheGroup-debug", "./view/server/global_view-debug", "bs-alert-debug", "./template/server/global-debug.tpl", "./template/server/groupAdd-debug.tpl", "./view/server/serverAddNext_view-debug", "./template/server/serverAddNext-debug.tpl", "./view/server/nodeControllerCfg_view-debug", "./template/server/nodeControllerCfg-debug.tpl", "./template/server/serverItem-debug.tpl", "./template/server/serverList-debug.tpl", "./view/server/domainParamCfg_view-debug", "./template/server/domainParamCfg-debug.tpl", "icheck-debug", "./view/server/serverMgr4GroupLayout-debug", "./view/server/groupServerConfig-debug", "./template/server/groupServerConfig-debug.tpl", "./view/server/serverInputCheck-debug", "./view/server/groupServerConfig_registry-debug", "./template/server/groupServerConfig_registry-debug.tpl", "./view/server/groupServerConfig_cache-debug", "./template/server/groupServerConfig_cache-debug.tpl", "./template/server/serverMgr4GroupLayout-debug.tpl", "./template/server/groupServerSearch-debug.tpl", "./model/pagebar_model-debug", "./view/listTip_view-debug", "./template/listTip-debug.tpl", "./template/server/groupServerItem-debug.tpl", "./template/server/groupServerList-debug.tpl", "./view/server/serverSysMemoryStatisticsLayout-debug", "./template/server/serverSysMemoryStatisticsItem-debug.tpl", "./template/server/serverSysMemoryStatisticsList-debug.tpl", "./template/server/serverSysMemoryStatisticsLayout-debug.tpl", "./template/server/serverSysMemoryStatisticsBaseInfo-debug.tpl", "./view/server/serverMgr4ServerLayout-debug", "./template/server/serverMgr4ServerLayout-debug.tpl", "./template/server/serverDetail-debug.tpl", "./view/server/serverUpdate_view-debug", "./template/server/serverUpdate-debug.tpl", "./view/waiting_view-debug", "./template/waiting-debug.tpl", "./view/deploy/deployMgrLayout-debug", "./template/deploy/deployMgrLayout-debug.tpl", "./view/deploy/deployList_view-debug", "./template/deploy/deployItem-debug.tpl", "./template/deploy/deployList-debug.tpl", "./view/deploy/AuthCheck4DeployUtil-debug", "./view/deploy/deployUploadLayout-debug", "./template/deploy/deployUploadLayout-debug.tpl", "./template/deploy/uploadItem-debug.tpl", "./template/deploy/uploadList-debug.tpl", "./model/listTip_model-debug", "./template/deploy/upload4AlreadyUploadItem-debug.tpl", "./template/deploy/upload4AlreadyUploadList-debug.tpl", "./view/deploy/groupDeployMgrLayout-debug", "./template/deploy/groupDeployMgrLayout-debug.tpl", "./view/deploy/groupDeployTabAppMgr-debug", "./template/deploy/groupDeployAppMgrItem-debug.tpl", "./template/deploy/groupDeployAppMgrList-debug.tpl", "./template/deploy/groupDeployTabAppMgr-debug.tpl", "./view/deploy/rollbackLayout-debug", "./template/deploy/rollbackLayout-debug.tpl", "./view/deploy/rollback_view-debug", "./template/deploy/rollbackView-debug.tpl", "./view/deploy/rollbackUploadLayout-debug", "./collection/deploy/groupApp_collection-debug", "./model/deploy/groupApp_model-debug", "./view/itemTip_view-debug", "./template/itemTip-debug.tpl", "./model/itemTip_model-debug", "./view/deploy/groupServerAppStautsLayout-debug", "./template/deploy/groupServerAppStautsLayout-debug.tpl", "./template/deploy/groupServerAppBaseInfo-debug.tpl", "./template/deploy/groupServerAppStatusItem-debug.tpl", "./template/deploy/groupServerAppStatusList-debug.tpl", "./view/deploy/groupAppConfigLayout-debug", "./template/deploy/serverAppConfigLayout-debug.tpl", "./template/deploy/groupAppCfgBaseInfo-debug.tpl", "./template/deploy/serverAppCfgCurPath-debug.tpl", "./template/deploy/serverAppCfgItem-debug.tpl", "./template/deploy/serverAppCfgList-debug.tpl", "ajaxfileupload-debug", "./view/deploy/groupDeployTabCreateNewDeploy-debug", "./template/deploy/groupDeployNewDeployItem-debug.tpl", "./template/deploy/groupDeployNewDeployList-debug.tpl", "./template/deploy/groupDeployTabCreateNewDeploy-debug.tpl", "./view/deploy/groupDeployAppLogCfgLayout-debug", "./template/deploy/groupDeployAppLogCfgLayout-debug.tpl", "./template/deploy/groupDeployAppLogCfgItem-debug.tpl", "./template/deploy/groupDeployAppLogCfgList-debug.tpl", "./template/deploy/groupDeployNewDeployServerSelectItem-debug.tpl", "./template/deploy/groupDeployNewDeployServerSelectList-debug.tpl", "./view/deploy/groupDeployTabServerDeployInfo-debug", "./template/deploy/groupDeployServerDeployItem-debug.tpl", "./template/deploy/groupDeployServerDeployList-debug.tpl", "./template/deploy/groupDeployTabServerDeployInfo-debug.tpl", "./view/deploy/serverAppStatusLayout-debug", "./template/deploy/serverBaseInfo-debug.tpl", "./template/deploy/serverAppStatusItem-debug.tpl", "./template/deploy/serverAppStatusList-debug.tpl", "./template/deploy/serverAppStatusLayout-debug.tpl", "./view/deploy/serverAppConfigLayout-debug", "./template/deploy/serverAppCfgBaseInfo-debug.tpl", "./view/service/serviceMgrLayout-debug", "./template/service/serviceMgrLayout-debug.tpl", "./view/service/serviceTab4ListLayout-debug", "./template/pageDataLayout-debug.tpl", "./template/service/serviceItem-debug.tpl", "./template/service/serviceList-debug.tpl", "./view/service/serviceTab4ConfigLayout-debug", "./template/service/serviceTab4ConfigLayout-debug.tpl", "./view/service/serviceConfig_view-debug", "./template/service/serviceConfigView-debug.tpl", "./view/service/AuthCheck4Service-debug", "./view/service/groupServiceMgrLayout-debug", "./template/service/groupServiceMgrLayout-debug.tpl", "./view/service/groupServiceTabServiceMgr-debug", "./template/service/groupServiceTabMgrLayout-debug.tpl", "./template/service/groupServiceItem-debug.tpl", "./template/service/groupServiceList-debug.tpl", "./view/service/serviceDetailLayout-debug", "./template/service/serviceDetailLayout-debug.tpl", "./template/service/serviceDetailBaseInfo-debug.tpl", "./template/service/serviceDetailItem-debug.tpl", "./template/service/serviceDetailList-debug.tpl", "./view/service/ServiceOperHelper-debug", "./view/service/monitorService_view-debug", "./template/service/monitoryService_view-debug.tpl", "./view/service/groupServiceCfg-debug", "./template/service/groupServiceCfg-debug.tpl", "./view/service/serviceGrayConfig_view-debug", "./template/service/serviceGrayConfig-debug.tpl", "./view/service/serviceDegradeConfig_view-debug", "./template/service/serviceDegradeConfig-debug.tpl", "./view/service/respGroupMoni_view-debug", "my97Date-debug", "./template/service/groupServiceChartOpt-debug.tpl", "./view/service/groupServiceChart_view-debug", "highcharts-debug", "./template/service/groupServiceChart_view-debug.tpl", "./view/service/serverServiceChart_view-debug", "./template/service/serverServiceChart_view-debug.tpl", "./view/service/serverServiceMgrLayout-debug", "./template/service/serverServiceMgrLayout-debug.tpl", "./template/service/serverServiceItem-debug.tpl", "./template/service/serverServiceList-debug.tpl", "./view/service/serverServiceCfg_view-debug", "./template/service/serverServiceCfg-debug.tpl", "./view/service/respMoni_view-debug", "./template/service/serviceChartOpt-debug.tpl", "./model/service/service_degrade_config_model-debug", "./model/service/service_gray_config_model-debug", "./collection/dataSource/dataSource_collection-debug", "./model/dataSource/dataSource_model-debug", "./view/dataSource/dataSourceList_view-debug", "./template/dataSource/dataSourceList-debug.tpl", "./view/dataSource/dataSourceItem_view-debug", "./template/dataSource/dataSourceItem-debug.tpl", "./collection/dataSource/group_dataSource_collection-debug", "./model/dataSource/group_dataSource_model-debug", "./view/dataSource/groupDataSourceList_view-debug", "./template/dataSource/groupDataSourceList-debug.tpl", "./view/dataSource/groupDataSourceItem_view-debug", "./template/dataSource/groupDataSourceItem-debug.tpl", "./view/dataSource/dataSourceWait_view-debug", "./template/dataSource/dataSourceWait-debug.tpl", "./view/dataSource/tip_view-debug", "./template/dataSource/tip-debug.tpl", "./view/dataSource/global_view-debug", "./template/dataSource/global-debug.tpl", "./view/dataSource/groupDataSourceListHead_view-debug", "./template/dataSource/groupDataSourceListHead-debug.tpl", "./view/dataSource/groupDeployDataSource_view-debug", "./util/DataSourceUtil-debug", "./util/SpecialPatternInputCheckUtil-debug", "./model/dataSource/group_dataSource_deploy_model-debug", "./collection/dataSource/group_dataSource_server_collection-debug", "./model/dataSource/group_dataSource_server_model-debug", "./template/dataSource/groupDeployDataSource-debug.tpl", "./view/dataSource/groupDataSourceServerList_view-debug", "./template/dataSource/groupDataSourceServerList-debug.tpl", "./view/dataSource/groupDataSourceServerItem_view-debug", "./template/dataSource/groupDataSourceServerItem-debug.tpl", "./view/dataSource/groupDataSourceConfig_view-debug", "./template/dataSource/groupDataSourceConfig-debug.tpl", "./view/dataSource/groupDataSourceConfigHead_view-debug", "./collection/dataSource/group_dataSource_name_collection-debug", "./model/dataSource/group_dataSource_name_model-debug", "./template/dataSource/groupDataSourceConfigHead-debug.tpl", "./model/dataSource/group_dataSource_config_model-debug", "./view/dataSource/serverDataSourceList_view-debug", "./collection/dataSource/server_dataSource_collection-debug", "./model/dataSource/server_dataSource_model-debug", "./template/dataSource/serverDataSourceList-debug.tpl", "./view/dataSource/serverDataSourceItem_view-debug", "./model/dataSource/server_dataSource_config_model-debug", "./view/dataSource/serverDataSourceConfig_view-debug", "./template/dataSource/serverDataSourceConfig-debug.tpl", "./model/dataSource/server_dataSource_monitor_model-debug", "./view/dataSource/serverDataSourceMonitor_view-debug", "./template/dataSource/serverDataSourceMonitor-debug.tpl", "./template/dataSource/serverDataSourceItem-debug.tpl", "./view/dataSource/serverDeployDataSource_view-debug", "./model/dataSource/server_dataSource_deploy_model-debug", "./template/dataSource/serverDeployDataSource-debug.tpl", "./view/dataSource/serverTestDataSourceList_view-debug", "./template/dataSource/serverTestDataSourceList-debug.tpl", "./view/dataSource/serverTestDataSourceItem_view-debug", "./template/dataSource/serverTestDataSourceItem-debug.tpl", "./view/context/highcharts-debug", "exporting-debug", "./template/context/highchart-debug.tpl", "./model/context/server_context_model-debug", "./view/context/serverContextInfo_view-debug", "./view/context/tip_view-debug", "./template/context/tip-debug.tpl", "./view/context/global_view-debug", "./template/context/global-debug.tpl", "./template/context/serverContextInfo-debug.tpl", "./view/context/serverContextConfig_view-debug", "./util/ContextUtil-debug", "./template/context/serverContextConfig-debug.tpl", "./collection/log/log_collection-debug", "./model/log/log_model-debug", "./view/log/logList_view-debug", "./template/log/logList-debug.tpl", "./util/LogAuthCheckUtil-debug", "./view/log/logItem_view-debug", "./template/log/logItem-debug.tpl", "./view/log/global_view-debug", "./template/log/global-debug.tpl", "./view/log/tip_view-debug", "./view/log/logConfig_view-debug", "./util/LogUtil-debug", "./template/log/logConfig-debug.tpl", "./view/log/logConfigHead_view-debug", "./template/log/logConfigHead-debug.tpl", "./collection/log/log_app_name_collection-debug", "./model/log/log_app_name_model-debug", "./model/log/log_config_model-debug", "./view/AuthCheck4Menu-debug" ], function(require, exports, module) {
    var Backbone = require("backbone-debug");
    var Marionette = require("marionette-debug");
    var AppRouter = require("./app_router-debug");
    var SidebarUitl = require("./util/SidebarUtil-debug");
    var IndexApi = require("./api/IndexApi-debug");
    var $ = jQuery = require("jquery-debug");
    var AppView = require("./view/app_view-debug");
    var util = require("./util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    //将jcfManger绑定到windown对象上
    window.jcfManager = new Marionette.Application();
    jcfManager.addRegions({
        menuRegion: "#menu",
        navbarRegion: "#indexNavbarRegion",
        sidebarRegion: "#sidebar",
        contentRegion: "#indexContantRegion",
        footRegion: "#indexFootRegsion",
        dialogRegion: "#dialogRegion"
    });
    jcfManager.getCurrentFragment = function() {
        return Backbone.history.fragment;
    };
    jcfManager.reqres.setHandler("login:user", function() {
        return IndexApi.getLoginUser();
    });
    jcfManager.reqres.setHandler("index:sidebarCollection", function(selectedItem) {
        //var selectItem = SidebarUitl.getModuleName() ;
        return IndexApi.getGroupCollection(selectedItem);
    });
    jcfManager.addInitializer(function(options) {
        //查询权限
        var serverURL = "/" + util.getAppName() + "/getSpecialAuthStrMap.action";
        var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
        $.when(ajaxing).done(function(data) {
            var model = new Backbone.Model(data.authMap);
            jcfManager.authModel = model;
            jcfManager.loginUserName = data.loginUserName;
            jcfManager.loginUserRole = data.loginUserRole;
            jcfManager.loginID = data.loginID;
            jcfManager.defaultPageSize = data.defaultPageSize;
        });
        //上面那部分代码一定要执行完成才能执行下面这部分代码，否者肯定要出错
        var authCheck = require("./view/AuthCheck4Menu-debug");
        var a1 = {
            key: "authMgr",
            value: "权限管理"
        };
        var a2 = {
            key: "serverMgr",
            value: "服务器管理"
        };
        var a3 = {
            key: "deployMgr",
            value: "部署管理"
        };
        var a4 = {
            key: "serviceMgr",
            value: "服务管理"
        };
        var a5 = {
            key: "dataSrcMgr",
            value: "数据源管理"
        };
        var a6 = {
            key: "contextMgr",
            value: "上下文管理"
        };
        var a7 = {
            key: "logMgr",
            value: "日志管理"
        };
        var authServerFlag = authCheck.getServerFlag();
        var authDeployFlag = authCheck.getDeployFlag();
        var authServiceFlag = authCheck.getServiceFlag();
        var authDatasourceFlag = authCheck.getDatasourceFlag();
        var authMemacheFlag = authCheck.getMemcacheFlag();
        var authLogFlag = authCheck.getLogFlag();
        var logRoleName = jcfManager.loginUserRole;
        var menus = [];
        if (logRoleName == "系统管理员") {
            menus.push(a1);
        }
        if (authServerFlag == "true") {
            menus.push(a2);
        }
        if (authDeployFlag == "true") {
            menus.push(a3);
        }
        if (authServiceFlag == "true") {
            menus.push(a4);
        }
        if (authDatasourceFlag == "true") {
            menus.push(a5);
        }
        if (authMemacheFlag == "true") {
            menus.push(a6);
        }
        if (authLogFlag == "true") {
            menus.push(a7);
        }
        jcfManager.menus = menus;
    });
    jcfManager.addInitializer(function(options) {
        var MenuView = require("./view/menu_view-debug");
        this.appName = util.getAppName();
        var selectedItem = SidebarUitl.getModuleName();
        IndexApi.showNavbar();
        //显示一级菜单栏
        var model = new Backbone.Model();
        model.set("current", "");
        model.set("menus", jcfManager.menus);
        var menuView = new MenuView({
            model: model
        });
        jcfManager.menuRegion.show(menuView);
        jcfManagement.view.menu = menuView;
    });
    jcfManager.addInitializer(function(options) {
        window.appView = new AppView();
        window.appRouter = new AppRouter();
        Backbone.history.start();
        var str = "sysIndex";
        if (jcfManager.menus.length > 0) {
            str = jcfManager.menus[0].key;
        }
        if (Backbone.history.fragment === "") {
            Backbone.history.navigate(str, {
                trigger: true
            });
        }
    });
    jcfManager.start();
});

define("travsky/jcf/1.0.0/app_router-debug", [ "jquery-debug", "underscore-debug", "backbone-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarManager-debug", "travsky/jcf/1.0.0/view/menu_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/container_view-debug", "travsky/jcf/1.0.0/view/auth/sidebar_view-debug", "travsky/jcf/1.0.0/view/server/sidebar_view-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/view/deploy/sidebar_view-debug", "travsky/jcf/1.0.0/view/service/sidebar_view-debug", "travsky/jcf/1.0.0/view/service/serviceContent_view-debug", "travsky/jcf/1.0.0/view/dataSource/sidebar_view-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceContent_view-debug", "travsky/jcf/1.0.0/view/context/sidebar_view-debug", "travsky/jcf/1.0.0/view/context/contextContent_view-debug", "travsky/jcf/1.0.0/view/log/sidebar_view-debug", "travsky/jcf/1.0.0/view/log/logContent_view-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceTabbar_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceTabbar_view-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceTabbar_view-debug", "travsky/jcf/1.0.0/view/context/serverContextTabbar_view-debug", "travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug" ], function(require, exports, module) {
    // global namespace
    window.jcfManagement = {
        model: {},
        view: {},
        collection: {},
        temp: {},
        service_name: "",
        current_sidebar: null,
        tipInfoRegion: null
    };
    // 每一个模块中需要使用到 jQuery， Underscore，Backbone都需要引入这三个模块
    var $ = jQuery = require("jquery-debug");
    var _ = require("underscore-debug");
    var Backbone = require("backbone-debug");
    var QueryString = require("querystring-debug");
    var sidebarManager = require("travsky/jcf/1.0.0/util/SidebarManager-debug");
    var MenuView = require("travsky/jcf/1.0.0/view/menu_view-debug");
    var ContainerView = require("travsky/jcf/1.0.0/view/container_view-debug");
    var AuthSidebarView = require("travsky/jcf/1.0.0/view/auth/sidebar_view-debug");
    var ServerSidebarView = require("travsky/jcf/1.0.0/view/server/sidebar_view-debug");
    var DeploySidebarView = require("travsky/jcf/1.0.0/view/deploy/sidebar_view-debug");
    var ServiceSidebarView = require("travsky/jcf/1.0.0/view/service/sidebar_view-debug");
    var ServiceContentView = require("travsky/jcf/1.0.0/view/service/serviceContent_view-debug");
    var DataSourceSidebarView = require("travsky/jcf/1.0.0/view/dataSource/sidebar_view-debug");
    var DataSourceContentView = require("travsky/jcf/1.0.0/view/dataSource/dataSourceContent_view-debug");
    var ContextSidebarView = require("travsky/jcf/1.0.0/view/context/sidebar_view-debug");
    var ContextContentView = require("travsky/jcf/1.0.0/view/context/contextContent_view-debug");
    var LogSidebarView = require("travsky/jcf/1.0.0/view/log/sidebar_view-debug");
    var LogContentView = require("travsky/jcf/1.0.0/view/log/logContent_view-debug");
    // 路由
    var AppRouter = Backbone.Router.extend({
        routes: {
            sysIndex: "showSysIndex",
            authMgr: "authMgr",
            "authMgr/userMgr": "authMgrUser",
            "authMgr/userMgr/param/:params": "authMgrUser",
            "authMgr/userMgr/add": "addUser",
            "authMgr/userMgr/detail/param/:params": "detailUser",
            "authMgr/userMgr/modify/param/:params": "modifyUser",
            "authMgr/roleMgr": "authMgrRole",
            "authMgr/roleMgr/param/:params": "authMgrRole",
            "authMgr/roleMgr/add": "addRole",
            "authMgr/roleMgr/update/param/:params": "updateRole",
            serverMgr: "serverMgr",
            "serverMgr/param/:params": "serverMgr",
            "serverMgr/group/param/:params": "serverMgrGroup",
            "serverMgr/server/param/:params": "serverMgrServer",
            "serverMgr/server/memoryInfo/param/:params": "serverMemoryInfo",
            deployMgr: "deployMgr",
            "deployMgr/param/:params": "deployMgr",
            "deployMgr/group/param/:params": "deployMgrGroup",
            "deployMgr/group/appConfig/param/:params": "deployMgrGroupAppConfig",
            "deployMgr/group/appRollback/param/:params": "deployMgrA4ppRollback",
            "deployMgr/group/appDeploy/param/:params": "viewAppStatus4GroupServer",
            "deployMgr/group/appLogCfg/param/:params": "appLogCfg",
            "deployMgr/server/param/:params": "deployMgrServer",
            "deployMgr/server/appConfig/param/:params": "deployMgrServerAppConfig",
            serviceMgr: "serviceMgr",
            "serviceMgr/param/:params": "serviceMgr",
            "serviceMgr/group/param/:params": "serviceMgrGroup",
            "serviceMgr/group/detail/param/:params": "groupServiceDetail",
            "serviceMgr/group/MoniOption/param/:params": "groupMoniOption",
            "serviceMgr/server/param/:params": "serviceMgrServer",
            "serviceMgr/server/monitor/param/:params": "serviceMonitor",
            "serviceMgr/server/cfg/param/:params": "serverServiceCfg",
            "serviceMgr/server/MoniOption/param/:params": "serverMoniOption",
            "serviceMgr/service/degradeConfig/param/:params": "serviceDegradeConfig",
            "serviceMgr/service/grayConfig/param/:params": "serviceGrayConfig",
            dataSrcMgr: "domainDataSource",
            "dataSrcMgr/group/param/:params": "groupDataSource",
            "dataSrcMgr/server/param/:params": "serverDataSource",
            contextMgr: "contextMgr",
            "contextMgr/group/param/:params": "contextMgrGroup",
            "contextMgr/server/param/:params": "contextMgrServer",
            logMgr: "logMgr",
            "logMgr/group/param/:params": "logMgrGroup"
        },
        initialize: function() {},
        renderAuth: function() {
            jcfManagement.view.auth_sidebar = jcfManagement.view.auth_sidebar || new AuthSidebarView({
                el: "#sidebar"
            });
            sidebarManager.render(jcfManagement.view.auth_sidebar);
        },
        renderServer: function() {
            jcfManagement.view.server_sidebar = new ServerSidebarView({
                el: "#sidebar"
            });
            sidebarManager.render(jcfManagement.view.server_sidebar);
        },
        renderDeploy: function() {
            jcfManagement.view.deploy_sidebar = new DeploySidebarView({
                el: "#sidebar"
            });
            sidebarManager.render(jcfManagement.view.deploy_sidebar);
        },
        renderService: function() {
            //jcfManagement.view.containerView = new ContainerView();
            jcfManagement.view.service_sidebar = new ServiceSidebarView({
                el: "#sidebar"
            });
            //jcfManagement.view.service_content = new ServiceContentView();
            sidebarManager.render(jcfManagement.view.service_sidebar);
        },
        renderDataSource: function() {
            jcfManagement.view.containerView = new ContainerView();
            jcfManagement.view.dataSource_sidebar = new DataSourceSidebarView({
                el: "#sidebar"
            });
            jcfManagement.view.dataSource_content = new DataSourceContentView();
            sidebarManager.render(jcfManagement.view.dataSource_sidebar);
            jcfManagement.view.dataSource_content.render();
        },
        renderContext: function() {
            jcfManagement.view.containerView = new ContainerView();
            jcfManagement.view.context_sidebar = new ContextSidebarView({
                el: "#sidebar"
            });
            jcfManagement.view.context_content = new ContextContentView();
            sidebarManager.render(jcfManagement.view.context_sidebar);
            jcfManagement.view.context_content.render();
        },
        renderLog: function() {
            jcfManagement.view.containerView = new ContainerView();
            jcfManagement.view.log_sidebar = new LogSidebarView({
                el: "#sidebar"
            });
            jcfManagement.view.log_content = new LogContentView();
            sidebarManager.render(jcfManagement.view.log_sidebar);
            jcfManagement.view.log_content.render();
        },
        showSysIndex: function() {
            $("#sidebar").html("");
            appView.showSysIndex();
        },
        authMgr: function() {
            var params = {};
            this.authMgrUser(params);
        },
        authMgrUser: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("userMgr");
            appView.authMgrUser(params);
        },
        addUser: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("userMgr");
            appView.addUser(params);
        },
        detailUser: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("userMgr");
            appView.detailUser(params);
        },
        modifyUser: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("userMgr");
            appView.modifyUser(params);
        },
        authMgrRole: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("roleMgr");
            appView.authMgrRole(params);
        },
        addRole: function() {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("roleMgr");
            appView.addRole();
        },
        updateRole: function(params) {
            this.renderAuth();
            jcfManagement.view.menu.select("authMgr");
            jcfManagement.view.auth_sidebar.select("roleMgr");
            appView.updateRole(params);
        },
        //服务器管理部分路由
        serverMgr: function(params) {
            this.renderServer();
            jcfManagement.view.menu.select("serverMgr");
            jcfManagement.view.server_sidebar.select("");
            appView.showServerIndex(params);
        },
        serverMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            this.renderServer();
            jcfManagement.view.menu.select("serverMgr");
            jcfManagement.view.server_sidebar.select(queryString.groupId);
            appView.serverMgrGroup(params);
        },
        serverMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            this.renderServer();
            jcfManagement.view.menu.select("serverMgr");
            jcfManagement.view.server_sidebar.select(queryString.serverId);
            appView.serverMgrServer(params);
        },
        serverMemoryInfo: function(params) {
            var queryString = QueryString.parse(params);
            this.renderServer();
            jcfManagement.view.menu.select("serverMgr");
            jcfManagement.view.server_sidebar.select(queryString.serverId);
            appView.serverMemoryInfo(params);
        },
        //部署管理部分路由
        deployMgr: function(params) {
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select("");
            appView.showDeployIndex(params);
        },
        deployMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.groupId);
            appView.deployMgrGroup(params);
        },
        viewAppStatus4GroupServer: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.groupId);
            appView.viewAppStatus4GroupServer(params);
        },
        deployMgrA4ppRollback: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.groupId);
            appView.deployMgrA4ppRollback(params);
        },
        appLogCfg: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.groupId);
            appView.appLogCfg(params);
        },
        deployMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.serverId);
            appView.deployMgrServer(params);
        },
        deployMgrGroupAppConfig: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.groupId);
            appView.deployMgrGroupAppConfig(params);
        },
        deployMgrServerAppConfig: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDeploy();
            jcfManagement.view.menu.select("deployMgr");
            jcfManagement.view.deploy_sidebar.select(queryString.serverId);
            appView.deployMgrServerAppConfig(params);
        },
        //服务管理部分路由
        serviceMgr: function(params) {
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select("");
            appView.showServiceIndex(params);
        },
        serviceMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.serviceMgrGroup(params);
        },
        groupServiceDetail: function(params) {
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.groupServiceDetail(params);
        },
        groupMoniOption: function(params) {
            //跳转到组度量数据展示页面
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.groupMoniOption(params);
        },
        serverMoniOption: function(params) {
            //跳转到服务器度量数据展示页面
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.serverMoniOption(params);
        },
        serviceMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.serverId);
            appView.serviceMgrServer(params);
        },
        serverServiceCfg: function(params) {
            //针对单个服务器的服务配置
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.serverId);
            appView.serverServiceCfg(params);
        },
        serviceMonitor: function(params) {
            //针对单个服务器的服务配置
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.serverId);
            appView.serviceMonitor(params);
        },
        serviceDegradeConfig: function(params) {
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.serviceDegradeConfig(params);
        },
        serviceGrayConfig: function(params) {
            var queryString = QueryString.parse(params);
            this.renderService();
            jcfManagement.view.menu.select("serviceMgr");
            jcfManagement.view.service_sidebar.select(queryString.groupId);
            appView.serviceGrayConfig(params);
        },
        //数据源管理部分
        domainDataSource: function() {
            this.renderDataSource();
            jcfManagement.view.menu.select("dataSrcMgr");
            jcfManagement.view.dataSource_sidebar.select("");
            var DataSourceTabbarView = require("travsky/jcf/1.0.0/view/dataSource/dataSourceTabbar_view-debug");
            var dataSourceTabbarView = new DataSourceTabbarView();
            dataSourceTabbarView.render();
            appView.domainDataSource();
        },
        groupDataSource: function(params) {
            var queryString = QueryString.parse(params);
            this.renderDataSource();
            jcfManagement.view.menu.select("dataSrcMgr");
            jcfManagement.view.dataSource_sidebar.select(queryString.groupId);
            var GroupDataSourceTabbarView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceTabbar_view-debug");
            var groupDataSourceTabbarView = new GroupDataSourceTabbarView({
                queryString: queryString
            });
            groupDataSourceTabbarView.render();
            appView.groupDataSource(params);
        },
        serverDataSource: function(params) {
            //数据源管理，点击单个服务器
            var queryString = QueryString.parse(params);
            this.renderDataSource();
            jcfManagement.view.menu.select("dataSrcMgr");
            jcfManagement.view.dataSource_sidebar.select(queryString.serverId);
            var ServerDataSourceTabbarView = require("travsky/jcf/1.0.0/view/dataSource/serverDataSourceTabbar_view-debug");
            var serverDataSourceTabbarView = new ServerDataSourceTabbarView({
                queryString: queryString
            });
            serverDataSourceTabbarView.render();
            appView.serverDataSource(params);
        },
        //上下文管理部分
        contextMgr: function() {
            this.renderContext();
            jcfManagement.view.menu.select("contextMgr");
            jcfManagement.view.context_sidebar.select("");
            appView.showContextIndex();
        },
        contextMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            this.renderContext();
            jcfManagement.view.menu.select("contextMgr");
            jcfManagement.view.context_sidebar.select(queryString.groupId);
            appView.contextMgrGroup(params);
        },
        contextMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            this.renderContext();
            jcfManagement.view.menu.select("contextMgr");
            jcfManagement.view.context_sidebar.select(queryString.serverId);
            var ServerContextTabbarView = require("travsky/jcf/1.0.0/view/context/serverContextTabbar_view-debug");
            var serverContextTabbarView = new ServerContextTabbarView({
                queryString: queryString
            });
            serverContextTabbarView.render();
            appView.contextMgrServer(params);
        },
        //日志管理部分
        logMgr: function() {
            this.renderLog();
            jcfManagement.view.menu.select("logMgr");
            jcfManagement.view.log_sidebar.select("");
            appView.showLogIndex();
        },
        logMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            this.renderLog();
            jcfManagement.view.menu.select("logMgr");
            jcfManagement.view.log_sidebar.select(queryString.groupId);
            appView.logMgrGroup(params);
        }
    });
    return AppRouter;
});

define("travsky/jcf/1.0.0/util/SidebarManager-debug", [], function(require, exports, module) {
    exports.render = function(sidebar) {
        if (window.jcfManagement.current_sidebar === sidebar) {
            return;
        } else {
            window.jcfManagement.current_sidebar = sidebar;
            sidebar.render();
        }
    };
});

define("travsky/jcf/1.0.0/view/menu_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var menuViewTemplate = require("travsky/jcf/1.0.0/template/menu-debug.tpl");
    var MenuView = Marionette.ItemView.extend({
        template: _.template(menuViewTemplate),
        initialize: function() {
            this.listenTo(this.model, "change", this.render);
        },
        select: function(current) {
            this.model.set("current", current);
        }
    });
    return MenuView;
});

define("travsky/jcf/1.0.0/template/menu-debug.tpl", [], '<%for(var i = 0 ; i < menus.length; i ++){%>\n	<div>\n		<a href="#<%=menus[i].key%>" class="menu<%=i+1%> <%if(menus[i].key==current){%>select<%}%>"><%=menus[i].value%></a>\n	</div>\n<%}%>\n\n');

define("travsky/jcf/1.0.0/view/container_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/container-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#indexContantRegion",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/container-debug.tpl", [], '<div id="global" class="message">\n\n</div>\n<div id="tabbar" class="tabbar">\n	\n</div>\n<div id="content">\n	\n</div>\n<div id="tip">\n	\n</div>');

define("travsky/jcf/1.0.0/view/auth/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/auth/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {},
        initialize: function() {
            this.groups = this.getGroups();
            this.current = "";
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups,
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            return [ {
                groupId: "userMgr",
                groupName: "用户管理"
            }, {
                groupId: "roleMgr",
                groupName: "角色管理"
            } ];
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/auth/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list">\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n	  			<span class="open_or_closeGroup groupOpen"></span>\n 			<%}%>\n		 		<a href="#authMgr/<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a href="#authMgr/<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>\n');

define("travsky/jcf/1.0.0/view/server/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/server/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "serverMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        },
        refresh: function() {
            this.groups.fetch({
                reset: true,
                data: {
                    selectItem: "serverMgr"
                }
            });
        }
    });
    return SidebarView;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-11-29
 * Time: 下午03:37:11
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/collection/group_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var GroupModel = require("travsky/jcf/1.0.0/model/group_model-debug");
    var GroupCollection = Backbone.Collection.extend({
        model: GroupModel,
        url: "/" + appName + "/loadAllNode.action",
        initialize: function() {},
        parse: function(response) {
            return response;
        }
    });
    return GroupCollection;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-9
 * Time: 上午10:49:23
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/util/CommonUtil-debug", [ "travsky/jcf/1.0.0/view/errorPage_view-debug", "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var ErrorPageView = require("travsky/jcf/1.0.0/view/errorPage_view-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var util = {};
    util.getAppName = function() {
        return "jcf";
    };
    util.showErrPage = function() {
        jcfManager.contentRegion.show(new ErrorPageView());
    };
    util.alertEsg = function(msgStr, flag) {
        if (msgStr == null) {
            msgStr = "警告信息";
        }
        var av = new AlertView({
            msg: msgStr
        });
        if (flag != null) {
            av.model.set("flag", flag + "");
        }
        jcfManager.dialogRegion.show(av);
    };
    util.checkStrIsIp = function(val) {
        var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
        if (val.match(regular)) {
            return true;
        } else {
            return false;
        }
    };
    util.getFefreshPageNum = function() {
        return 50;
    };
    util.getAppName2 = function() {
        return window.location.pathname.replace(/\//g, "");
    };
    util.appendURLWithDate = function(url) {
        var timstamp = new Date().valueOf();
        if (url.indexOf("?") >= 0) {
            url = url + "&t=" + timstamp;
        } else {
            url = url + "?t=" + timstamp;
        }
        return url;
    };
    util.getLoginHref = function() {
        var logHref = "/" + jcfManager.appName + "/login.html";
        return logHref;
    };
    util.checkFileSize = function(target, maxSize) {
        //maxSize 单位M
        var flag = false;
        var isIE = /msie/i.test(navigator.userAgent) && !window.opera;
        var fileSize = 0;
        if (isIE && !target.files) {
            var filePath = target.value;
            var fileSystem = new ActiveXObject("Scripting.FileSystemObject");
            var file = fileSystem.GetFile(filePath);
            fileSize = file.Size;
        } else {
            fileSize = target.files[0].size;
        }
        var size = fileSize / 1024;
        var tt = maxSize * 1e3;
        if (size > tt) {
            flag = false;
            alert("附件不能大于" + maxSize + "M");
        } else {
            flag = true;
        }
        return flag;
    };
    util.getFormInputObj = function(formIds) {
        // 异步操作
        var obj = {};
        for (var i = 0; i < formIds.length; i++) {
            var curId = formIds[i];
            var val = $.trim($("#" + curId).val());
            var evalStr = "obj." + curId + "='" + val + "' ;";
            eval(evalStr);
        }
        return obj;
    };
    util.dealAjaxRequestWithoutParam = function(serverURL) {
        //异步操作
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            url: serverURL,
            type: "POST",
            dataType: "json",
            timeout: 1e5,
            //超时时间设置，单位毫秒
            error: function(data) {
                //alert('操作出错!');
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    util.dealAjaxRequest4SimpleParam = function(serverURL, simpleJsonData) {
        //异步操作
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            url: serverURL,
            type: "POST",
            timeout: 1e5,
            //超时时间设置，单位毫秒
            data: simpleJsonData,
            dataType: "json",
            error: function(data) {
                //alert('操作出错!') ;
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    util.dealAjaxRequest4JSObj = function(serverURL, jsObjData) {
        //异步操作
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            contentType: "application/json",
            url: serverURL,
            type: "POST",
            timeout: 1e5,
            //超时时间设置，单位毫秒
            data: JSON.stringify(jsObjData),
            dataType: "json",
            error: function(data) {
                //alert('操作出错!') ;
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    util.dealSYNCHAjaxRequestWithoutParam = function(serverURL) {
        //同步操作无参数访问
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            url: serverURL,
            async: false,
            type: "POST",
            dataType: "json",
            timeout: 1e5,
            //超时时间设置，单位毫秒
            error: function(data) {
                //alert('操作出错!');
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    util.dealSYNCHAjaxRequest4SimpleParam = function(serverURL, simpleJsonData) {
        //同步ajax访问
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            url: serverURL,
            async: false,
            type: "POST",
            timeout: 1e5,
            //超时时间设置，单位毫秒
            data: simpleJsonData,
            dataType: "json",
            error: function(data) {
                //alert('操作出错!') ;
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    util.dealSYNCHAjaxRequest4JSObj = function(serverURL, jsObjData) {
        //同步操作
        var loginHref = util.getLoginHref();
        var defer = $.Deferred();
        var option = {
            contentType: "application/json",
            url: serverURL,
            timeout: 1e5,
            //超时时间设置，单位毫秒
            async: false,
            type: "POST",
            data: JSON.stringify(jsObjData),
            dataType: "json",
            error: function(data) {
                //alert('操作出错!') ;
                window.location = loginHref;
            },
            success: function(result) {
                defer.resolve(result);
            }
        };
        $.ajax(option);
        //发送ajax请
        return defer.promise();
    };
    module.exports = util;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-6-18
 * Time: 下午05:04:19
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/errorPage_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/errorPage-debug.tpl");
    var ErrorPageView = Marionette.ItemView.extend({
        tagName: "div",
        className: "row",
        template: _.template(viewTemplateStr)
    });
    return ErrorPageView;
});

define("travsky/jcf/1.0.0/template/errorPage-debug.tpl", [], '<div class="col-sm-12">\n    <div class="error-container">\n        <div class="well">\n            <h1 class="grey lighter smaller"> <span class="blue bigger-125"><i class="icon-random"></i>500</span>操作错误页面</h1>\n            <hr>\n            <h3 class="lighter smaller">\n                But we are working<i class="icon-wrench icon-animated-wrench bigger-125"></i>on it!\n            </h3>\n            <div class="space"></div>\n            <div>\n                <h4 class="lighter smaller">Meanwhile, try one of the following:</h4>\n                <ul class="list-unstyled spaced inline bigger-110 margin-15">\n                    <li><i class="icon-hand-right blue"></i>Read the faq </li>\n                    <li><i class="icon-hand-right blue"></i>Give us more info on how this specific error occurred!</li>\n                </ul>\n            </div>\n            <div class="space"></div>\n        </div>\n    </div>\n</div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-14
 * Time: 下午03:29:16
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/alert_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/alert-debug.tpl");
    require("bs-modal-debug")($);
    var AlertModel = require("travsky/jcf/1.0.0/model/alert_model-debug");
    var AlertView = Marionette.ItemView.extend({
        initialize: function(options) {
            var msg = "";
            if (options != null && options.msg != null) {
                msg = options.msg;
            }
            this.model = this.model || new AlertModel();
            if (msg.length > 0) {
                this.model.set("msg", msg);
            }
        },
        template: _.template(viewTemplateStr),
        onShow: function() {
            var alr = $("#ycj-alert");
            alr.modal({
                backdrop: "static"
            });
            alr.modal("show");
        }
    });
    return AlertView;
});

define("travsky/jcf/1.0.0/template/alert-debug.tpl", [], ' <div id="ycj-alert" class="modal" >\n    <div class="modal-dialog modal-sm">\n      <div class="modal-content">\n        <div class="modal-header">\n          <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>\n          <h5 class="modal-title"><i class="fa fa-exclamation-circle"></i>提示:</h5>\n        </div>\n        <div class="modal-body small" style="text-align:center">\n          <p><span  <%if(flag=="true"){%>class = "text-success"<%}else if(flag=="false"){%>class = "text-danger"<%}else{%>class = "text-info"<%}%>  ><%=msg%></span></p>\n        </div>\n        <div class="modal-footer" >\n          <button type="button" class="btn btn-primary confirmOK" data-dismiss="modal">确认</button>\n        </div>\n      </div>\n    </div>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-14
 * Time: 下午03:34:47
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/alert_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var AlertModel = Backbone.Model.extend({
        defaults: {
            flag: "false",
            msg: "提示内容"
        }
    });
    return AlertModel;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-11-29
 * Time: 下午03:31:47
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/group_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupModel = Backbone.Model.extend({
        defaults: function() {
            return {
                groupName: "",
                groupID: "",
                servers: []
            };
        },
        urlRoot: ""
    });
    return GroupModel;
});

define("travsky/jcf/1.0.0/template/server/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n	  			<span class="open_or_closeGroup groupOpen"></span>\n 			<% } %>\n		 		<a href="#serverMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a href="#serverMgr/server/param/serverId=<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>\n');

define("travsky/jcf/1.0.0/view/deploy/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/deploy/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "deployMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/deploy/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n	  			<span class="open_or_closeGroup groupOpen" ></span>\n 			<% } %>\n		 		<a href="#deployMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a href="#deployMgr/server/param/serverId=<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>\n');

define("travsky/jcf/1.0.0/view/service/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/service/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "serviceMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/service/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n				<span class="open_or_closeGroup groupOpen"></span>\n 			<% } %>\n		 		<a href="#serviceMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a href="#serviceMgr/server/param/serverId=<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>');

define("travsky/jcf/1.0.0/view/service/serviceContent_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/service/serviceContent-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#content",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/service/serviceContent-debug.tpl", [], '<div id="content-header">\n\n</div>\n<div id="content-body">\n\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "dataSrcMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/dataSource/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list">\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers.length>0){%>\n	  			<span class="open_or_closeGroup groupOpen" ></span>\n 			<% } %>\n		 		<a href="#dataSrcMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a href="#dataSrcMgr/server/param/serverId=<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>');

define("travsky/jcf/1.0.0/view/dataSource/dataSourceContent_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/dataSource/dataSourceContent-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#content",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/dataSource/dataSourceContent-debug.tpl", [], '<div id="content-header">\n\n</div>\n<div id="content-body">\n\n</div>');

define("travsky/jcf/1.0.0/view/context/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/context/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "contextMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/context/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n	  			<span class="open_or_closeGroup groupOpen" ></span>\n 			<% } %>\n		 		<a href="#contextMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li id="<%=groups[i].servers[j].id%>" class="server <%if(groups[i].servers[j].id == current){%>select<%}%>">\n	    	 		<a  href="#contextMgr/server/param/serverId=<%=groups[i].servers[j].id%>" class="server"><%=groups[i].servers[j].name%></a>\n	    	 	</li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>\n');

define("travsky/jcf/1.0.0/view/context/contextContent_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/context/contextContent-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#content",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/context/contextContent-debug.tpl", [], '<div id="content-header">\n\n</div>\n<div id="content-body">\n\n</div>');

define("travsky/jcf/1.0.0/view/log/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var sidebarViewTemplate = require("travsky/jcf/1.0.0/template/log/sidebar-debug.tpl");
    var SidebarView = Backbone.View.extend({
        template: _.template(sidebarViewTemplate),
        events: {
            "click ul li.group span.open_or_closeGroup": "toggleGroup"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groups = this.getGroups();
            this.current = "";
            this.groups.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                groups: this.groups.toJSON(),
                current: this.current
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("select");
            if (current != "") {
                this.$el.find("#" + current).addClass("select");
            }
        },
        getGroups: function() {
            var gc = new GroupCollection();
            gc.fetch({
                reset: true,
                data: {
                    selectItem: "logMgr"
                }
            });
            return gc;
        },
        toggleGroup: function(e) {
            this.$el.find(e.target).toggleClass("groupOpen");
            this.$el.find(e.target).toggleClass("groupClose");
            this.$el.find(e.target).parent().siblings().toggleClass("hide");
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/log/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li id="<%=groups[i].groupId%>" class="group <%if(groups[i].groupId == current){%>select<%}%>">\n		 	<a href="#logMgr/group/param/groupId=<%=groups[i].groupId%>" class="group"><%=groups[i].groupName%></a>\n	  	</li>\n    </ul>\n <%}%>\n');

define("travsky/jcf/1.0.0/view/log/logContent_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/log/logContent-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#content",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ContainerView;
    s;
});

define("travsky/jcf/1.0.0/template/log/logContent-debug.tpl", [], '<div id="content-header">\n\n</div>\n<div id="content-body">\n\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/dataSourceTabbar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var serverDataSourceTabbarViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/dataSourceTabbar-debug.tpl");
    var ServerDataSourceTabbarView = Backbone.View.extend({
        el: "#tabbar",
        template: _.template(serverDataSourceTabbarViewTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return ServerDataSourceTabbarView;
});

define("travsky/jcf/1.0.0/template/dataSource/dataSourceTabbar-debug.tpl", [], "");

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceTabbar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceAuthCheckUtil = require("travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug");
    var groupDataSourceTabbarViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceTabbar-debug.tpl");
    var GroupDataSourceTabbarView = Backbone.View.extend({
        el: "#tabbar",
        template: _.template(groupDataSourceTabbarViewTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.queryString = options.queryString;
            this.groupId = options.queryString.groupId;
            this.labels = this.getLabels();
            this.current = options.queryString.selectTab || "groupDataSource";
            this.dataSourceListAuth = DataSourceAuthCheckUtil.getGroupDataSourceListAuth();
            //组数据源列表
            this.dataSourceDeployAuth = DataSourceAuthCheckUtil.getGroupDataSourceDeployAuth();
            //组数据源部署
            this.dataSourceConfigAuth = DataSourceAuthCheckUtil.getGroupDataSourceConfigAuth();
        },
        render: function() {
            this.$el.html(this.template({
                labels: this.labels,
                current: this.current,
                groupId: this.groupId,
                dataSourceDeployAuth: this.dataSourceDeployAuth,
                dataSourceConfigAuth: this.dataSourceConfigAuth,
                dataSourceListAuth: this.dataSourceListAuth
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("active");
            if (current != "") {
                this.$el.find("#" + current).addClass("active");
            }
        },
        getLabels: function() {
            return [ {
                id: "groupDataSource",
                name: "组数据源列表"
            }, {
                id: "groupDeployDataSource",
                name: "组数据源部署"
            }, {
                id: "groupDataSourceConfig",
                name: "组数据源配置"
            } ];
        }
    });
    return GroupDataSourceTabbarView;
});

define("travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    AuthCheckUtil.getDataSourceManagementAuth = function() {
        var code = "5_1_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerDataSourceConfigAuth = function() {
        var code = "5_2_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerDataSourceUninstallAuth = function() {
        var code = "5_2_2";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerDataSourceRestartAuth = function() {
        var code = "5_2_3";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerDataSourceDetailViewAuth = function() {
        var code = "5_2_4";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerDataSourceDeployAuth = function() {
        var code = "5_2_5";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getGroupDataSourceDeployAuth = function() {
        var code = "5_2_6";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getAllDataSourceListAuth = function() {
        var code = "5_2_7";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getGroupDataSourceConfigAuth = function() {
        var code = "5_3_7-1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getGroupDataSourceListAuth = function() {
        var code = "5_3_7-2";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    return AuthCheckUtil;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceTabbar-debug.tpl", [], '<ul id="dataSourceNavbar" class="nav nav-tabs">\n	<% for(var i = 0; i < labels.length; i++){%>\n		<%if ((labels[i].id=="groupDataSource")\n			||((labels[i].id=="groupDeployDataSource") && (dataSourceDeployAuth=="true"))||\n			((labels[i].id=="groupDataSourceConfig") && (dataSourceConfigAuth=="true"))){%>\n				<li id="<%=labels[i].id%>" class="<%if(current==labels[i].id){%>active<%}%>">\n					<a href="#dataSrcMgr/group/param/groupId=<%=groupId%>&selectTab=<%=labels[i].id%>"><%=labels[i].name%></a>\n				</li>\n		<%}%>\n	<%}%>\n</ul>');

define("travsky/jcf/1.0.0/view/dataSource/serverDataSourceTabbar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceAuthCheckUtil = require("travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug");
    var serverDataSourceTabbarViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDataSourceTabbar-debug.tpl");
    var ServerDataSourceTabbarView = Backbone.View.extend({
        el: "#tabbar",
        template: _.template(serverDataSourceTabbarViewTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.queryString = options.queryString;
            this.serverId = options.queryString.serverId;
            this.labels = this.getLabels();
            this.current = options.queryString.selectTab || "dataSource";
            this.deployDataSourceAuth = DataSourceAuthCheckUtil.getServerDataSourceDeployAuth();
        },
        render: function() {
            this.$el.html(this.template({
                labels: this.labels,
                current: this.current,
                serverId: this.serverId,
                deployDataSourceAuth: this.deployDataSourceAuth
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("active");
            if (current != "") {
                this.$el.find("#" + current).addClass("active");
            }
        },
        getLabels: function() {
            return [ {
                id: "dataSource",
                name: "数据源列表"
            }, {
                id: "deployDataSource",
                name: "新增数据源"
            }, {
                id: "testDataSource",
                name: "测试数据源"
            } ];
        }
    });
    return ServerDataSourceTabbarView;
});

define("travsky/jcf/1.0.0/template/dataSource/serverDataSourceTabbar-debug.tpl", [], '<ul id="dataSourceNavbar" class="nav nav-tabs">\n	<% for(var i = 0; i < labels.length; i++){ %>\n		<%if ((labels[i].id=="deployDataSource") && (deployDataSourceAuth!="true")){%>\n		<%}else{%>\n			<li id="<%=labels[i].id%>" class="<%if(current==labels[i].id){%>active<%}%>">\n				<a href="#dataSrcMgr/server/param/serverId=<%=serverId%>&selectTab=<%=labels[i].id%>"><%=labels[i].name%></a>\n			</li>\n		<%}%>\n	<%}%>\n</ul>\n');

define("travsky/jcf/1.0.0/view/context/serverContextTabbar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContextAuthCheckUtil = require("travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug");
    var serverContextTabbarViewTemplate = require("travsky/jcf/1.0.0/template/context/serverContextTabbar-debug.tpl");
    var ServerContextTabbarView = Backbone.View.extend({
        el: "#tabbar",
        template: _.template(serverContextTabbarViewTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.queryString = options.queryString;
            this.serverId = options.queryString.serverId;
            this.labels = this.getLabels();
            this.current = options.queryString.selectTab || "contextInfo";
            this.contextConfigAuth = ContextAuthCheckUtil.getServerContextConfigAuth();
        },
        render: function() {
            this.$el.html(this.template({
                labels: this.labels,
                current: this.current,
                serverId: this.serverId,
                contextConfigAuth: this.contextConfigAuth
            }));
            return this;
        },
        select: function(current) {
            this.current = current;
            this.$el.find("li").removeClass("active");
            if (current != "") {
                this.$el.find("#" + current).addClass("active");
            }
        },
        getLabels: function() {
            return [ {
                id: "contextInfo",
                name: "上下文信息"
            }, {
                id: "contextConfig",
                name: "上下文配置"
            } ];
        }
    });
    return ServerContextTabbarView;
});

define("travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    AuthCheckUtil.getContextManagementAuth = function() {
        var code = "6_1_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getServerContextConfigAuth = function() {
        var code = "6_2_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getServerContextRestartAuth = function() {
        var code = "6_2_2";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    return AuthCheckUtil;
});

define("travsky/jcf/1.0.0/template/context/serverContextTabbar-debug.tpl", [], '<ul id="ContextNavbar" class="nav nav-tabs">\n	<% for(var i = 0; i < labels.length; i++){ %>\n		<%if ((labels[i].id=="contextConfig") && (contextConfigAuth!="true")){%>\n		<%}else{%>\n			<li id="<%=labels[i].id%>" class="<%if(current==labels[i].id){%>active<%}%>">\n				<a href="#contextMgr/server/param/serverId=<%=serverId%>&selectTab=<%=labels[i].id%>"><%=labels[i].name%></a>\n			</li>\n		<%}%>\n	<%}%>\n</ul>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-3
 * Time: 下午05:33:32
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/util/SidebarUtil-debug", [ "jquery-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    String.prototype.startWith = function(str) {
        var reg = new RegExp("^" + str);
        return reg.test(this);
    };
    var SidebarUitl = {};
    var infos = [ "authMgr", "serverMgr", "deployMgr", "serviceMgr", "dataSrcMgr", "contextMgr", "logMgr" ];
    SidebarUitl.getModuleName = function() {
        var hash = window.location.hash;
        var retStr = null;
        if (hash != null && $.trim(hash).length > 0) {
            for (var i = 0; i < infos.length; i++) {
                var info = infos[i];
                if (hash.startWith("#" + info)) {
                    retStr = info;
                    break;
                }
            }
        } else {
            //alert("地址有问题！") ; 
            retStr = "authMgr";
        }
        return retStr;
    };
    return SidebarUitl;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-16
 * Time: 下午03:02:10
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/api/IndexApi-debug", [ "travsky/jcf/1.0.0/model/navbar_model-debug", "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/controller/IndexController-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/navbar_view-debug", "travsky/jcf/1.0.0/controller/SidebarController-debug", "travsky/jcf/1.0.0/view/sidebar_view-debug", "querystring-debug", "travsky/jcf/1.0.0/view/foot_view-debug", "travsky/jcf/1.0.0/view/tipIndex_view-debug" ], function(require, exports, module) {
    var NavbarModel = require("travsky/jcf/1.0.0/model/navbar_model-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var IndexController = require("travsky/jcf/1.0.0/controller/IndexController-debug");
    var IndexApi = {
        getLoginUser: function() {
            var defer = $.Deferred();
            var navbarModel = new NavbarModel();
            navbarModel.fetch({
                success: function(data) {
                    defer.resolve(data);
                }
            });
            return defer.promise();
        },
        getGroupCollection: function(selectedItem) {
            var defer = $.Deferred();
            var groupCollection = new GroupCollection();
            groupCollection.fetch({
                reset: true,
                data: {
                    selectItem: selectedItem
                },
                success: function(data) {
                    defer.resolve(data);
                }
            });
            return defer.promise();
        },
        showNavbar: function() {
            IndexController.showNavbar();
        },
        showSidebar: function(selectedItem) {
            IndexController.showSidebar(selectedItem);
        },
        showMainContent: function() {
            IndexController.showMainContent();
        },
        showFootView: function() {
            IndexController.showFootView();
        }
    };
    return IndexApi;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-9
 * Time: 上午10:45:43
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/navbar_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var NavbarModel = Backbone.Model.extend({
        defaults: function() {
            return {
                loginUserName: "",
                loginUserRole: "",
                loginID: ""
            };
        },
        url: "/" + appName + "/getLoginUserInfo.action"
    });
    return NavbarModel;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-18
 * Time: 上午10:15:30
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/controller/IndexController-debug", [ "jquery-debug", "marionette-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/navbar_view-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/model/navbar_model-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/controller/SidebarController-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/view/sidebar_view-debug", "querystring-debug", "travsky/jcf/1.0.0/view/foot_view-debug", "travsky/jcf/1.0.0/view/tipIndex_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Marionette = require("marionette-debug");
    var SidebarUitl = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var NavbarView = require("travsky/jcf/1.0.0/view/navbar_view-debug");
    //var MenuView = require("../view/menu_view");
    var FootView = require("travsky/jcf/1.0.0/view/foot_view-debug");
    var SidebarView = require("travsky/jcf/1.0.0/view/sidebar_view-debug");
    var TipIndexView = require("travsky/jcf/1.0.0/view/tipIndex_view-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var SidebarController = require("travsky/jcf/1.0.0/controller/SidebarController-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var IndexController = {
        showNavbar: function() {
            //显示顶部导航栏
            var fetchingLoginUser = jcfManager.request("login:user");
            $.when(fetchingLoginUser).done(function(nmodel) {
                if (nmodel.get("flag") == "false" || nmodel.get("jcfmanageType") == "error") {
                    var av = new AlertView({
                        msg: "管理中心主备配置文件存在异常，请及时修改！"
                    });
                    jcfManager.dialogRegion.show(av);
                }
                var nv = new NavbarView({
                    model: {
                        loginInfo: nmodel.toJSON()
                    }
                });
                jcfManager.navbarRegion.show(nv);
            });
        },
        showSidebar: function(selectedItem) {
            //显示左面sidebar视图
            SidebarController.showSidebar(selectedItem);
        },
        showMainContent: function() {
            //显示index主页面内容
            //暂时先仅显示简单提示页面
            var tipIndexView = new TipIndexView();
            jcfManager.contentRegion.show(tipIndexView);
        },
        showFootView: function() {
            //显示页脚部分信息
            jcfManager.footRegion.show(new FootView());
        }
    };
    return IndexController;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-3
 * Time: 上午10:27:06
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/navbar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/model/navbar_model-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/controller/SidebarController-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/view/sidebar_view-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var navbarViewTemplate = require("travsky/jcf/1.0.0/template/navbar-debug.tpl");
    var Marionette = require("marionette-debug");
    var NavbarModel = require("travsky/jcf/1.0.0/model/navbar_model-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/navbar-debug.tpl");
    var SidebarController = require("travsky/jcf/1.0.0/controller/SidebarController-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var NavbarView = Backbone.View.extend({
        template: _.template(navbarViewTemplate),
        initialize: function() {},
        events: {
            "click ul.selectItem li": "selectNavItem",
            "click #mylogout": "logout",
            "click #indexLogoImg": "clickIndexLogoImg",
            "click #backup": "backup"
        },
        clickIndexLogoImg: function(e) {
            e.preventDefault();
            e.stopPropagation();
            appRouter.navigate("sysIndex", {
                trigger: true
            });
        },
        render: function() {
            this.$el.html(this.template(this.model));
            return this;
        },
        logout: function() {
            var appName = util.getAppName();
            $.get("/" + appName + "/logout.action").done(function() {
                window.location.href = "/" + appName + "/login.html";
            });
        },
        backup: function() {
            var serverURL = "/" + jcfManager.appName + "/server/backupServer.action";
            var jsParam = {};
            jsParam.operStatus = "1";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "succeed") {
                    var av = new AlertView({
                        msg: "备份成功"
                    });
                    jcfManager.dialogRegion.show(av);
                } else {
                    var av = new AlertView({
                        msg: "备份失败"
                    });
                    jcfManager.dialogRegion.show(av);
                }
            });
        }
    });
    return NavbarView;
});

define("travsky/jcf/1.0.0/template/navbar-debug.tpl", [], '<div class="container-fluid">\n	<div class="navbar-header">\n		<a class="navbar-brand" id = "indexLogoImg"  href="#">\n    		<span class="brand" href="javascript:void(0)">\n    			<img src="./static/imgs/logo.png" width="111" height="30" alt="w3cschool logo"/>\n    		</span>\n    		<%\n    		if(loginInfo.jcfmanageType == \'error\' || loginInfo.flag == "false"){\n    			%>&nbsp;<span class="brand" id = "error_Type" style="color:red;font-size:12px">主备配置文件出现异常，请及时修改</span><%\n    		}else{\n    			if(loginInfo.jcfmanageType == \'master\'){%>    		\n    			&nbsp;<span class="brand" id = "jcfmanage_Type" >主管理中心</span><%\n    			}else if(loginInfo.jcfmanageType == \'backup\'){%>\n    				&nbsp;<span class="brand" id = "jcfmanage_Type" >备份管理中心</span><%\n    			}\n    		}%>\n    	</a>\n	</div>\n	<div id="navbar" class="navbar-collapse collapse">\n		<p class="navbar-text pull-right">\n			<%			\n			if(loginInfo.jcfmanageType == \'master\'){\n			  %><a class = "myhand" id = "backup">备份</a>&nbsp;&nbsp;<%\n			}\n			%> 			\n    		<a class = "myhand" id = "mylogout">退出</a>&nbsp;&nbsp;&nbsp;&nbsp;用户:<%=loginInfo.loginUserName%> \n    		>>&nbsp;<%=loginInfo.loginUserRole%>\n    	</p>\n    	<input type = "hidden" id = "indexHiddenLoginId" value = "<%=loginInfo.loginID%>"/>\n    	<input type = "hidden" id = "indexHiddenLoginUserRole" value = "<%=loginInfo.loginUserRole%>"/>\n    </div>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-18
 * Time: 下午02:42:22
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/controller/SidebarController-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/view/sidebar_view-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var SidebarView = require("travsky/jcf/1.0.0/view/sidebar_view-debug");
    var SidebarController = {
        showSidebar: function(selectedItem) {
            console.log("show side bar");
            var fetchingGroupCollection = jcfManager.request("index:sidebarCollection", selectedItem);
            $.when(fetchingGroupCollection).done(function(nmodel) {
                jcfManager.sidebarRegion.show(new SidebarView({
                    collection: nmodel
                }));
            });
        }
    };
    return SidebarController;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-3
 * Time: 上午10:34:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/sidebar_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/group_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/group_model-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var navbarViewTemplate = require("travsky/jcf/1.0.0/template/sidebar-debug.tpl");
    var GroupCollection = require("travsky/jcf/1.0.0/collection/group_collection-debug");
    var SidebarUitl = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var SidebarView = Backbone.View.extend({
        //el: $('#MySidebarIndexDiv'),
        tagName: "div",
        //    	className:"well sidebar-nav",
        template: _.template(navbarViewTemplate),
        initialize: function() {},
        render: function() {
            this.$el.html(this.template({
                groups: this.collection.toJSON()
            }));
            return this;
        },
        events: {
            "click ul li.group span.open_or_closeGroup": "open_or_closeGroup",
            "click ul li.group a.groupName": "clickGroup",
            "click ul li.server a": "clickServer"
        },
        open_or_closeGroup: function(event) {
            event.stopPropagation();
            var $clickSpan = $(event.target);
            var $curli = $clickSpan.parent();
            var curIconIsOpen = $clickSpan.hasClass("groupOpen");
            var $ul = $curli.parent(".nav-list");
            var groupRemoveClass = "groupClose";
            var groupAddClass = "groupOpen";
            var liRemoveClass = "notShow";
            var liAddClass = "show";
            if (curIconIsOpen) {
                groupRemoveClass = "groupOpen";
                groupAddClass = "groupClose";
                liRemoveClass = "show";
                liAddClass = "hide";
            }
            $clickSpan.removeClass(groupRemoveClass).addClass(groupAddClass);
            $ul.find("li").not(".nav-header").each(function() {
                $(this).removeClass(liRemoveClass).addClass(liAddClass);
            });
            return false;
        },
        clickGroup: function(event) {
            event.stopPropagation();
            var navItem = SidebarUitl.getModuleName();
            var groupId = $(event.target).attr("myid");
            if (navItem == null) {
                alert("页面获取的hash值无效!");
            } else {
                if ("authMgr" == navItem) {
                    window.appRouter.navigate("authMgr/" + groupId, {
                        trigger: true
                    });
                } else {
                    //除了权限管理静态模块以外的其他模块
                    window.appRouter.navigate(navItem + "/group/param/groupId=" + groupId, {
                        trigger: true
                    });
                }
            }
        },
        clickServer: function(event) {
            var serverId = $(event.target).attr("myid");
            var navItem = SidebarUitl.getModuleName();
            if (navItem == null) {
                alert("页面获取的hash值无效!");
            } else {
                window.appRouter.navigate(navItem + "/server/param/serverId=" + serverId, {
                    trigger: true
                });
            }
            var $curLi = $(event.target).parent();
            var $uls = $curLi.parent("ul").parent("div").find("ul");
            $uls.find("li.server").removeClass("active");
            $curLi.addClass("active");
            window.appRouter.navigate(navItem + "/server/param/serverId=" + serverId, {
                trigger: true
            });
        }
    });
    return SidebarView;
});

define("travsky/jcf/1.0.0/template/sidebar-debug.tpl", [], ' <% for(var i=0; i < groups.length; i++){ %>\n 	<ul class="nav nav-list" >\n 		<li class="nav-header group">\n 			<% if(groups[i].servers != undefined&&groups[i].servers .length>0){%>\n	  			<span class="open_or_closeGroup myhand groupOpen" >&nbsp;&nbsp;</span>\n 			<% }else{\n 			%>\n 				&nbsp;&nbsp;&nbsp;\n 			<%\n 			}%>\n		 		<a class="groupName myhand"  myid = "<%=groups[i].groupId%>" ><%=groups[i].groupName%></a>\n	  	</li>\n	  	\n	    <% if(groups[i].servers != undefined){ %>\n	    	 <% for(var j=0; j < groups[i].servers.length; j++){ %>\n	    	 	<li class = "server"><a class = "myhand" myid = "<%=groups[i].servers[j].id%>">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<%=groups[i].servers[j].name%></a></li>\n	    	 <%}%>\n	    <%}%>\n    </ul>\n <%}%>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-16
 * Time: 下午01:59:54
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/foot_view-debug", [ "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/foot-debug.tpl");
    var FootView = Marionette.ItemView.extend({
        tagName: "p",
        className: "muted credit",
        template: _.template(viewTemplateStr)
    });
    return FootView;
});

define("travsky/jcf/1.0.0/template/foot-debug.tpl", [], "<!-- foot region -->");

/**
 * <pre>
 * 	功能描述:index上导航树 或则 左侧sidebar时没有确切页面跳转时的,提示页面
 * </pre>
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-3
 * Time: 上午10:34:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/tipIndex_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var authShowViewTemplate = require("travsky/jcf/1.0.0/template/tipIndex-debug.tpl");
    var TipIndxView = Backbone.View.extend({
        template: _.template(authShowViewTemplate),
        render: function() {
            this.$el.html(this.template);
            return this;
        }
    });
    return TipIndxView;
});

define("travsky/jcf/1.0.0/template/tipIndex-debug.tpl", [], '<div class="row-fluid">\n    <div>\n      <h2>提示</h2>\n      <p>请点击左侧有效的树形导航选择节点</p>\n    </div>\n </div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-3
 * Time: 上午10:12:08
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/app_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/tipIndex_view-debug", "travsky/jcf/1.0.0/view/sysIndex_view-debug", "travsky/jcf/1.0.0/api/auth/UserMgrApi-debug", "travsky/jcf/1.0.0/view/auth/userMgrLayout-debug", "travsky/jcf/1.0.0/view/auth/userList_view-debug", "travsky/jcf/1.0.0/collection/auth/user_collection-debug", "travsky/jcf/1.0.0/model/auth/user_model-debug", "travsky/jcf/1.0.0/view/auth/userModify_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/auth/userDetail_view-debug", "travsky/jcf/1.0.0/view/auth/userAdd_view-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/view/auth/roleMgrLayout-debug", "travsky/jcf/1.0.0/view/auth/roleAdd_view-debug", "ztree-core-debug", "ztree-excheck-debug", "travsky/jcf/1.0.0/view/auth/roleUpdate_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/view/server/serverMgrLayout-debug", "travsky/jcf/1.0.0/view/server/serverAdd_view-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug", "travsky/jcf/1.0.0/view/server/groupAdd_view-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/server/serverAddNext_view-debug", "travsky/jcf/1.0.0/view/server/nodeControllerCfg_view-debug", "travsky/jcf/1.0.0/view/server/domainParamCfg_view-debug", "icheck-debug", "travsky/jcf/1.0.0/view/server/serverMgr4GroupLayout-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig_registry-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig_cache-debug", "travsky/jcf/1.0.0/model/pagebar_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "travsky/jcf/1.0.0/view/server/serverSysMemoryStatisticsLayout-debug", "travsky/jcf/1.0.0/view/server/serverMgr4ServerLayout-debug", "travsky/jcf/1.0.0/view/server/serverUpdate_view-debug", "travsky/jcf/1.0.0/view/waiting_view-debug", "travsky/jcf/1.0.0/view/deploy/deployMgrLayout-debug", "travsky/jcf/1.0.0/view/deploy/deployList_view-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployMgrLayout-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabAppMgr-debug", "travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug", "travsky/jcf/1.0.0/view/deploy/rollback_view-debug", "travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug", "travsky/jcf/1.0.0/collection/deploy/groupApp_collection-debug", "travsky/jcf/1.0.0/model/deploy/groupApp_model-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug", "travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug", "travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug", "ajaxfileupload-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabCreateNewDeploy-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabServerDeployInfo-debug", "travsky/jcf/1.0.0/view/deploy/serverAppStatusLayout-debug", "travsky/jcf/1.0.0/view/deploy/serverAppConfigLayout-debug", "travsky/jcf/1.0.0/view/service/serviceMgrLayout-debug", "travsky/jcf/1.0.0/view/service/serviceTab4ListLayout-debug", "travsky/jcf/1.0.0/view/service/serviceTab4ConfigLayout-debug", "travsky/jcf/1.0.0/view/service/serviceConfig_view-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", "travsky/jcf/1.0.0/view/service/groupServiceMgrLayout-debug", "travsky/jcf/1.0.0/view/service/groupServiceTabServiceMgr-debug", "travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug", "travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", "travsky/jcf/1.0.0/view/service/monitorService_view-debug", "travsky/jcf/1.0.0/view/service/groupServiceCfg-debug", "travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug", "travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug", "travsky/jcf/1.0.0/view/service/respGroupMoni_view-debug", "my97Date-debug", "travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug", "highcharts-debug", "travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug", "travsky/jcf/1.0.0/view/service/serverServiceMgrLayout-debug", "travsky/jcf/1.0.0/view/service/serverServiceCfg_view-debug", "travsky/jcf/1.0.0/view/service/respMoni_view-debug", "travsky/jcf/1.0.0/model/service/service_degrade_config_model-debug", "travsky/jcf/1.0.0/model/service/service_gray_config_model-debug", "travsky/jcf/1.0.0/collection/dataSource/dataSource_collection-debug", "travsky/jcf/1.0.0/model/dataSource/dataSource_model-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceList_view-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceItem_view-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_collection-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_model-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceList_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceItem_view-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceWait_view-debug", "travsky/jcf/1.0.0/view/dataSource/tip_view-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceListHead_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDeployDataSource_view-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_deploy_model-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerList_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerItem_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfig_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfigHead_view-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_name_collection-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_name_model-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_config_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceList_view-debug", "travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceItem_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_config_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceConfig_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_monitor_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceMonitor_view-debug", "travsky/jcf/1.0.0/view/dataSource/serverDeployDataSource_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_deploy_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceList_view-debug", "travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceItem_view-debug", "travsky/jcf/1.0.0/view/context/highcharts-debug", "exporting-debug", "travsky/jcf/1.0.0/model/context/server_context_model-debug", "travsky/jcf/1.0.0/view/context/serverContextInfo_view-debug", "travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/context/tip_view-debug", "travsky/jcf/1.0.0/view/context/global_view-debug", "travsky/jcf/1.0.0/view/context/serverContextConfig_view-debug", "travsky/jcf/1.0.0/util/ContextUtil-debug", "travsky/jcf/1.0.0/collection/log/log_collection-debug", "travsky/jcf/1.0.0/model/log/log_model-debug", "travsky/jcf/1.0.0/view/log/logList_view-debug", "travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/log/logItem_view-debug", "travsky/jcf/1.0.0/view/log/global_view-debug", "travsky/jcf/1.0.0/view/log/tip_view-debug", "travsky/jcf/1.0.0/view/log/logConfig_view-debug", "travsky/jcf/1.0.0/util/LogUtil-debug", "travsky/jcf/1.0.0/view/log/logConfigHead_view-debug", "travsky/jcf/1.0.0/collection/log/log_app_name_collection-debug", "travsky/jcf/1.0.0/model/log/log_app_name_model-debug", "travsky/jcf/1.0.0/model/log/log_config_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var TipIndexView = require("travsky/jcf/1.0.0/view/tipIndex_view-debug");
    var SysIndexView = require("travsky/jcf/1.0.0/view/sysIndex_view-debug");
    var ErrorPageView = require("travsky/jcf/1.0.0/view/errorPage_view-debug");
    var AppView = Backbone.View.extend({
        initialize: function() {},
        showSysIndex: function() {
            //系统首页
            var sysIndeView = new SysIndexView();
            jcfManager.contentRegion.show(sysIndeView);
        },
        authMgrUser: function(params) {
            var queryString = QueryString.parse(params);
            var UserMgrApi = require("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug");
            var UserMgrLayoutView = require("travsky/jcf/1.0.0/view/auth/userMgrLayout-debug");
            $.when(UserMgrApi.getAllRoles()).done(function(data) {
                if (data.flag == "true") {
                    var rmodel = new Backbone.Model(data);
                    var userMgrLayout = new UserMgrLayoutView({
                        model: rmodel,
                        queryString: queryString
                    });
                    jcfManager.contentRegion.show(userMgrLayout);
                } else {
                    util.showErrPage();
                }
            });
        },
        addUser: function(params) {
            var UserAddView = require("travsky/jcf/1.0.0/view/auth/userAdd_view-debug");
            var serverURL = "/" + jcfManager.appName + "/user/getAllRoleList.action";
            $.when(util.dealAjaxRequestWithoutParam(serverURL)).done(function(data) {
                if (data.flag == "true") {
                    var roleList = new Backbone.Collection(data.roleList);
                    jcfManager.contentRegion.show(new UserAddView({
                        collection: roleList
                    }));
                } else {
                    util.showErrPage();
                }
            });
        },
        detailUser: function(params) {
            var queryString = QueryString.parse(params);
            var UserMgrApi = require("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug");
            var userId = queryString.userId;
            var UserDetailView = require("travsky/jcf/1.0.0/view/auth/userDetail_view-debug");
            var UserMgrApi = require("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug");
            $.when(UserMgrApi.getUserByID(userId)).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data);
                    var userDetailView = new UserDetailView({
                        model: model
                    });
                    jcfManager.contentRegion.show(userDetailView);
                } else {
                    util.showErrPage();
                }
            });
        },
        modifyUser: function(params) {
            var queryString = QueryString.parse(params);
            var UserModifyView = require("travsky/jcf/1.0.0/view/auth/userModify_view-debug");
            var userId = queryString.userId;
            var loginId = queryString.loginId;
            var searchURL = "/" + util.getAppName() + "/user/toModifyUserUI.action";
            var qdata = {
                userID: userId,
                loginId: loginId
            };
            $.when(util.dealAjaxRequest4SimpleParam(searchURL, qdata)).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data.userInfo);
                    model.set("canMod", data.canMod);
                    //model.roleId_login = $("#indexHiddenLoginId").val();
                    var userModifyView = new UserModifyView({
                        model: model,
                        roleList: data.roleList
                    });
                    jcfManager.contentRegion.show(userModifyView);
                } else {
                    util.showErrPage();
                }
            });
        },
        authMgrRole: function(params) {
            var queryString = QueryString.parse(params);
            var RoleMgrLayout = require("travsky/jcf/1.0.0/view/auth/roleMgrLayout-debug");
            var roleLayout = new RoleMgrLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(roleLayout);
            roleLayout.trigger("showPageInfo");
        },
        addRole: function() {
            var RoleAddView = require("travsky/jcf/1.0.0/view/auth/roleAdd_view-debug");
            var roleAddView = new RoleAddView();
            jcfManager.contentRegion.show(roleAddView);
            roleAddView.trigger("showPageInfo");
        },
        updateRole: function(params) {
            var RoleUpdateView = require("travsky/jcf/1.0.0/view/auth/roleUpdate_view-debug");
            var queryString = QueryString.parse(params);
            var roleId = queryString.roleId;
            var operatorType = queryString.operatorType;
            var chkDisabled = operatorType == "view" ? false : true;
            var jsonParam = {
                roleId: roleId,
                operatorType: operatorType
            };
            var serverURL = "/" + jcfManager.appName + "/auth/toUpdateRoleUI.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                var model = new Backbone.Model(data);
                model.set("operatorType", operatorType);
                var roleUpdateView = new RoleUpdateView({
                    model: model
                });
                jcfManager.contentRegion.show(roleUpdateView);
                roleUpdateView.trigger("showPageInfo");
            });
        },
        showServerIndex: function(params) {
            var ServerMgrLayout = require("travsky/jcf/1.0.0/view/server/serverMgrLayout-debug");
            var queryString = QueryString.parse(params);
            var selectedPageUI = queryString.selectedPageUI;
            if (selectedPageUI == undefined || selectedPageUI == "") {
                queryString.selectedPageUI = "serverListUI";
            }
            var model = new Backbone.Model({
                selectedPageUI: queryString.selectedPageUI
            });
            var serverMgrLayout = new ServerMgrLayout({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(serverMgrLayout);
            serverMgrLayout.trigger("showPageInfo");
        },
        serverMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            var id = queryString.groupId;
            var selectedPageUI = queryString.selectedPageUI;
            if (selectedPageUI == undefined || selectedPageUI == "") {
                queryString.selectedPageUI = "serverGroupList";
            }
            var ServerMgr4GroupLayout = require("travsky/jcf/1.0.0/view/server/serverMgr4GroupLayout-debug");
            var serverURL = "/" + jcfManager.appName + "/server/findGroupNameById.action";
            var queryData = {
                groupId: id
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, queryData);
            var autoFreshFlag = $("#freshPage4GroupServerFlag").val();
            if (autoFreshFlag != undefined && autoFreshFlag.length > 0) {
                window.clearInterval(autoFreshFlag);
            }
            $.when(ajaxing).done(function(data) {
                var groupCategory = data.groupInfo.groupCategory;
                var model = new Backbone.Model({
                    hiddenGroupId: id,
                    groupCategory: groupCategory
                });
                model.set("selectedPageUI", queryString.selectedPageUI);
                var groupLayout = new ServerMgr4GroupLayout({
                    model: model,
                    queryString: queryString
                });
                jcfManager.contentRegion.show(groupLayout);
                //if(groupCategory!=3&&groupCategory!=4){
                //groupLayout.trigger("group:showSearchFormView") ;//jcf服务器和适配服务器要显示查询条件view
                //}
                groupLayout.trigger("showPageInfo");
            });
        },
        serverMgrServer: function(params) {
            //点击单个服务器信息
            var ServerMgr4ServerLayout = require("travsky/jcf/1.0.0/view/server/serverMgr4ServerLayout-debug");
            var queryString = QueryString.parse(params);
            var selectedPageUI = queryString.selectedPageUI;
            if (selectedPageUI == undefined || selectedPageUI == null) {
                queryString.selectedPageUI = "detailInfo";
            }
            var serverId = queryString.serverId;
            var serverCategory = "";
            var jsonParam = {
                serverId: serverId
            };
            var serverURL = "/" + jcfManager.appName + "/server/getServerCategory.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    serverCategory = data.serverCategory;
                    var model = new Backbone.Model({
                        selectNavItem: queryString.selectedPageUI,
                        serverId: serverId,
                        serverCategory: serverCategory
                    });
                    var serverLayout = new ServerMgr4ServerLayout({
                        model: model,
                        queryString: queryString
                    });
                    jcfManager.contentRegion.show(serverLayout);
                    serverLayout.trigger("showDownContentRegion");
                } else {
                    //alert("获取服务器信息出错!") ;
                    var ev = new ErrorPageView();
                    jcfManager.contentRegion.show(ev);
                }
            });
        },
        serverMemoryInfo: function(params) {
            var queryString = QueryString.parse(params);
            var ServerSysMemoryStatisticsLayout = require("travsky/jcf/1.0.0/view/server/serverSysMemoryStatisticsLayout-debug");
            var layout = new ServerSysMemoryStatisticsLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        showDeployIndex: function(params) {
            var queryString = QueryString.parse(params);
            var selectedPageUI = queryString.selectedPageUI;
            if (selectedPageUI == undefined || selectedPageUI == "") {
                queryString.selectedPageUI = "showAllAppUI";
            }
            var DeployMgrLayout = require("travsky/jcf/1.0.0/view/deploy/deployMgrLayout-debug");
            var model = new Backbone.Model({
                selectedPageUI: queryString.selectedPageUI
            });
            var layout = new DeployMgrLayout({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
        },
        deployMgrGroup: function(params) {
            //点击部署组管理
            var queryString = QueryString.parse(params);
            var GroupDeployMgrLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployMgrLayout-debug");
            var curStr = queryString.selectedPageUI;
            if (curStr == undefined || curStr == null) {
                queryString.selectedPageUI = "showAllAppUI";
            }
            var groupId = queryString.groupId;
            var model = new Backbone.Model({
                groupId: groupId,
                selectedPageUI: queryString.selectedPageUI
            });
            var layout = new GroupDeployMgrLayout({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("queryAndShowPageInfo");
        },
        viewAppStatus4GroupServer: function(params) {
            //
            var GroupServerAppStatusLayout = require("travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug");
            var queryString = QueryString.parse(params);
            var groupId = queryString.groupId;
            var appId = queryString.appId;
            var model = new Backbone.Model({
                groupId: groupId,
                appId: appId
            });
            var statusLayout = new GroupServerAppStatusLayout({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(statusLayout);
            statusLayout.trigger("showPageInfo");
        },
        deployMgrA4ppRollback: function(params) {
            var queryString = QueryString.parse(params);
            var RollBackLayout = require("travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug");
            var rollbackLayout = new RollBackLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(rollbackLayout);
            rollbackLayout.trigger("showPageInfo");
        },
        appLogCfg: function(params) {
            //
            var queryString = QueryString.parse(params);
            var GroupDeployAppLogCfgLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug");
            var cfgLogLayout = new GroupDeployAppLogCfgLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(cfgLogLayout);
            cfgLogLayout.trigger("showPageInfo");
        },
        deployMgrServer: function(params) {
            var ServerAppStatusLayout = require("travsky/jcf/1.0.0/view/deploy/serverAppStatusLayout-debug");
            var queryString = QueryString.parse(params);
            var layout = new ServerAppStatusLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("queryAndShowPageInfo");
        },
        deployMgrGroupAppConfig: function(params) {
            var queryString = QueryString.parse(params);
            var GroupAppCongfigLayout = require("travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug");
            var layout = new GroupAppCongfigLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        deployMgrServerAppConfig: function(params) {
            var queryString = QueryString.parse(params);
            var ServerAppCongfigLayout = require("travsky/jcf/1.0.0/view/deploy/serverAppConfigLayout-debug");
            var layout = new ServerAppCongfigLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        showServiceIndex: function(params) {
            var queryString = QueryString.parse(params);
            var ServiceMgrLayout = require("travsky/jcf/1.0.0/view/service/serviceMgrLayout-debug");
            if (queryString.selectedPageUI == undefined || queryString.selectedPageUI == "") {
                queryString.selectedPageUI = "serviceListUI";
            }
            var model = new Backbone.Model({
                selectedPageUI: queryString.selectedPageUI
            });
            var layout = new ServiceMgrLayout({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        serviceMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            var GroupServiceMgr = require("travsky/jcf/1.0.0/view/service/groupServiceMgrLayout-debug");
            var groupId = queryString.groupId;
            var curStr = queryString.selectedPageUI;
            if (curStr == undefined || curStr == null) {
                queryString.selectedPageUI = "showServiceMgrUI";
            }
            var model = new Backbone.Model({
                groupId: groupId,
                selectedPageUI: queryString.selectedPageUI
            });
            var layout = new GroupServiceMgr({
                model: model,
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        groupServiceDetail: function(params) {
            //组服务详细信息页面
            var ServiceDetailLayout = require("travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug");
            var queryString = QueryString.parse(params);
            var detailView = new ServiceDetailLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(detailView);
            detailView.trigger("showPageInfo");
        },
        serverMoniOption: function(params) {
            var queryString = QueryString.parse(params);
            var serverURL = "/" + jcfManager.appName + "/service/chartSearch.action";
            var serverServiceChart_view = require("travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug");
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, queryString);
            $.when(ajaxing).done(function(data) {
                if (data.flag != "error") {
                    var model1 = new Backbone.Model(data);
                    var sc_view = new serverServiceChart_view({
                        model: model1
                    });
                    jcfManager.contentRegion.show(sc_view);
                } else {
                    alert("度量数据加载失败");
                }
            });
        },
        groupMoniOption: function(params) {
            var serverServiceChart_view = require("travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug");
            var queryString = QueryString.parse(params);
            var serverURL = "/" + jcfManager.appName + "/service/chartGroupSearch.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, queryString);
            $.when(ajaxing).done(function(data) {
                if (data.flag != "error") {
                    var model1 = new Backbone.Model(data);
                    var sc_view = new serverServiceChart_view({
                        model: model1
                    });
                    jcfManager.contentRegion.show(sc_view);
                } else {
                    alert("度量数据加载失败");
                }
            });
        },
        serviceMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            var paramCategory = queryString.category == undefined ? "" : queryString.category;
            var paramStatus = queryString.status == undefined ? "" : queryString.status;
            var ServerServiceLayout = require("travsky/jcf/1.0.0/view/service/serverServiceMgrLayout-debug");
            var serverURL = "/" + jcfManager.appName + "/service/toSearchServerServiceUI.action";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            var serverId = queryString.serverId;
            $.when(ajaxing).done(function(data) {
                var model = new Backbone.Model(data);
                model.set("paramCategory", paramCategory);
                model.set("paramStatus", paramStatus);
                model.set("serverId", serverId);
                var layout = new ServerServiceLayout({
                    model: model,
                    queryString: queryString
                });
                jcfManager.contentRegion.show(layout);
                layout.trigger("showPageInfo");
            });
        },
        serverServiceCfg: function(params) {
            var queryString = QueryString.parse(params);
            var ServerServiceCfgView = require("travsky/jcf/1.0.0/view/service/serverServiceCfg_view-debug");
            var serverURL = "/" + jcfManager.appName + "/service/toConfigServiceUI.action";
            var serverId = queryString.serverId;
            var serviceId = queryString.serviceId;
            var jsonParam = {
                serverId: serverId,
                serviceId: serviceId
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                var errorFlag = data.errorFlag;
                if (errorFlag == "") {
                    var model = new Backbone.Model(data.serviceParamInfo);
                    model.set("queueTypes", data.queueTypes || "");
                    model.set("messageModes", data.messageModes || "");
                    model.set("pageFlag", data.pageFlag || "");
                    model.set("serviceId", data.baseInfo.serviceId || "");
                    model.set("serverId", data.baseInfo.serverId || "");
                    model.set("serviceName", data.baseInfo.serviceName || "");
                    model.set("groupName", data.baseInfo.groupName || "");
                    model.set("currentVersion", data.baseInfo.currentVersion || "");
                    model.set("serverName", data.baseInfo.serverName || "");
                    //处理可能为空的情况
                    model.set("mode", data.serviceParamInfo.mode || "");
                    var dialogView = new ServerServiceCfgView({
                        model: model
                    });
                    jcfManager.contentRegion.show(dialogView);
                } else {
                    alert(errorFlag);
                }
            });
        },
        serviceMonitor: function(params) {
            var queryString = QueryString.parse(params);
            var MonitorServiceView = require("travsky/jcf/1.0.0/view/service/monitorService_view-debug");
            var serverId = queryString.serverId;
            var serviceId = queryString.serviceId;
            var jsonParam = {
                serverId: serverId,
                serviceId: serviceId
            };
            var serverURL = "/" + jcfManager.appName + "/service/monitorService.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.errorFlag != undefined && data.errorFlag.length > 0) {
                    alert(data.errorFlag);
                } else {
                    var model = new Backbone.Model(data);
                    var version = data.configInfo.version || "";
                    var serviceName = data.configInfo.name || "";
                    var requestQueueSize = data.configInfo.requestQueueSize || "";
                    model.set("version", version);
                    model.set("serviceName", serviceName);
                    model.set("requestQueueSize", requestQueueSize);
                    var monitorView = new MonitorServiceView({
                        model: model,
                        queryString: queryString
                    });
                    jcfManager.contentRegion.show(monitorView);
                }
            });
        },
        serviceDegradeConfig: function(params) {
            //降级
            var queryString = QueryString.parse(params);
            var ServiceDegradeConfigModel = require("travsky/jcf/1.0.0/model/service/service_degrade_config_model-debug");
            var model = new ServiceDegradeConfigModel();
            var ServiceDegradeConfigView = require("travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug");
            var serviceView = new ServiceDegradeConfigView({
                queryString: queryString,
                model: model
            });
            //serviceView.render();
            jcfManager.contentRegion.show(serviceView);
            model.fetch({
                data: QueryString.stringify(queryString),
                reset: true
            });
        },
        serviceGrayConfig: function(params) {
            //灰度
            var queryString = QueryString.parse(params);
            var ServiceGrayConfigModel = require("travsky/jcf/1.0.0/model/service/service_gray_config_model-debug");
            var model = new ServiceGrayConfigModel();
            var ServiceGrayConfigView = require("travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug");
            var serviceView = new ServiceGrayConfigView({
                queryString: queryString,
                model: model
            });
            //serviceView.render();
            jcfManager.contentRegion.show(serviceView);
            model.fetch({
                data: QueryString.stringify(queryString),
                reset: true
            });
        },
        domainDataSource: function(params) {
            var queryString = QueryString.parse(params);
            var DataSourceCollection = require("travsky/jcf/1.0.0/collection/dataSource/dataSource_collection-debug");
            var dataSource_collection = new DataSourceCollection();
            var DataSourceListView = require("travsky/jcf/1.0.0/view/dataSource/dataSourceList_view-debug");
            var dataSourceListView = new DataSourceListView({
                queryString: queryString,
                collection: dataSource_collection
            });
            dataSourceListView.render();
            var refresh = setInterval(function() {
                if (window.location.hash == "#dataSrcMgr") {
                    dataSource_collection.fetch({
                        reset: true
                    });
                } else {
                    window.clearInterval(refresh);
                }
            }, 2e3);
            setTimeout("window.clearInterval(" + refresh + ");", 2e4);
        },
        groupDataSource: function(params) {
            //组数据源管理
            var queryString = QueryString.parse(params);
            if (queryString.selectTab == "groupDataSource" || queryString.selectTab == undefined) {
                var GroupDataSourceCollection = require("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_collection-debug");
                var group_dataSource_collection = new GroupDataSourceCollection();
                var GroupDataSourceListView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceList_view-debug");
                var groupDataSourceListView = new GroupDataSourceListView({
                    queryString: queryString,
                    collection: group_dataSource_collection
                });
                groupDataSourceListView.render();
                var GroupDataSourceListHeadView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceListHead_view-debug");
                var groupDataSourceListHeadView = new GroupDataSourceListHeadView({
                    queryString: queryString,
                    collection: group_dataSource_collection
                });
                groupDataSourceListHeadView.render();
                //#dataSrcMgr/group/param
                var refresh = setInterval(function() {
                    if (window.location.hash.indexOf("#dataSrcMgr/group/param") > -1) {
                        if (group_dataSource_collection.length > 0) {
                            window.clearInterval(refresh);
                        } else {
                            group_dataSource_collection.fetch({
                                data: QueryString.stringify(queryString),
                                reset: true
                            });
                        }
                    } else {
                        window.clearInterval(refresh);
                    }
                }, 3e3);
                setTimeout("window.clearInterval(" + refresh + ");", 2e4);
            } else if (queryString.selectTab == "groupDeployDataSource") {
                var GroupDeployDataSourceView = require("travsky/jcf/1.0.0/view/dataSource/groupDeployDataSource_view-debug");
                var groupDeployDataSourceView = new GroupDeployDataSourceView({
                    queryString: queryString
                });
                groupDeployDataSourceView.render();
                groupDeployDataSourceView.getServerList();
            } else if (queryString.selectTab == "groupDataSourceConfig") {
                var GroupDataSourceConfigView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfig_view-debug");
                var GroupDataSourceConfigHeadView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfigHead_view-debug");
                var GroupDataSourceConfigModel = require("travsky/jcf/1.0.0/model/dataSource/group_dataSource_config_model-debug");
                var groupDataSourceConfigModel = new GroupDataSourceConfigModel();
                var groupDataSourceConfigHeadView = new GroupDataSourceConfigHeadView({
                    queryString: queryString,
                    model: groupDataSourceConfigModel
                });
                groupDataSourceConfigHeadView.render();
                var groupDataSourceConfigView = new GroupDataSourceConfigView({
                    queryString: queryString,
                    model: groupDataSourceConfigModel
                });
                groupDataSourceConfigView.render();
            }
        },
        serverDataSource: function(params) {
            //数据源管理，点击单个服务器
            var queryString = QueryString.parse(params);
            if (queryString.selectTab == "dataSource" || queryString.selectTab == undefined) {
                //数据源列表
                var ServerDataSourceListView = require("travsky/jcf/1.0.0/view/dataSource/serverDataSourceList_view-debug");
                var serverDataSourceListView = new ServerDataSourceListView({
                    queryString: queryString
                });
                serverDataSourceListView.render();
            } else if (queryString.selectTab == "deployDataSource") {
                //新增数据源
                var ServerDeployDataSourceView = require("travsky/jcf/1.0.0/view/dataSource/serverDeployDataSource_view-debug");
                var serverDeployDataSourceView = new ServerDeployDataSourceView({
                    queryString: queryString
                });
                serverDeployDataSourceView.render();
            } else if (queryString.selectTab == "testDataSource") {
                //测试数据源
                var ServerTestDataSourceListView = require("travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceList_view-debug");
                var serverTestDataSourceListView = new ServerTestDataSourceListView({
                    queryString: queryString
                });
                serverTestDataSourceListView.render();
            }
        },
        showContextIndex: function() {
            var tipIndexView = new TipIndexView();
            jcfManager.contentRegion.show(tipIndexView);
        },
        contextMgrGroup: function(id) {
            var HighchartView = require("travsky/jcf/1.0.0/view/context/highcharts-debug");
            var highchartView = new HighchartView();
            highchartView.render();
        },
        contextMgrServer: function(params) {
            var queryString = QueryString.parse(params);
            var ServerContextModel = require("travsky/jcf/1.0.0/model/context/server_context_model-debug");
            var serverContextModel = new ServerContextModel();
            if (queryString.selectTab == "contextInfo" || queryString.selectTab == undefined) {
                var ServerContextInfoView = require("travsky/jcf/1.0.0/view/context/serverContextInfo_view-debug");
                var serverContextInfoView = new ServerContextInfoView({
                    queryString: queryString,
                    model: serverContextModel
                });
                serverContextInfoView.render();
            } else if (queryString.selectTab == "contextConfig") {
                var ServerContextConfigView = require("travsky/jcf/1.0.0/view/context/serverContextConfig_view-debug");
                var serverContextConfigView = new ServerContextConfigView({
                    queryString: queryString,
                    model: serverContextModel
                });
                serverContextConfigView.render();
            }
            serverContextModel.fetch({
                data: QueryString.stringify(queryString)
            });
        },
        showLogIndex: function() {
            var LogListCollection = require("travsky/jcf/1.0.0/collection/log/log_collection-debug");
            var logListCollection = new LogListCollection();
            var LogListView = require("travsky/jcf/1.0.0/view/log/logList_view-debug");
            var logListView = new LogListView({
                collection: logListCollection
            });
            logListView.render();
            logListCollection.fetch({
                reset: true
            });
        },
        logMgrGroup: function(params) {
            var queryString = QueryString.parse(params);
            var LogConfigView = require("travsky/jcf/1.0.0/view/log/logConfig_view-debug");
            var LogConfigHeadView = require("travsky/jcf/1.0.0/view/log/logConfigHead_view-debug");
            var LogAppNameCollection = require("travsky/jcf/1.0.0/collection/log/log_app_name_collection-debug");
            var logAppNameCollection = new LogAppNameCollection();
            var LogConfigModel = require("travsky/jcf/1.0.0/model/log/log_config_model-debug");
            var logConfigModel = new LogConfigModel();
            var logConfigHeadView = new LogConfigHeadView({
                queryString: queryString,
                model: logConfigModel,
                collection: logAppNameCollection
            });
            logConfigHeadView.render();
            var logConfigView = new LogConfigView({
                queryString: queryString,
                model: logConfigModel,
                collection: logAppNameCollection
            });
            logConfigView.render();
            logAppNameCollection.fetch({
                data: QueryString.stringify(queryString),
                reset: true
            });
        }
    });
    return AppView;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-22
 * Time: 下午03:55:13
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/sysIndex_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/sysIndex-debug.tpl");
    var SysIndexView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr)
    });
    return SysIndexView;
});

define("travsky/jcf/1.0.0/template/sysIndex-debug.tpl", [], "<br/>\n\n <h2>提示</h2>\n <p><h3>这里是jcf管理中心系统首页</h3></p>\n<p><h3>请点击左侧有效的树形导航选择节点</h3></p>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-17
 * Time: 下午04:06:32
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug", [ "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var UserMgrApi = {
        getPageUser: function(searchURL, queryPageObj) {
            return util.dealAjaxRequest4JSObj(searchURL, queryPageObj);
        },
        getAllRoles: function() {
            var serverURL = "/" + util.getAppName() + "/user/getAllRoleInfo.action";
            return util.dealAjaxRequestWithoutParam(serverURL);
        },
        getUserByID: function(userID) {
            var qdata = {
                userID: userID
            };
            var searchURL = "/" + util.getAppName() + "/user/searchUserByID.action";
            return util.dealAjaxRequest4SimpleParam(searchURL, qdata);
        }
    };
    return UserMgrApi;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-17
 * Time: 上午11:35:30
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/auth/userMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/api/auth/UserMgrApi-debug", "travsky/jcf/1.0.0/view/auth/userList_view-debug", "travsky/jcf/1.0.0/collection/auth/user_collection-debug", "travsky/jcf/1.0.0/model/auth/user_model-debug", "travsky/jcf/1.0.0/view/auth/userModify_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/auth/userDetail_view-debug", "travsky/jcf/1.0.0/view/auth/userAdd_view-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var UserMgrApi = require("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug");
    var UserListView = require("travsky/jcf/1.0.0/view/auth/userList_view-debug");
    var UserAddView = require("travsky/jcf/1.0.0/view/auth/userAdd_view-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/auth/userMgrLayout-debug.tpl");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var searchTmpStr = require("travsky/jcf/1.0.0/template/auth/userSearchItem-debug.tpl");
    var UserSearchItemView = Marionette.ItemView.extend({
        template: _.template(searchTmpStr)
    });
    var UserMgrLayoutView = Marionette.LayoutView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(option) {
            this.queryString = option.queryString;
        },
        events: {
            "click #selectUser": "searchUser",
            "click #toAddUserUI": "toAddUserUI"
        },
        regions: {
            searchRegion: "#searchRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        toAddUserUI: function() {
            var serverURL = "/" + jcfManager.appName + "/user/getAllRoleList.action";
            $.when(util.dealAjaxRequestWithoutParam(serverURL)).done(function(data) {
                if (data.flag == "true") {
                    appRouter.navigate("authMgr/userMgr/add");
                    var roleList = new Backbone.Collection(data.roleList);
                    jcfManager.contentRegion.show(new UserAddView({
                        collection: roleList
                    }));
                } else {
                    util.alertEsg("操作出现异常!");
                }
            });
        },
        searchUser: function() {
            var modelName = sidbarUtil.getModuleName();
            var jsObjParam = {};
            if (this.queryString.currentPage == undefined) {
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            this.queryString.currentPage = 1;
            jsObjParam.currentPage = this.queryString.currentPage;
            jsObjParam.pageSize = this.queryString.pageSize;
            var inputLoginId = $.trim($("#loginId").val());
            var inputRoleId = $.trim($("#roleId").val());
            jsObjParam.loginId = inputLoginId;
            jsObjParam.roleId = inputRoleId;
            this.queryString.loginId = inputLoginId;
            this.queryString.roleId = inputRoleId;
            this.showPageInfo(jsObjParam);
            appRouter.navigate(modelName + "/userMgr/param/" + QueryString.stringify(this.queryString));
        },
        onShow: function() {
            var jsObjParam = {};
            if (this.queryString.currentPage == undefined) {
                this.queryString.currentPage = 1;
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            jsObjParam.currentPage = this.queryString.currentPage;
            jsObjParam.pageSize = this.queryString.pageSize;
            jsObjParam.loginId = this.queryString.loginId == undefined ? "" : this.queryString.loginId;
            jsObjParam.roleId = this.queryString.roleId == undefined ? "" : this.queryString.roleId;
            this.showPageInfo(jsObjParam);
        },
        showPageInfo: function(jsObjParam) {
            this.model.set("loginId", jsObjParam.loginId);
            this.model.set("roleId", jsObjParam.roleId);
            this.searchRegion.show(new UserSearchItemView({
                model: this.model
            }));
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/user/searchPageUser.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsObjParam);
            var colleciton = new Backbone.Collection();
            var model = new Backbone.Model();
            $.when(ajaxing).done(function(data) {
                var pageBean = data.pageBean;
                if (data.flag == "true") {
                    model.set(pageBean);
                    model.set("uriSection", "userMgr");
                    colleciton.set(pageBean.recordList);
                    var listView = new UserListView({
                        collection: colleciton
                    });
                    self.listRegion.show(listView);
                    var pbview = new PagebarView({
                        model: model,
                        queryString: self.queryString
                    });
                    self.pagebarRegion.show(pbview);
                } else {
                    util.showErrPage();
                }
            });
        }
    });
    return UserMgrLayoutView;
});

define("travsky/jcf/1.0.0/view/auth/userList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/collection/auth/user_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/auth/user_model-debug", "travsky/jcf/1.0.0/api/auth/UserMgrApi-debug", "travsky/jcf/1.0.0/view/auth/userModify_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/auth/userDetail_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var userListTemplate = require("travsky/jcf/1.0.0/template/auth/userList-debug.tpl");
    var UserCollection = require("travsky/jcf/1.0.0/collection/auth/user_collection-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var Marionette = require("marionette-debug");
    var UserMgrApi = require("travsky/jcf/1.0.0/api/auth/UserMgrApi-debug");
    var UserModifyView = require("travsky/jcf/1.0.0/view/auth/userModify_view-debug");
    var UserModel = require("travsky/jcf/1.0.0/model/auth/user_model-debug");
    var UserDetailView = require("travsky/jcf/1.0.0/view/auth/userDetail_view-debug");
    var userItemTplStr = require("travsky/jcf/1.0.0/template/auth/userItem-debug.tpl");
    var UserItemView = Marionette.ItemView.extend({
        tagName: "tr",
        initialize: function() {
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(userItemTplStr),
        events: {
            click: "highlightName",
            "click a.oper": "oper"
        },
        oper: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var $curA = $(e.target);
            var curID = $.trim($curA.attr("value"));
            var loginID = $curA.attr("loginID");
            if ($curA.hasClass("detail")) {
                appRouter.navigate("authMgr/userMgr/detail/param/userId=" + curID);
                $.when(UserMgrApi.getUserByID(curID)).done(function(data) {
                    if (data.flag == "true") {
                        var model = new UserModel(data);
                        var userDetailView = new UserDetailView({
                            model: model
                        });
                        jcfManager.contentRegion.show(userDetailView);
                    } else {
                        util.alertEsg("操作出现异常!");
                    }
                });
            } else if ($curA.hasClass("modify")) {
                var searchURL = "/" + util.getAppName() + "/user/toModifyUserUI.action";
                var loginId = $("#indexHiddenLoginId").val();
                appRouter.navigate("authMgr/userMgr/modify/param/userId=" + curID + "&loginId=" + loginId);
                var qdata = {
                    userID: curID,
                    loginId: loginId
                };
                var self = this;
                $.when(util.dealAjaxRequest4SimpleParam(searchURL, qdata)).done(function(data) {
                    if (data.flag == "true") {
                        var model = new Backbone.Model(data.userInfo);
                        model.set("canMod", data.canMod);
                        var userModifyView = new UserModifyView({
                            model: model,
                            roleList: data.roleList
                        });
                        jcfManager.contentRegion.show(userModifyView);
                    } else {
                        util.alertEsg("操作出现异常!");
                    }
                });
            } else if ($curA.hasClass("delete")) {
                if (loginID == $("#indexHiddenLoginId").val()) {
                    alert("当前登录用户不能被删除！");
                } else if (confirm("确认删除?")) {
                    var delData = {
                        userID: curID
                    };
                    var serverURL = "/" + util.getAppName() + "/user/deleteUserByID.action";
                    var self = this;
                    var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, delData);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            self.trigger("UserMgr:userDel", self.model);
                        } else {
                            util.alertEsg("删除信息失败!");
                        }
                    });
                }
            }
        },
        highlightName: function(e) {
            e.preventDefault();
            this.$el.toggleClass("warning");
        }
    });
    var UserListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(userListTemplate),
        childView: UserItemView,
        childViewContainer: "tbody",
        childEvents: {
            "UserMgr:userDel": function(childView, model) {
                this.collection.remove(model);
                this.render();
            }
        }
    });
    return UserListView;
});

define("travsky/jcf/1.0.0/template/auth/userList-debug.tpl", [], '<table class="list table table-bordered">\n	<thead>\n		<tr>\n			<th>用户ID</th>\n			<th>用户姓名</th>\n			<th>角色</th>\n			<th>详细信息</th>\n			<th>操作</th>\n		</tr>\n	</thead>\n	<tbody>	\n	</tbody>\n</table>\n	\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-11-29
 * Time: 下午03:37:11
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/collection/auth/user_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/auth/user_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    /*Backbone.sync = function(method,model){
		alert(method + " --- " +" model url : "+model.url +"  data : "+ JSON.stringify(model) ) ;
	} ;*/
    var UserModel = require("travsky/jcf/1.0.0/model/auth/user_model-debug");
    var UserCollection = Backbone.Collection.extend({
        model: UserModel,
        url: "/" + appName + "/user/searchUser.action",
        initialize: function() {},
        parse: function(response) {
            //alert(JSON.stringify(response)) ;
            return response;
        }
    });
    return UserCollection;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-9
 * Time: 上午10:45:43
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/auth/user_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var UserModel = Backbone.Model.extend({});
    return UserModel;
});

define("travsky/jcf/1.0.0/view/auth/userModify_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var userAddTpl = require("travsky/jcf/1.0.0/template/auth/userModify-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var Marionette = require("marionette-debug");
    var queryCondition = null;
    var inputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var UserModifyView = Marionette.ItemView.extend({
        template: _.template(userAddTpl),
        initialize: function(options) {
            this.roleList = options.roleList;
        },
        events: {
            "blur #name": "checkName",
            "blur #password": "checkPassword",
            "blur #confirmpassword": "checkConfirmpassword",
            "blur #deptId": "checkDeptId",
            "blur #post": "checkPost",
            "blur #tel": "checkTel",
            "blur #email": "checkEmail",
            "click #modifyUser": "updateUser",
            "click #back": "back"
        },
        check2password: function() {
            //检验两个密码
            var id = "confirmpassword";
            var p1 = $.trim($("#password").val());
            if (p1.length > 0) {
                var flag = inputUtil.checkStrongPassword(id);
                //如果密码不一样也需要提示错误信息
                if (flag) {
                    var pw1 = $("#password").val();
                    var pw2 = $("#confirmpassword").val();
                    if (pw1 == pw2) {
                        flag = inputUtil.successInput(id);
                    } else {
                        flag = inputUtil.errInput(id, "密码不一致！");
                    }
                }
                return flag;
            } else {
                return true;
            }
        },
        checkPassword: function() {
            var id = "password";
            var value = $.trim($("#" + id).val());
            if (value.length == 0) {
                return true;
            } else {
                return inputUtil.checkStrongPassword(id);
            }
        },
        checkConfirmpassword: function() {
            var id = "confirmpassword";
            var value = $.trim($("#" + id).val());
            if (value.length == 0) {
                return true;
            } else {
                var flag = inputUtil.checkStrongPassword(id);
                //如果密码不一样也需要提示错误信息
                if (flag) {
                    var pw1 = $("#password").val();
                    var pw2 = $("#confirmpassword").val();
                    if (pw1 == pw2) {
                        flag = inputUtil.successInput(id);
                    } else {
                        flag = inputUtil.errInput(id, "密码不一致！");
                    }
                }
                return flag;
            }
        },
        checkName: function() {
            return inputUtil.checkInputMatchMaxLength("name", 20);
        },
        checkDeptId: function() {
            return inputUtil.checkInputMatchMaxLengthCanNull("deptId", 20);
        },
        checkPost: function() {
            return inputUtil.checkInputMatchMaxLengthCanNull("post", 20);
        },
        checkTel: function() {
            var id = "tel";
            var minLen = 6;
            var maxLen = 20;
            var value = $.trim($("#" + id).val());
            if (value.length > 0) {
                var flag = inputUtil.checkInputMatchGoodLength(id, minLen, maxLen);
                if (flag) {
                    if ($.isNumeric(value)) {
                        //
                        flag = inputUtil.successInput(id);
                    } else {
                        flag = inputUtil.errInput(id, "电话格式输入错误！");
                    }
                }
                return flag;
            } else {
                return true;
            }
        },
        checkEmail: function() {
            var id = "email";
            var email = $("#" + id).val();
            var flag = true;
            if (email.length > 0) {
                flag = inputUtil.checkEmail(id);
            }
            return flag;
        },
        checkModifyUserForm: function() {
            //检查表单是否合法
            if (this.checkName() && this.checkPassword() && this.checkConfirmpassword() && this.checkDeptId() && this.checkPost() && this.checkTel() && this.checkEmail() && this.check2password()) {
                return true;
            }
            return false;
        },
        updateUser: function() {
            var flag = this.checkModifyUserForm();
            var formIds = [ "id", "loginID", "name", "password", "confirmpassword", "deptId", "post", "tel", "roleId", "email" ];
            if (flag) {
                var jsObj = util.getFormInputObj(formIds);
                var appName = util.getAppName();
                var url = "/" + appName + "/user/updateUser.action";
                //将数据保存到数据库中
                $.when(util.dealAjaxRequest4JSObj(url, jsObj)).done(function(data) {
                    var rflag = data.flag;
                    if (rflag == "true") {
                        window.history.back();
                    } else {
                        //alert("修改用户信息出错!") ;
                        util.alertEsg("修改用户信息出错!");
                    }
                });
            }
        },
        back: function() {
            window.history.back();
        },
        render: function() {
            this.$el.html(this.template({
                model: this.model.toJSON(),
                roleList: this.roleList
            }));
            return this;
        },
        onShow: function() {}
    });
    return UserModifyView;
});

define("travsky/jcf/1.0.0/template/auth/userModify-debug.tpl", [], '<br/>\n<form class="form-horizontal" role="form">\n	\n   <input type = "hidden" id = "id" value = "<%=model.id%>" />\n	\n	\n   <div class="form-group" id = "loginIDDiv" >\n      <label for="loginID" class="col-sm-3 control-label">用户ID：</label>\n      <div class="col-sm-4">\n        <input type="text" readonly = "readonly" id="loginID"  value = "<%=model.loginID%>"  class="form-control input-sm"   placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "loginIDTip"></span></div>\n   </div>\n	\n  \n   \n   <div class="form-group" id = "nameDiv" >\n      <label for="name" class="col-sm-3 control-label">用户名称：</label>\n      <div class="col-sm-4">\n        <input type="text" id="name"  value = "<%=model.name%>"  class="form-control input-sm"   placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "nameTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "passwordDiv" >\n      <label for="password" class="col-sm-3 control-label">密码：</label>\n      <div class="col-sm-4">\n        <input type="password" id="password"  value = ""  class="form-control input-sm"   placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "passwordTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "confirmpasswordDiv" >\n      <label for="confirmpassword" class="col-sm-3 control-label">确认密码：</label>\n      <div class="col-sm-4">\n        <input type="password" id="confirmpassword"  value = ""  class="form-control input-sm"   placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "confirmpasswordTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "deptIdDiv" >\n      <label for="deptId" class="col-sm-3 control-label">部门：</label>\n      <div class="col-sm-4">\n        <input type="text" id="deptId"  value = "<%=model.deptId%>"  class="form-control input-sm"  />\n      </div>\n      <div><span class = "text-danger"></span><span id = "deptIdTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "postDiv" >\n      <label for="post" class="col-sm-3 control-label">职务：</label>\n      <div class="col-sm-4">\n        <input type="text" id="post"  value = "<%=model.post%>"  class="form-control input-sm"  />\n      </div>\n      <div><span class = "text-danger"></span><span id = "postTip"></span></div>\n   </div>\n \n   <div class="form-group" id = "telDiv" >\n      <label for="tel" class="col-sm-3 control-label">电话：</label>\n      <div class="col-sm-4">\n        <input type="text" id="tel"  value = "<%=model.tel%>"  class="form-control input-sm"  />\n      </div>\n      <div><span class = "text-danger"></span><span id = "telTip"></span></div>\n   </div>\n  \n  <div class="form-group" id = "roleIdDiv" >\n      <label for="roleId" class="col-sm-3 control-label">角色：</label>\n      <div class="col-sm-4">\n      	<% if("false"==model.canMod){ %>\n      	<input type="hidden" id="roleId" value = "<%=model.roleId%>" />\n      	<select id = "roleId" name="roleId" disabled="disabled" class = "form-control input-sm">\n      	<% }else{ %>\n      	<select id = "roleId" name="roleId" class = "form-control input-sm">\n      	<% } %>\n      			<%\n					for(var i = 0 ; i <roleList.length; i ++){\n					  if(model.roleId==roleList[i].id){\n					  	%>\n					  		<option selected = "selected" value = "<%=roleList[i].id%>" ><%=roleList[i].name%></option>\n					  	<%\n					  }else{\n						%>\n						    <option value = "<%=roleList[i].id%>" ><%=roleList[i].name%></option>\n						<%\n					  }\n					}\n				%>\n      	</select>\n      </div>\n      <div><span class = "text-danger"></span><span id = "roleIdTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "emailDiv" >\n      <label for="email" class="col-sm-3 control-label">邮箱：</label>\n      <div class="col-sm-4">\n        <input type="text" id="email"  value = "<%=model.email%>"  class="form-control input-sm"  />\n      </div>\n      <div><span class = "text-danger"></span><span id = "emailTip"></span></div>\n   </div>\n   \n   <div class="form-group">\n      <div class="col-sm-offset-3">\n         <button type="button" id = "modifyUser" class="btn btn-primary">修改</button>\n      	 <button type="button" id = "back" class="btn btn-primary" >返回</button>\n      </div>\n   </div>\n</form>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-26
 * Time: 下午05:59:26
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", [ "jquery-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var InputUtil = {
        checkInputFileNameNotContainExt: function(id, maxLength) {
            //文件名不能包含后缀
            var flag = this.checkInputMatchMaxLength(id, maxLength);
            var value = $.trim($("#" + id).val());
            //
            if (flag) {
                if (value.indexOf(".") > -1) {
                    var errTip = "日志保存路径不能含有后缀名";
                    flag = this.errInput(id, errTip);
                } else {
                    flag = this.successInput(id);
                }
            }
            return flag;
        },
        checkInputMatchRegularCanNull: function(id, maxLength, regular, errTip) {
            //输入框匹配正则，且可为空
            var value = $.trim($("#" + id).val());
            if (value.length == 0) {
                //return this.successInput(id) ;
                this.clearInput(id);
                //没有输入的直接不报错即可
                return true;
            } else {
                var flag = this.checkMaxLengthValid(id, maxLength);
                if (flag) {
                    flag = this.checkMatchRegular(id, regular, errTip);
                }
                return flag;
            }
        },
        checkInputMatchRegularAndNotNull: function(id, maxLength, regular, errTip) {
            //输入框匹配正则，不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkMatchRegular(id, regular, errTip);
            }
            return flag;
        },
        checkInputMatchPort: function(id) {
            //输入框是否符合端口，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            if (flag) {
                var $curObj = $("#" + id);
                var value = $.trim($curObj.val());
                var portNum = parseInt(value);
                if (portNum < 1024 || portNum > 65535) {
                    var errTip = "端口应为1024~65535之间的数字";
                    flag = this.errInput(id, errTip);
                } else {
                    flag = this.successInput(id);
                }
            }
            return flag;
        },
        checkInputMatchIP: function(id) {
            //输入框是否满足IP格式，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsIP(id);
            }
            return flag;
        },
        checkInputNotChineseStr: function(id) {
            var flag = this.checkNotNull(id);
            if (flag) {
                var errTip = "不能含有中文字符!";
                if (this.checkInputContainChinese(id)) {
                    //如果含有中文字符
                    flag = this.errInput(id, errTip);
                } else {
                    this.successInput(id);
                }
            }
            return flag;
        },
        checkStrContainChinese: function(valStr) {
            //判断是否含有中文,如果含有返回:true,否则返回:false//本方法为
            for (var i = 0; i < valStr.length; i++) {
                var temp = valStr.charAt(i);
                if (temp.charCodeAt() > 16384 && temp.charCodeAt() < 65024) {
                    return true;
                }
            }
            return false;
        },
        checkInputMatchPositiveIntegerAndMaxLengthCanNull: function(id, maxLength) {
            //正整数长度有限，可为空
            var val = $.trim($("#" + id).val());
            if (val.length == 0) {
                this.clearInput(id);
                return true;
            } else {
                var flag = this.checkMaxLengthValid(id, maxLength);
                if (flag) {
                    flag = this.checkIsPositiveInteger(id);
                }
                return flag;
            }
        },
        checkInputMatchPositiveIntegerAndMaxLength: function(id, maxLength) {
            //正整数且长度有限，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            return flag;
        },
        checkInputMatchIntegerAndMaxLength: function(id, maxLength) {
            //正数且长度有限，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkInteger(id);
            }
            return flag;
        },
        checkInputMatchInt_MinNum__MaxNum: function(id, minNum, maxNum) {
            //正整数且长度有限，且不能为空//且最大最小值范围
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            if (flag) {
                var $curObj = $("#" + id);
                var value = $.trim($curObj.val());
                var num = parseInt(value);
                if (num >= minNum && num <= maxNum) {
                    flag = this.successInput(id);
                } else {
                    var errTip = "正整数范围[" + minNum + "-" + maxNum + "]";
                    flag = this.errInput(id, errTip);
                }
            }
            return flag;
        },
        checkInputMatchNumAndMaxLength: function(id, maxLength) {
            //输入框符合数字，长度有限，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkIsNum(id);
            }
            return flag;
        },
        checkInputMatchMaxLengthCanNull: function(id, maxLength) {
            //输入框符合最大长度，可为空
            var val = $.trim($("#" + id).val());
            var flag = true;
            if (val.length > 0) {
                flag = this.checkMaxLengthValid(id, maxLength);
            } else {
                this.clearInput(id);
            }
            return flag;
        },
        checkInputMatchMaxLength: function(id, maxLength) {
            //输入框符合最大长度，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            return flag;
        },
        checkInputMatchGoodLength: function(id, minLength, maxLength) {
            //输入框符合长度，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkGoodLengthValid(id, minLength, maxLength);
            }
            return flag;
        },
        checkInteger: function(id) {
            //正数校验，可以为0
            var value = $.trim($("#" + id).val());
            var reg1 = /^\d+$/;
            var flag = reg1.test(value);
            if (flag) {
                this.successInput(id);
            } else {
                var errTip = "只能输入正数";
                this.errInput(id, errTip);
            }
            return flag;
        },
        checkIsPositiveInteger: function(id) {
            var $curObj = $("#" + id);
            var value = $.trim($curObj.val());
            var reg1 = /^[0-9]*[1-9][0-9]*$/;
            if (!reg1.test(value)) {
                var errTip = "只能输入正整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsNum: function(id) {
            var $curObj = $("#" + id);
            var value = $.trim($curObj.val());
            if (isNaN(value) || value.indexOf(".") > -1) {
                var errTip = "只能输入整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsIP: function(id) {
            var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            var errTip = "IP格式不合法";
            var flag = this.checkMatchRegular(id, regular, errTip);
            return flag;
        },
        checkGoodString: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            var regular = "^\\w+$";
            if (!val.match(regular)) {
                var errTip = "含有非法字符(只能含有字母、整数、下划线)";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkMatchRegular: function(id, regular, errTip) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (!val.match(regular)) {
                var errTip = "格式不符合要求(" + errTip + ")";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkGoodLengthValid: function(id, minLength, maxLength) {
            //长度范围内检查,如:[5-10]位
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length > maxLength) {
                var errTip = "最大允许输入" + maxLength + "位";
                return this.errInput(id, errTip);
            } else if (val.length < minLength) {
                var errTip = "最小允许输入" + minLength + "位";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkMaxLengthValid: function(id, maxLength) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length > maxLength) {
                var errTip = "最大允许输入" + maxLength + "位";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkNotNull: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length == 0) {
                this.errInput(id, "不能为空");
            } else {
                return this.successInput(id);
            }
        },
        checkStrongPassword: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            var result = false;
            var str0 = /[a-z]/g;
            //小写字母
            var str1 = /[A-Z]/g;
            //大写字母
            var num = /[0-9]/g;
            //数字
            var other = /[\x21-\x2f\x3a-\x40\x5b-\x60\x7b-\x7e]/g;
            //特殊字符
            var all = /^[\x21-\x7e]{8,20}$/g;
            //强密码条件
            var i = 4;
            if (all.test(val)) {
                if (!str0.test(val)) i--;
                if (!str1.test(val)) i--;
                if (!num.test(val)) i--;
                if (!other.test(val)) i--;
                if (i >= 3) {
                    return this.successInput(id);
                } else {
                    return this.errInput(id, "密码应同时包含大小写字母、数字、特殊字符中的至少三种！");
                }
            }
            return this.errInput(id, "密码长度应该为8-20位");
        },
        checkIpAndPortInArray: function(id, array, errTip) {
            var $curObj = $("#" + id);
            var flag = true;
            var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5]):([0-9]|[1-9]\d|[1-9]\d{2}|[1-9]\d{3}|[1-5]\d{4}|6[0-4]\d{3}|65[0-4]\d{2}|655[0-2]\d|6553[0-5])$/;
            for (i = 0; i < array.length; i++) {
                if (!array[i].match(regular)) {
                    var errTip = "格式不符合要求(" + errTip + ")";
                    return this.errInput(id, errTip);
                }
            }
            return this.successInput(id);
        },
        checkEmail: function(id) {
            var $obj = $("#" + id);
            var patten = new RegExp(/^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]+$/);
            var email = $.trim($obj.val());
            var flag = patten.test(email);
            var errTip = "邮箱格式有误";
            if (flag) {
                this.successInput(id);
            } else {
                this.errInput(id, errTip);
            }
            return flag;
        },
        errInput: function(id, errTip) {
            var $obj = $("#" + id);
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            if ($div.hasClass("has-success")) {
                $div.removeClass("has-success");
                $tip.removeClass("text-success");
            }
            if (!$div.hasClass("has-error")) {
                $div.addClass("has-error");
                $tip.addClass("text-danger");
            }
            $tip.html(errTip);
            $obj.focus();
            return false;
        },
        successInput: function(id) {
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            if ($div.hasClass("has-error")) {
                $div.removeClass("has-error");
                $tip.removeClass("text-danger");
            }
            if (!$div.hasClass("has-success")) {
                $div.addClass("has-success");
                $tip.addClass("text-success");
            }
            //$tip.html("输入成功") ;
            $tip.html("");
            return true;
        },
        clearInput: function(id) {
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            $div.removeClass("has-error").removeClass("has-success");
            $tip.removeClass("text-danger").removeClass("text-success");
            $tip.html("");
        }
    };
    return InputUtil;
});

define("travsky/jcf/1.0.0/view/auth/userDetail_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var userAddTpl = require("travsky/jcf/1.0.0/template/auth/userDetail-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var Marionette = require("marionette-debug");
    var UserDetailView = Marionette.ItemView.extend({
        template: _.template(userAddTpl),
        initialize: function(options) {},
        events: {
            "click #back": "back"
        },
        back: function() {
            window.history.back();
        },
        render: function() {
            this.$el.html(this.template({
                model: this.model.toJSON()
            }));
            return this;
        },
        onShow: function() {}
    });
    return UserDetailView;
});

define("travsky/jcf/1.0.0/template/auth/userDetail-debug.tpl", [], '<br/>\n<form class="form-horizontal" role="form">\n   <div class="form-group" id = "loginIDDiv" >\n      <label for="loginID" class="col-sm-3 control-label">用户ID：</label>\n      <div class="col-sm-4"><input type = "text" disabled="disabled"  id="loginID"  value = "<%=model.loginID%>"   class="form-control input-sm"    /></div>\n   </div>\n   \n   \n   <div class="form-group" id = "nameDiv" >\n      <label for="name" class="col-sm-3 control-label">用户名称：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="name"  value = "<%=model.name%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n   \n   \n   <div class="form-group" id = "deptIdDiv" >\n      <label for="deptId" class="col-sm-3 control-label">部门：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="deptId"  value = "<%=model.deptId%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n   \n   <div class="form-group" id = "postDiv" >\n      <label for="post" class="col-sm-3 control-label">职务：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="post"  value = "<%=model.post%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n   \n   \n    <div class="form-group" id = "telDiv" >\n      <label for="tel" class="col-sm-3 control-label">电话：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="tel"  value = "<%=model.tel%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n   \n   \n   <div class="form-group" id = "roleIdDiv" >\n      <label for="roleId" class="col-sm-3 control-label">角色：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="roleId"  value = "<%=model.roleName%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n   \n   \n   <div class="form-group" id = "emailDiv" >\n      <label for="email" class="col-sm-3 control-label">邮箱：</label>\n      <div class="col-sm-4">\n      	<input type = "text" disabled="disabled"  id="email"  value = "<%=model.email%>"   class="form-control input-sm"    />\n      </div>\n   </div>\n\n   \n     <div class="form-group">\n      <div class="col-sm-offset-3">\n      	 <button type="button" id = "back" class="btn btn-primary" >返回</button>\n      </div>\n   </div>\n</form>\n');

define("travsky/jcf/1.0.0/template/auth/userItem-debug.tpl", [], '<td><%=loginID%></td>\n<td><%=name%></td>\n<td><%=roleName%></td>\n<td><a href = "javascript:void(0)" class = "oper detail" value = "<%=id%>" >查看</a></td>\n<td><a href = "javascript:void(0)" class ="oper modify" value = "<%=id%>" >修改</a>\n<%if(loginID!="admin"){\n%>|<a href = "javascript:void(0)" class = "oper delete" value = "<%=id%>" loginID = "<%=loginID%>" >删除</a><%\n}%>\n</td>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-15
 * Time: 下午01:40:40
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/auth/userAdd_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var userAddTpl = require("travsky/jcf/1.0.0/template/auth/userAdd-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var UserAddView = Backbone.View.extend({
        template: _.template(userAddTpl),
        initialize: function() {},
        events: {
            "click #addUser": "addUser",
            "click #back": "back",
            "blur #loginID": "checkLoginID",
            "blur #name": "checkName",
            "blur #password": "checkPassword",
            "blur #confirmpassword": "checkConfirmpassword",
            "blur #deptId": "checkDeptId",
            "blur #post": "checkPost",
            "blur #tel": "checkTel",
            "blur #email": "checkEmail"
        },
        checkAddUserForm: function() {
            //检查表单是否合法
            if (this.checkLoginID() && this.checkName() && this.checkPassword() && this.checkConfirmpassword() && this.checkDeptId() && this.checkPost() && this.checkTel() && this.checkEmail()) {
                return true;
            }
            return false;
        },
        addUser: function() {
            var flag = this.checkAddUserForm();
            var modelName = sidbarUtil.getModuleName();
            if (flag) {
                var formIds = [ "loginID", "name", "password", "confirmpassword", "deptId", "post", "tel", "roleId", "email" ];
                var jsObj = util.getFormInputObj(formIds);
                var serverURL = "/" + jcfManager.appName + "/user/addUser.action";
                $.when(util.dealAjaxRequest4JSObj(serverURL, jsObj)).done(function(data) {
                    if (data.flag == "true") {
                        appRouter.navigate(modelName + "/userMgr", {
                            trigger: true
                        });
                    } else {
                        util.alertEsg("添加信息出错!");
                    }
                }).fail(function(data) {
                    //alert("添加信息出错!") ;
                    util.alertEsg("添加信息出错!");
                });
            }
        },
        checkLoginIdExist: function() {
            //当且仅当，用户名存在时返回 ：false，其他情况全部返回：true
            var id = "loginID";
            var flag = true;
            var errTip = "用户ID重复!";
            var loginID = $.trim($("#" + id).val());
            var jsonParam = {
                loginID: loginID
            };
            var serverURL = "/" + jcfManager.appName + "/user/checkLoginIdExist.action";
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    inputUtil.errInput(id, errTip);
                } else if (data.flag == "false") {
                    inputUtil.successInput(id);
                    flag = false;
                } else {
                    inputUtil.errInput(id, data.flag);
                }
            });
            return flag;
        },
        checkLoginID: function() {
            var flag = false;
            flag = inputUtil.checkInputMatchMaxLength("loginID", 10);
            if (flag) {
                var existFlag = this.checkLoginIdExist();
                if (!existFlag) {
                    //不存在
                    flag = true;
                } else {
                    //存在
                    flag = false;
                }
            }
            return flag;
        },
        checkName: function() {
            return inputUtil.checkInputMatchMaxLength("name", 20);
        },
        checkPassword: function() {
            var id = "password";
            return inputUtil.checkStrongPassword(id);
        },
        checkConfirmpassword: function() {
            var id = "confirmpassword";
            var flag = inputUtil.checkStrongPassword(id);
            //如果密码不一样也需要提示错误信息
            if (flag) {
                var pw1 = $("#password").val();
                var pw2 = $("#confirmpassword").val();
                if (pw1 == pw2) {
                    flag = inputUtil.successInput(id);
                } else {
                    flag = inputUtil.errInput(id, "密码不一致！");
                }
            }
            return flag;
        },
        checkDeptId: function() {
            return inputUtil.checkInputMatchMaxLengthCanNull("deptId", 20);
        },
        checkPost: function() {
            return inputUtil.checkInputMatchMaxLengthCanNull("post", 20);
        },
        checkTel: function() {
            var id = "tel";
            var minLen = 6;
            var maxLen = 20;
            var value = $.trim($("#" + id).val());
            if (value.length > 0) {
                var flag = inputUtil.checkInputMatchGoodLength(id, minLen, maxLen);
                if (flag) {
                    if ($.isNumeric(value)) {
                        //
                        flag = inputUtil.successInput(id);
                    } else {
                        flag = inputUtil.errInput(id, "电话格式输入错误！");
                    }
                }
                return flag;
            } else {
                return true;
            }
        },
        checkEmail: function() {
            var id = "email";
            var email = $("#" + id).val();
            var flag = true;
            if (email.length > 0) {
                flag = inputUtil.checkEmail(id);
            }
            return flag;
        },
        back: function() {
            //window.appRouter.navigate("authMgr/userMgr", {trigger: true});
            window.history.back();
        },
        render: function() {
            this.$el.html(this.template({
                list: this.collection.toJSON()
            }));
            return this;
        }
    });
    return UserAddView;
});

define("travsky/jcf/1.0.0/template/auth/userAdd-debug.tpl", [], '<br/>\n<form class="form-horizontal" role="form">\n\n   <div class="form-group" id = "loginIDDiv" >\n      <label for="loginID" class="col-sm-2 control-label">用户ID：</label>\n      <div class="col-sm-3">\n        <input type="text" id="loginID"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "loginIDTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "nameDiv" >\n      <label for="name" class="col-sm-2 control-label">用户名称：</label>\n      <div class="col-sm-3">\n        <input type="text" id="name"  value = " " class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "nameTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "passwordDiv" >\n      <label for="password" class="col-sm-2 control-label">密码：</label>\n      <div class="col-sm-3">\n        <input type="password" id="password"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "passwordTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "confirmpasswordDiv" >\n      <label for="confirmpassword" class="col-sm-2 control-label">确认密码：</label>\n      <div class="col-sm-3">\n        <input type="password" id="confirmpassword"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "confirmpasswordTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "deptIdDiv" >\n      <label for="deptId" class="col-sm-2 control-label">部门：</label>\n      <div class="col-sm-3">\n        <input type="deptId" id="deptId"   class="form-control input-sm"  placeholder="" />\n      </div>\n      <div><span id = "deptIdTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "postDiv" >\n      <label for="post" class="col-sm-2 control-label">职务：</label>\n      <div class="col-sm-3">\n        <input type="post" id="post"   class="form-control input-sm"  placeholder="" />\n      </div>\n      <div><span id = "postTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "telDiv" >\n      <label for="tel" class="col-sm-2 control-label">电话：</label>\n      <div class="col-sm-3">\n        <input type="tel" id="tel"   class="form-control input-sm"  placeholder="" />\n      </div>\n      <div><span id = "telTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "roleIdDiv" >\n      <label for="roleId" class="col-sm-2 control-label">角色：</label>\n      <div class="col-sm-3">\n      	 <select id = "roleId" name="roleId"  class = "form-control input-sm">\n         		<%\n         			for(var i = 0 ; i < list.length ; i ++){\n         			  if(i==0){\n         		%>\n         			    <option selected="selected" value = "<%=list[i].id%>" ><%=list[i].name%></option>\n         		<%	  \n         			  }else{\n         		%>\n         				<option  value = "<%=list[i].id%>" ><%=list[i].name%></option>\n         		<%  \n         			  }\n         			}\n         		%>\n		 </select>\n      </div>\n      <div><span class = "text-danger">*</span><span id = "roleIdTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "emailDiv" >\n      <label for="email" class="col-sm-2 control-label">邮箱：</label>\n      <div class="col-sm-3">\n        <input type="tel" id="email"   class="form-control input-sm"  placeholder="" />\n      </div>\n      <div><span id = "emailTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group">\n      <div class="col-sm-offset-2 col-sm-10">\n         <button type="button" id = "addUser" class="btn btn-primary">添加</button>\n      	 <button type="button" id = "back" class="btn" >返回</button>\n      </div>\n   </div>\n</form>\n');

define("travsky/jcf/1.0.0/template/auth/userMgrLayout-debug.tpl", [], '<div id = "searchRegion" ></div>\n<div  id = "listRegion"></div>\n<div id = "pagebarRegion"></div>\n\n\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-4
 * Time: 下午03:11:31
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/pagebar_view2-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var pagebarViewTemplate = require("travsky/jcf/1.0.0/template/pagebar2-debug.tpl");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var PagebarView = Marionette.ItemView.extend({
        template: _.template(pagebarViewTemplate),
        initialize: function(options) {
            this.options = options || {};
            this.listenTo(this.model, "change", this.render);
        },
        events: {
            "click ul.pagination li a.canClick": "goToPage",
            "change #pageSize": "changePageSize",
            "focus #pageSize": "selectText"
        },
        tagName: "div",
        className: "clearFloat",
        selectText: function(e) {
            $(e.target).select();
        },
        changePageSize: function() {
            //改变页面的显示条数
            var cPageSize = $.trim($("#pageSize").val());
            var reg1 = /^[0-9]*[1-9][0-9]*$/;
            if (reg1.test(cPageSize)) {
                var pageSizeNum = parseInt(cPageSize);
                this.options.queryString.pageSize = cPageSize;
                this.options.queryString.currentPage = "1";
                this.refresh(this.options.queryString);
            } else {
                alert("只能输入正整数!");
            }
        },
        goToPage: function(event) {
            //上一页,下一页,等
            var $a = $(event.target);
            this.options.queryString.pageSize = $("#pageSize").val();
            this.options.queryString.currentPage = $a.attr("pageNum");
            this.refresh(this.options.queryString);
        },
        refresh: function(queryString) {
            var modelName = sidbarUtil.getModuleName();
            var uriSection = this.model.get("uriSection");
            var tmpStr = "";
            if (uriSection != undefined && uriSection != null && $.trim(uriSection).length > 0) {
                tmpStr = "/" + uriSection;
            }
            appRouter.navigate(modelName + tmpStr + "/param/" + QueryString.stringify(queryString), {
                trigger: true
            });
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    return PagebarView;
});

define("travsky/jcf/1.0.0/template/pagebar2-debug.tpl", [], '<div class="pageInfo">\n	共 <span class="myblue"><%=recordCount%></span> 条,共 <span class="myblue"><%=pageCount%></span> 页,当前 <span class="myblue"><%=currentPage%></span>页;\n	每页<input id="pageSize" type="text" value="<%=pageSize%>"/>条\n	<input type = "hidden" id = "currentPage" value = "<%=currentPage%>"/>\n	<input type = "hidden" id = "pageCount" value = "<%=pageCount%>"/>\n</div>\n<div>\n	<ul class="pagination">\n		<li class="<% if(currentPage <= 1){ %> disabled <% } %>">\n			<a class="<% if(currentPage > 1){ %> canClick <% } %>" href="javascript:void(0)" pageNum=\'1\'>&laquo;</a>\n	    </li>\n		<%for(var i=beginPageIndex; i<=endPageIndex; i++){\n			if(currentPage!=i){\n		%>\n			<li>\n				<a class="canClick" href="javascript:void(0)" pageNum=\'<%=i%>\'><%=i%></a>\n			</li>\n		<%\n			}else{\n		 %>\n			<li class="active">\n				<a href="javascript:void(0)" pageNum=\'<%=i%>\'><%=i%></a>\n			</li>\n		 <%\n		 	}\n		}\n		%>\n		<li class="<% if(currentPage >= pageCount){ %> disabled <% } %>">\n			<a class="<% if(currentPage < pageCount){ %> canClick <% } %>" href="javascript:void(0)" pageNum=\'<%=pageCount%>\'>&raquo;</a>\n		</li>\n </ul>\n</div>');

define("travsky/jcf/1.0.0/template/auth/userSearchItem-debug.tpl", [], '<table class="search table">\n	<tr>\n		<td align="middle">用户ID :</td>\n		<td class="col-md-3">\n			<input type = "text" id = "loginId" value = "<%=loginId%>" class="form-control" />\n		</td>\n		<td align="middle">角色 : </td>\n		<td class="col-md-3">\n			<select id = "roleId" class="form-control">\n			<option selected= \'selected\' value = "">全部</option>\n			<% \n				for(var i=0; i < roleList.length; i++){ \n				var c = roleList[i] ;\n				if(roleId==c.id){\n					%><option value = \'<%=c.id%>\' selected= \'selected\' ><%=c.name%></option><%	\n				}else{\n					%><option value = \'<%=c.id%>\' ><%=c.name%></option><%	\n				}\n			}%>\n			</select>\n		</td>\n		<td><button class = "btn" id = "selectUser" type = "button">查询</button></td>\n		<td><button class = "btn" id = "toAddUserUI" type = "button">新增用户</button></td>\n	</tr>\n </table');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-25
 * Time: 下午02:00:17
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/auth/roleMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/view/auth/roleAdd_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "ztree-core-debug", "ztree-excheck-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var layoutTplStr = require("travsky/jcf/1.0.0/template/auth/userMgrLayout-debug.tpl");
    var itemTplStr = require("travsky/jcf/1.0.0/template/auth/roleItem-debug.tpl");
    var listTplStr = require("travsky/jcf/1.0.0/template/auth/roleList-debug.tpl");
    var searchTplStr = require("travsky/jcf/1.0.0/template/auth/roleSearchItem-debug.tpl");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var RoleAddView = require("travsky/jcf/1.0.0/view/auth/roleAdd_view-debug");
    var SearchItemView = Marionette.ItemView.extend({
        tagName: "table",
        className: "table",
        template: _.template(searchTplStr),
        events: {
            "click #toAddRoleUIBtn": "toAddRoleUI"
        },
        toAddRoleUI: function() {
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/roleMgr/add");
            var roleAddView = new RoleAddView();
            jcfManager.contentRegion.show(roleAddView);
            roleAddView.trigger("showPageInfo");
        }
    });
    var RoleItemView = Marionette.ItemView.extend({
        initialize: function() {
            var queryConditionId = $.trim($("#roleId").val());
            var queryConditionName = $.trim($("#roleName").val());
            this.model.set("queryConditionId", queryConditionId);
            this.model.set("queryConditionName", queryConditionName);
        },
        tagName: "tr",
        template: _.template(itemTplStr),
        events: {
            click: "highlightName",
            "click a.view": "toViewRoleUI",
            "click a.update": "toUpdateRoleUI",
            "click a.delete": "deleteRole"
        },
        highlightName: function(e) {
            e.preventDefault();
            this.$el.toggleClass("warning");
        },
        toViewRoleUI: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var operatorType = "view";
            var roleId = this.model.get("id");
            var queryConditionId = this.model.get("queryConditionId");
            var queryConditionName = this.model.get("queryConditionName");
            var jString = {
                operatorType: operatorType,
                roleId: roleId,
                queryConditionId: queryConditionId,
                queryConditionName: queryConditionName
            };
            appRouter.navigate("authMgr/roleMgr/update/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        toUpdateRoleUI: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var operatorType = "update";
            var roleId = this.model.get("id");
            var queryConditionId = this.model.get("queryConditionId");
            var queryConditionName = this.model.get("queryConditionName");
            var jString = {
                operatorType: operatorType,
                roleId: roleId,
                queryConditionId: queryConditionId,
                queryConditionName: queryConditionName
            };
            appRouter.navigate("authMgr/roleMgr/update/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        deleteRole: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var roleId = this.model.get("id");
            var flag = this.hasUser(roleId);
            var self = this;
            if (!flag) {
                if (confirm("确定删除?")) {
                    var jsonParam = {
                        roleId: roleId
                    };
                    var serverURL = "/" + jcfManager.appName + "/auth/deleteRole.action";
                    var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            util.alertEsg("删除成功!");
                            self.remove();
                        } else {}
                    });
                }
            }
        },
        hasUser: function(roleId) {
            var flag = true;
            var serverURL = "/" + jcfManager.appName + "/auth/hasUser.action";
            var jsonParam = {
                roleId: roleId
            };
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.hasUser == "true") {
                    // alert("该角色下还有用户未删除，不能删除该角色");
                    util.alertEsg("该角色下还有用户未删除，不能删除该角色!");
                } else {
                    flag = false;
                }
            });
            return flag;
        }
    });
    var RoleListView = Marionette.CompositeView.extend({
        childView: RoleItemView,
        tagName: "table",
        className: "list table table-bordered",
        childViewContainer: "tbody",
        template: _.template(listTplStr)
    });
    var RoleMgrLayout = Marionette.LayoutView.extend({
        template: _.template(layoutTplStr),
        initialize: function(options) {
            this.on("showPageInfo", this.showPageInfo);
            this.queryString = options.queryString;
        },
        regions: {
            searchRegion: "#searchRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #searchRoleBtn": "searchRole"
        },
        searchRole: function() {
            var modelName = sidbarUtil.getModuleName();
            var roleId = $.trim($("#roleId").val());
            if (isNaN(roleId)) {
                // alert("角色ID必须为数字!") ;
                util.alertEsg("角色ID必须为数字!");
            } else {
                var roleName = $.trim($("#roleName").val());
                var pageSize = $.trim($("#pageSize").val());
                var jsParam = {};
                jsParam.currentPage = "1";
                jsParam.pageSize = pageSize;
                jsParam.roleId = roleId;
                jsParam.roleName = roleName;
                var jString = {
                    roleId: roleId,
                    roleName: roleName,
                    currentPage: "1",
                    pageSize: pageSize
                };
                appRouter.navigate(modelName + "/roleMgr/param/" + QueryString.stringify(jString));
                this.showPageInfoPrivate(jsParam);
            }
        },
        showPageInfo: function() {
            var roleId = this.queryString.roleId == undefined ? "" : this.queryString.roleId;
            var roleName = this.queryString.roleName == undefined ? "" : this.queryString.roleName;
            var model = new Backbone.Model({
                roleId: roleId,
                roleName: roleName
            });
            var searchView = new SearchItemView({
                model: model
            });
            this.searchRegion.show(searchView);
            var jsParam = {};
            jsParam.currentPage = this.queryString.currentPage == undefined ? "1" : this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize == undefined ? "" : this.queryString.pageSize;
            jsParam.roleId = roleId;
            jsParam.roleName = roleName;
            this.showPageInfoPrivate(jsParam);
        },
        showPageInfoPrivate: function(jsParam) {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/auth/searchRole.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var collection = new Backbone.Collection(data.pageBean.recordList);
                    var listView = new RoleListView({
                        collection: collection
                    });
                    self.listRegion.show(listView);
                    //显示分页栏
                    var model = new Backbone.Model(data.pageBean);
                    var pString = {
                        roleId: jsParam.roleId,
                        roleName: jsParam.roleName,
                        currentPage: jsParam.currentPage,
                        pageSize: jsParam.pageSize
                    };
                    model.set("uriSection", "roleMgr");
                    var pbview = new PagebarView({
                        model: model,
                        queryString: pString
                    });
                    self.pagebarRegion.show(pbview);
                } else {
                    util.alertEsg("查询出错!");
                }
            });
        }
    });
    return RoleMgrLayout;
});

define("travsky/jcf/1.0.0/template/auth/roleItem-debug.tpl", [], '<td><%=id%></td>\n<td><%=name%></td>\n<td><%=description%></td>\n<td> <a class = "view myhand">查看</a></td>\n\n\n<td>\n	<%if(name==\'系统管理员\'){\n		%>无操作<%\n	}else{\n		%>\n			<a class = "update myhand">修改</a>|\n			<%if(currentLoginRoleName==name){\n				%>删除<%\n			}else{\n				%><a class = "delete myhand">删除</a><%\n			}\n	}%>\n	\n</td>');

define("travsky/jcf/1.0.0/template/auth/roleList-debug.tpl", [], "<thead>\n	<tr>\n		<th>角色ID</th>\n		<th>角色名称</th>\n		<th>描述</th>\n		<th>详细信息</th>\n		<th>操作</th>\n	</tr>\n</thead>\n<tbody>	\n</tbody>\n");

define("travsky/jcf/1.0.0/template/auth/roleSearchItem-debug.tpl", [], '<tbody>\n  <tr>\n     <td width = "8%">角色ID：</td>\n     <td width = "20%"><input type = "text" id = "roleId" value = "<%=roleId%>"/></td>\n     <td width = "10%">角色名称：</td>\n     <td width = "20%"><input type = "text" id = "roleName" value = "<%=roleName%>"/></td>\n     <td width = "10%"><button id = "searchRoleBtn" class = "btn" >查询</button></td>\n     <td width = "10%"><button id = "toAddRoleUIBtn" class = "btn">新增角色</button></td>\n     <td width = "*%"></td>\n  </tr>\n</tbody>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-26
 * Time: 上午10:50:36
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/auth/roleAdd_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "ztree-core-debug", "ztree-excheck-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/auth/roleAdd-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheck = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    require("ztree-core-debug")($);
    require("ztree-excheck-debug")($);
    var RoleAddView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(options) {
            this.on("showPageInfo", this.showPageInfo);
        },
        events: {
            "click #addRoleBtn": "addRole",
            "click #backLastPageBtn": "backLastPage",
            "blur #name": "checkName",
            "blur #description": "checkDescription"
        },
        backLastPage: function() {
            window.history.back();
        },
        checkName: function() {
            var id = "name";
            var flag = inputCheck.checkInputMatchMaxLength(id, 30);
            if (flag) {
                flag = this.checkNameExist();
            }
            return flag;
        },
        checkDescription: function() {
            var id = "description";
            var flag = inputCheck.checkInputMatchMaxLength(id, 30);
            return flag;
        },
        addRole: function() {
            var flag = this.checkName();
            if (flag) {
                flag = this.checkDescription();
            }
            if (flag) {
                var zTree = $.fn.zTree.getZTreeObj("roleTree1");
                var nodes = zTree.getCheckedNodes(true);
                var zTree2 = $.fn.zTree.getZTreeObj("roleTree2");
                var nodes2 = zTree2.getCheckedNodes(true);
                //拼凑选中的串
                var idall = "";
                for (var i = 0; i < nodes.length; i++) {
                    idall += "," + nodes[i].id;
                }
                for (var i = 0; i < nodes2.length; i++) {
                    idall += "," + nodes2[i].id;
                }
                //角色权限非空校验
                if (idall.length > 0) {
                    $("#powerTip").html("");
                    idall = idall.substring(1);
                    flag = this.checkRoleDouble(idall);
                    if (flag) {
                        //准备提交表单
                        var roleName = $.trim($("#name").val());
                        var roleDescr = $.trim($("#description").val());
                        var roleAtri = $.trim($("#menuIds").val());
                        var jsParam = {};
                        jsParam.name = roleName;
                        jsParam.description = roleDescr;
                        jsParam.menuIds = roleAtri;
                        this.submitForm(jsParam);
                    }
                } else {
                    $("#powerTip").html("角色权限不能为空");
                    return;
                }
            }
        },
        submitForm: function(jsParam) {
            var serverURL = "/" + jcfManager.appName + "/auth/addRole.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    appRouter.navigate("authMgr/roleMgr", {
                        trigger: true
                    });
                } else {
                    alert("添加失败！");
                }
            });
        },
        checkRoleDouble: function(idall) {
            var serverURL = "/" + jcfManager.appName + "/auth/isRepower.action";
            var jsonParam = {
                idall: idall
            };
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            var flag = false;
            $.when(ajaxing).done(function(data) {
                if (data.result == "prosave") {
                    $("#powerTip").html("所选权限组合已存在");
                    flag = false;
                } else if (data.result == "bnfp") {
                    $("#powerTip").html("你不能分配大于你的权限的权限！");
                    flag = false;
                } else {
                    flag = true;
                    $("#powerTip").html("");
                    $("#menuIds").val(idall);
                }
            });
            return flag;
        },
        checkNameExist: function() {
            var id = "name";
            var value = $.trim($("#" + id).val());
            var flag = true;
            var serverURL = "/" + jcfManager.appName + "/auth/checkRoleNameExist.action";
            var jsonParam = {
                name: value
            };
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    inputCheck.errInput(id, "角色名称已存在!");
                    flag = false;
                } else if (data.flag == "false") {
                    inputCheck.successInput(id);
                    flag = true;
                } else {
                    flag = false;
                    alert("检查出错!");
                }
            });
            return flag;
        },
        showPageInfo: function() {
            var setting = {
                check: {
                    enable: true,
                    chkboxType: {
                        Y: "ps",
                        N: "ps"
                    }
                },
                data: {
                    simpleData: {
                        enable: true
                    }
                }
            };
            var serverURL = "/" + jcfManager.appName + "/auth/addRoleForward.action";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var resultStr1 = data.resultStr1;
                    var resultStr2 = data.resultStr2;
                    $.fn.zTree.init($("#roleTree1"), setting, resultStr1);
                    $.fn.zTree.init($("#roleTree2"), setting, resultStr2);
                } else {
                    alert("查询角色出错!");
                }
            });
        }
    });
    return RoleAddView;
});

define("travsky/jcf/1.0.0/template/auth/roleAdd-debug.tpl", [], '<br/>\n<form class="form-horizontal" id = "addRoleForm"  role="form" method= "POST">\n	  <div class="form-group" id = "nameDiv" >\n	      <label for="name" class="col-sm-3 control-label">角色名称：</label>\n	      <div class="col-sm-4">\n	        <input type="text" id="name"   class="form-control input-sm"  placeholder="必填项" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "nameTip"></span></div>\n   	  </div>\n	  <div class="form-group" id = "descriptionDiv" >\n	      <label for="description" class="col-sm-3 control-label">角色描述：</label>\n	      <div class="col-sm-4">\n	        <input type="text" id="description"   class="form-control input-sm"  placeholder="必填项" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "descriptionTip"></span></div>\n   	  </div>\n</form>\n\n<input type = "hidden" id = "menuIds" value = "" />\n\n<div class="form-group">\n  <div class="col-sm-offset-2">\n     <button type="button" id = "backLastPageBtn" class="btn">返回</button>\n     <button type="button" id = "addRoleBtn" class="btn btn-primary">提交</button>\n     <span id = "powerTip" class = "text-danger"></span>\n  </div>\n</div>\n\n<div class="zTreeDemoBackground" style="padding-left:120px;width:270px;display:table-cell;">\n	<ul id="roleTree1" class="ztree"></ul>\n</div>\n<div class="zTreeDemoBackground" style="padding-left:150px;width:270px;display:table-cell;">\n	<ul id="roleTree2" class="ztree"></ul>\n</div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-26
 * Time: 上午10:50:36
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/auth/roleUpdate_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "ztree-core-debug", "ztree-excheck-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/auth/roleUpdate-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheck = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    //require('ztree-all')($);
    require("ztree-core-debug")($);
    require("ztree-excheck-debug")($);
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var RoleUpdateView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(options) {
            this.on("showPageInfo", this.showPageInfo);
        },
        events: {
            "click #updateRoleBtn": "updateRole",
            "blur #name": "checkName",
            "blur #description": "checkDescription",
            "click #backLastBtn": "backLastPage"
        },
        backLastPage: function() {
            window.history.back();
        },
        checkName: function() {
            if (this.model.get("operatorType") == "view") {
                return true;
            } else {
                var id = "name";
                var flag = inputCheck.checkInputMatchMaxLength(id, 30);
                if (flag) {
                    flag = this.checkNameExist();
                }
                return flag;
            }
        },
        checkDescription: function() {
            if (this.model.get("operatorType") == "view") {
                return true;
            } else {
                var id = "description";
                var flag = inputCheck.checkInputMatchMaxLength(id, 30);
                return flag;
            }
        },
        updateRole: function() {
            var flag = this.checkName();
            if (flag) {
                flag = this.checkDescription();
            }
            if (flag) {
                var zTree = $.fn.zTree.getZTreeObj("roleTree1");
                var nodes = zTree.getCheckedNodes(true);
                var zTree2 = $.fn.zTree.getZTreeObj("roleTree2");
                var nodes2 = zTree2.getCheckedNodes(true);
                //拼凑选中的串
                var idall = "";
                for (var i = 0; i < nodes.length; i++) {
                    idall += "," + nodes[i].id;
                }
                for (var i = 0; i < nodes2.length; i++) {
                    idall += "," + nodes2[i].id;
                }
                var roleId = $.trim($("#roleId").val());
                //角色权限非空校验
                if (idall.length > 0) {
                    $("#powerTip").html("");
                    idall = idall.substring(1);
                    flag = this.checkRoleDouble(idall, roleId);
                    //22
                    if (flag) {
                        //准备提交表单
                        var roleName = $.trim($("#name").val());
                        var roleDescr = $.trim($("#description").val());
                        var roleAtri = $.trim($("#menuIds").val());
                        //这个千万不可放在22前面，
                        var jsParam = {};
                        jsParam.id = roleId;
                        jsParam.name = roleName;
                        jsParam.description = roleDescr;
                        jsParam.menuIds = roleAtri;
                        this.submitForm(jsParam);
                    }
                } else {
                    var cmodel = new ConfirmModel({
                        btnok: "确认",
                        btncl: "关闭"
                    });
                    cmodel.set("msg", "角色权限不能为空！");
                    var cview = new ConfirmView({
                        model: cmodel
                    });
                    jcfManager.dialogRegion.show(cview);
                    cview.confirm();
                    return;
                }
            }
        },
        submitForm: function(jsParam) {
            var serverURL = "/" + jcfManager.appName + "/auth/updateRole.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            var cmodel = new ConfirmModel({
                btnok: "确认",
                btncl: "关闭"
            });
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var name = $.trim($("#name").val());
                    $("#orgRoleName").val(name);
                    cmodel.set("msg", "修改信息成功！");
                    var cview = new ConfirmView({
                        model: cmodel
                    });
                    jcfManager.dialogRegion.show(cview);
                    cview.confirm();
                } else {
                    cmodel.set("msg", "修改信息失败！");
                    var cview = new ConfirmView({
                        model: cmodel
                    });
                    jcfManager.dialogRegion.show(cview);
                    cview.confirm();
                }
            });
        },
        checkRoleDouble: function(idall, modifyRoleId) {
            var serverURL = "/" + jcfManager.appName + "/auth/isRepower4Update.action";
            var jsonParam = {
                idall: idall,
                modifyRoleId: modifyRoleId
            };
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            var flag = false;
            $.when(ajaxing).done(function(data) {
                if (data.result == "prosave") {
                    $("#powerTip").html("所选权限组合已存在");
                    flag = false;
                } else if (data.result == "bnfp") {
                    $("#powerTip").html("你不能分配大于你的权限的权限！");
                    flag = false;
                } else {
                    flag = true;
                    $("#powerTip").html("");
                    $("#menuIds").val(idall);
                }
            });
            return flag;
        },
        checkNameExist: function() {
            var orgRoleName = $.trim($("#orgRoleName").val());
            var id = "name";
            var value = $.trim($("#" + id).val());
            if (orgRoleName == value) {
                return true;
            } else {
                var flag = true;
                var serverURL = "/" + jcfManager.appName + "/auth/checkRoleNameExist.action";
                var jsonParam = {
                    name: value
                };
                var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        inputCheck.errInput(id, "角色名称已存在!");
                        flag = false;
                    } else if (data.flag == "false") {
                        inputCheck.successInput(id);
                        flag = true;
                    } else {
                        flag = false;
                        alert("检查出错!");
                    }
                });
                return flag;
            }
        },
        showPageInfo: function() {
            var setting = {
                check: {
                    enable: true,
                    chkboxType: {
                        Y: "ps",
                        N: "ps"
                    }
                },
                data: {
                    simpleData: {
                        enable: true
                    }
                }
            };
            var resultStr1 = this.model.get("resultStr1");
            var resultStr2 = this.model.get("resultStr2");
            $.fn.zTree.init($("#roleTree1"), setting, resultStr1);
            $.fn.zTree.init($("#roleTree2"), setting, resultStr2);
        }
    });
    return RoleUpdateView;
});

define("travsky/jcf/1.0.0/template/auth/roleUpdate-debug.tpl", [], '<br/>\n<form class="form-horizontal" id = "addRoleForm"  role="form" method= "POST">\n\n	  <input type = "hidden" id = "roleId" value = "<%=roleForm.id%>"/>\n	  <input type = "hidden" id = "orgRoleName" value = "<%=roleForm.name%>"/>\n	  \n	  <div class="form-group" id = "nameDiv" >\n	      <label for="name" class="col-sm-3 control-label">角色名称：</label>\n	      <div class="col-sm-4">\n	        <input type="text"  <%if(operatorType=="view"){%>readonly="readonly"<%}%>   id="name"  value = "<%=roleForm.name%>" class="form-control input-sm"  placeholder="必填项" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "nameTip"></span></div>\n   	  </div>\n	  <div class="form-group" id = "descriptionDiv" >\n	      <label for="description" class="col-sm-3 control-label">角色描述：</label>\n	      <div class="col-sm-4">\n	        <input type="text" id="description" <%if(operatorType=="view"){%>readonly="readonly"<%}%> value = "<%=roleForm.description%>"  class="form-control input-sm"  placeholder="必填项" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "descriptionTip"></span></div>\n   	  </div>\n</form>\n\n<input type = "hidden" id = "menuIds" value = "" />\n\n\n<div class="form-group">\n    <div class="col-sm-offset-2">\n	   <button type="button" id = "backLastBtn" class="btn">返回</button>\n		<%if(operatorType!="view"){%>\n			 <button type="button" id = "updateRoleBtn" class="btn btn-primary">提交</button>\n		<%}%>\n    </div>\n</div>\n\n<div class="zTreeDemoBackground" style="padding-left:120px;width:270px;display:table-cell;">\n	<ul id="roleTree1" class="ztree"></ul>\n</div>\n<div class="zTreeDemoBackground" style="padding-left:150px;width:270px;display:table-cell;">\n	<ul id="roleTree2" class="ztree"></ul>\n</div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-13
 * Time: 下午02:59:55
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/confirm_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ConfirmModel = Backbone.Model.extend({
        defaults: function() {
            return {
                msg: "内容",
                title: "提示",
                btnok: "确定",
                btncl: "取消",
                ccFlag: "true"
            };
        }
    });
    return ConfirmModel;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-13
 * Time: 下午02:59:55
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/confirm_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "bs-modal-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/confirm-debug.tpl");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    require("bs-modal-debug")($);
    var ConfirmView = Marionette.ItemView.extend({
        initialize: function() {
            this.model = this.model || new ConfirmModel();
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(viewTemplateStr),
        onShow: function() {
            var alr = $("#ycj-confirm");
            alr.modal({
                backdrop: "static"
            });
            alr.modal("show");
        },
        confirm: function(callback) {
            var alr = $("#ycj-confirm");
            if (callback && callback instanceof Function) {
                alr.find(".confirmOK").bind("click", function() {
                    callback(true);
                });
                alr.find(".confirmCancel").bind("click", function() {
                    callback(false);
                });
            }
        }
    });
    return ConfirmView;
});

define("travsky/jcf/1.0.0/template/confirm-debug.tpl", [], ' <div id="ycj-confirm" class="modal">\n    <div class="modal-dialog modal-sm">\n      <div class="modal-content">\n        <div class="modal-header">\n          <%if(ccFlag=="true"){%>\n              <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>\n          <%}%>\n          <h5 class="modal-title"><i class="fa fa-exclamation-circle"></i> <%=title%></h5>\n        </div>\n        <div class="modal-body small">\n          <p><span class = "text-info"><%=msg%></span></p>\n        </div>\n        <div class="modal-footer" >\n          <button type="button" class="btn btn-primary confirmOK" data-dismiss="modal"><%=btnok %></button>\n          <button type="button" class="btn btn-default confirmCancel" data-dismiss="modal"><%=btncl %></button>\n        </div>\n      </div>\n    </div>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-19
 * Time: 下午01:33:04
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/server/serverAdd_view-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug", "travsky/jcf/1.0.0/view/server/groupAdd_view-debug", "querystring-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/server/serverAddNext_view-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/server/nodeControllerCfg_view-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/view/server/domainParamCfg_view-debug", "icheck-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverMgrLayout-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ServerAddView = require("travsky/jcf/1.0.0/view/server/serverAdd_view-debug");
    var NodeControllerCfgView = require("travsky/jcf/1.0.0/view/server/nodeControllerCfg_view-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var authUtil = require("travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug");
    var rowViewTeplateStr = require("travsky/jcf/1.0.0/template/server/serverItem-debug.tpl");
    var tableViewTeplateStr = require("travsky/jcf/1.0.0/template/server/serverList-debug.tpl");
    var ServerItemView = Marionette.ItemView.extend({
        initialize: function() {
            this.model.on("change", this.render);
        },
        template: _.template(rowViewTeplateStr),
        tagName: "tr",
        events: {
            click: "highlightName",
            "click td.singleServerInfoTd a": "showSingleServerInfo",
            "click td.groupServerInfoTd a": "showGroupServerInfo"
        },
        showSingleServerInfo: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var serverId = $.trim($(e.target).attr("href"));
            var jString = {
                serverId: serverId
            };
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        showGroupServerInfo: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var groupId = $.trim($(e.target).attr("href"));
            var modelName = sidbarUtil.getModuleName();
            var jString = {
                groupId: groupId
            };
            appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        highlightName: function(e) {
            e.preventDefault();
            this.$el.toggleClass("warning");
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    var ServerListView = Marionette.CompositeView.extend({
        tagName: "table",
        className: "table table-bordered",
        template: _.template(tableViewTeplateStr),
        childView: ServerItemView,
        childViewContainer: "tbody"
    });
    var ServerMgrLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            //节点控制器配置
            var nodeControllerFlag = authUtil.getNodeControllerCfgFlag();
            this.model.set("nodeControllerFlag", nodeControllerFlag);
            //服务器添加
            var serverAddFlag = authUtil.getServerAddFlag();
            this.model.set("serverAddFlag", serverAddFlag);
            //域参数配置权限
            var domainParamCfgAuthFlag = authUtil.getDomainParamCfgFlag();
            this.model.set("domainParamCfgAuthFlag", domainParamCfgAuthFlag);
            this.on("showPageInfo", this.showPageInfo);
        },
        tagName: "div",
        template: _.template(viewTemplateStr),
        regions: {
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #serverMgrNav li a": "clickNavItem"
        },
        showPageInfo: function() {
            var selectedPageUI = this.queryString.selectedPageUI;
            this.showPageInfo2(selectedPageUI);
        },
        showPageInfo2: function(selectedPageUI) {
            if ("serverListUI" == selectedPageUI) {
                //服务器列表页面
                this.showServerListUI();
            } else if ("serverAddUI" == selectedPageUI) {
                //服务器添加页面
                this.showServerAddUI();
            } else if ("nodeControllerUI" == selectedPageUI) {
                //节点控制器配置页面
                this.showNodeControllerCfgUI();
            } else if ("domainParamCfgUI" == selectedPageUI) {
                this.showDomainParamCfgUI();
            }
        },
        clickNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var valStr = $(e.target).attr("href");
            var $curLi = $(e.target).parent();
            var $ul = $curLi.parent();
            if (!$curLi.hasClass("active")) {
                $ul.find("li").removeClass("active");
                $curLi.addClass("active");
                this.queryString.selectedPageUI = valStr;
                appRouter.navigate(modelName + "/param/" + QueryString.stringify(this.queryString));
                //下面是切换不同的视图
                this.showPageInfo2(valStr);
            }
        },
        showServerListUI: function() {
            var serverURL = "/" + util.getAppName() + "/server/searchPageServer.action";
            var collection = new Backbone.Collection();
            var model = new Backbone.Model();
            var self = this;
            if (self.queryString.currentPage == undefined) {
                self.queryString.currentPage = 1;
                self.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsonParam = {
                currentPage: self.queryString.currentPage,
                pageSize: self.queryString.pageSize
            };
            //currentPage:"1",pageSize:"10"
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var refreshSpace = 2e3;
            //刷新时间间隔
            var freshNum = 30;
            //刷新次数 //这里没有用默认的20次，因为这里有可能在添加服务器的时候需要刷新的时间较长一点才能正确显示
            var refreshTime = refreshSpace * freshNum;
            //共刷新多长时间
            var hash = window.location.hash;
            $("#freshPage4IndexServerUrl").val(hash);
            $.when(ajaxing).done(function(data) {
                model.set(data);
                collection.set(data.recordList);
                var listView = new ServerListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                var pbview = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbview);
                if (collection.length > 0) {
                    //执行定时更新状态函数
                    var ttt = setInterval(self.updatePageServerStatus, refreshSpace, collection);
                    $("#freshPage4IndexServerFlag").val(ttt);
                    setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                }
            });
        },
        updatePageServerStatus: function(collection) {
            //定时更新页面上的服务器状态字段
            var hash = window.location.hash;
            var hiddenHash = $("#freshPage4IndexServerUrl").val();
            var autoFreshFlag = $("#freshPage4IndexServerFlag").val();
            if (hash == hiddenHash) {
                var serverURL = "/" + jcfManager.appName + "/server/searchGroupServersStatus.action";
                var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    collection.each(function(m) {
                        var cName = m.get("serverName");
                        var cStatus = model.get("" + cName + "");
                        if (cStatus != undefined) {
                            m.set("processStatus", "" + cStatus + "");
                        }
                    });
                });
            } else {
                window.clearInterval(autoFreshFlag);
            }
        },
        showServerAddUI: function() {
            var serverURL = "/" + jcfManager.appName + "/server/toAddServerUI.action";
            var self = this;
            $.when(util.dealAjaxRequestWithoutParam(serverURL)).done(function(data) {
                var infosModel = new Backbone.Model(data);
                self.listRegion.show(new ServerAddView({
                    model: infosModel
                }));
                self.pagebarRegion.empty();
            });
        },
        showNodeControllerCfgUI: function() {
            var serverURL = "/" + jcfManager.appName + "/server/toNodeControllerConfigUI.action";
            var self = this;
            $.when(util.dealAjaxRequestWithoutParam(serverURL)).done(function(data) {
                if (data.flag == "true") {
                    var curModel = new Backbone.Model(data);
                    self.listRegion.show(new NodeControllerCfgView({
                        model: curModel
                    }));
                    self.pagebarRegion.empty();
                } else {
                    alert("跳转到节点控制器配置页面出错");
                }
            }).fail(function() {
                alert("跳转到节点控制器配置页面出错");
            });
        },
        showDomainParamCfgUI: function() {
            var DomainParamCfgView = require("travsky/jcf/1.0.0/view/server/domainParamCfg_view-debug");
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/server/readDomainParamCfgInfo.action";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data.param);
                    self.listRegion.show(new DomainParamCfgView({
                        model: model
                    }));
                    self.pagebarRegion.empty();
                } else {
                    alert("获取域参数信息粗错");
                }
            });
        }
    });
    return ServerMgrLayout;
});

define("travsky/jcf/1.0.0/template/server/serverMgrLayout-debug.tpl", [], '<div>\n	<ul class="nav nav-tabs" id = "serverMgrNav">    \n		<li  <%if("serverListUI"==selectedPageUI){%>class = "active"<%}%> ><a href="serverListUI">服务器列表</a></li>\n	    <%if(serverAddFlag=="true"){\n			%><li  <%if("serverAddUI"==selectedPageUI){%>class = "active"<%}%> ><a  href="serverAddUI" >服务器添加</a></li><%    \n  	    }%>\n	    <%if(nodeControllerFlag=="true"){\n			%><li  <%if("nodeControllerUI"==selectedPageUI){%>class = "active"<%}%> ><a  href="nodeControllerUI" >节点控制器配置</a></li><%\n  	    }%>\n  	    <%if(domainParamCfgAuthFlag=="true"){%>\n	    	<li <%if(\'domainParamCfgUI\'==selectedPageUI){%>class = "active"<%}%>   ><a  href="domainParamCfgUI" >域参数配置</a></li>\n  	    <%}%>\n	</ul>\n</div>\n<div  id = "listRegion"></div>\n<div id = "pagebarRegion"></div>\n<input id = "freshPage4IndexServerFlag" type = "hidden" />\n<input id = "freshPage4IndexServerUrl" type = "hidden" />\n\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-23
 * Time: 下午02:52:49
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverAdd_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug", "travsky/jcf/1.0.0/view/server/groupAdd_view-debug", "querystring-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/server/serverAddNext_view-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverAdd-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ServerUtil = require("travsky/jcf/1.0.0/view/server/server-debug");
    require("bs-modal-debug")($);
    var authUtil = require("travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug");
    var ServerAddView = Marionette.ItemView.extend({
        initialize: function() {
            var groupAddFlag = authUtil.getGroupAddFlag();
            this.model.set("groupAddFlag", groupAddFlag);
        },
        template: _.template(viewTemplateStr),
        onShow: function() {
            this.changeGroupName();
            this.getRegistryBindPort();
        },
        events: {
            "change #groupName": "changeGroupName",
            "click #addServerNext": "addServerNext",
            "blur #serverName": "checkServerName",
            "blur #rmiRegistryPort": "checkServerManagePort",
            "blur #rmiServerPort": "checkServerDeployPort",
            "blur #httpPort": "checkHttpPort",
            "blur #sshPort": "checkSshPort",
            "blur #java_Memory": "checkjava_Memory",
            "blur #java_Max_Perm_Mem": "checkjava_Max_Perm_Mem",
            //java_Perm_Mem
            "blur #direct_mem_size": "checkdirect_mem_size",
            "blur #gcFileNum": "checkgcFileNum",
            "blur #gcFileSize": "checkgcFileSize",
            "blur #bindPort": "checkBindPort",
            "blur #loadFactor": "checkloadfactor",
            "blur #memoryPoolSize": "checkMemoryPoolSize",
            "blur #blockSize": "checkBlockSize",
            "blur #heapMessageLimit": "checkHeapMessageLimit",
            "blur #channelQueueSize": "checkchannelQueueSize",
            "blur #channelConcurrent": "checkchannelConcurrent",
            "blur #connectionRetry": "checkconnectionRetry",
            "blur #heartBeatTime": "checkheartBeatTime",
            "blur #messageBodyLimit": "checkmessageBodyLimit",
            "change #registryIp": "getRegistryBindPort",
            "blur #registryPort": "checkserverport",
            "blur #synchTime": "checksynchtime",
            "blur #maxIdleTime": "checkMaxidletime",
            "blur #persistQueueFullPath": "checkpersistQueueFullPath",
            "change #registryIp": "getRegistryBindPort",
            "click #toAddGroupUIBtn": "toAddGroupUI",
            "blur #statisticsSyncTime": "checkStatisticsSyncTime",
            "blur #statisticsPath": "checkStatisticsPath",
            "blur #jvmHeapAlert": "checkJvmHeapAlert",
            "blur #jvmHeapBlock": "checkJvmHeapBlock",
            "blur #maxSize4Store": "checkMaxSize4Store",
            //checkMaxSize4Store//checkCacheNodeMaxCount
            "blur #cacheNodeAlert": "checkCacheNodeAlert"
        },
        toAddGroupUI: function() {
            //显示添加群组页面
            var GroupAddView = require("travsky/jcf/1.0.0/view/server/groupAdd_view-debug");
            var serverURL = "/" + jcfManager.appName + "/server/toAddGroupUI.action";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                var model = new Backbone.Model(data);
                model.set("checkGroupCategory", "1");
                //选中的组服务器类型
                jcfManager.dialogRegion.show(new GroupAddView({
                    model: model
                }));
                $("#addGroupModal").modal("show");
            });
        },
        addServerNext: function() {
            //提交表单
            var ServerAddNextView = require("travsky/jcf/1.0.0/view/server/serverAddNext_view-debug");
            var retInfo = ServerUtil.checkForm();
            var self = this;
            if (retInfo.flag) {
                var inputObj = retInfo.inputObj;
                var serverCategory = inputObj.serverCategory;
                inputObj.groupNameText = $("#groupName").find("option:selected").text();
                //弹出一个model框提示显示用户添加的服务器基本信息
                var curModel = new Backbone.Model();
                var serverURL = "/" + jcfManager.appName + "/server/toAddServerNextUI.action";
                var simpleData = {
                    serverCategory: inputObj.serverCategory,
                    groupName: inputObj.groupName
                };
                $.when(util.dealAjaxRequest4SimpleParam(serverURL, simpleData)).done(function(data) {
                    curModel.set(data);
                    ////groupName , categoryName
                    var groupNameStr = self.getGroupNameStr(data.groupName);
                    curModel.set("categoryName", groupNameStr);
                    curModel.set("serverCategory", serverCategory);
                    var showInfo = {
                        serverName: inputObj.serverName,
                        rmiRegistryHost: inputObj.rmiRegistryHost,
                        rmiRegistryPort: inputObj.rmiRegistryPort,
                        rmiServerPort: inputObj.rmiServerPort
                    };
                    curModel.set(showInfo);
                    var next_view = new ServerAddNextView({
                        model: curModel,
                        inputObj: inputObj
                    });
                    jcfManager.dialogRegion.show(next_view);
                    $("#addServerNextDialog").modal("show");
                }).fail(function() {
                    alert("添加信息失败");
                });
            }
        },
        getGroupNameStr: function(groupName) {
            var groupNameStr = "";
            if ("registryGroup" == groupName) {
                groupNameStr = "服务库";
            } else if ("contextGroup" == groupName) {
                groupNameStr = "上下文";
            } else if ("adapterGroup" == groupName) {
                groupNameStr = "适配";
            } else if ("cacheGroup" == groupName) {
                groupNameStr = "cache";
            } else {
                groupNameStr = "JCF";
            }
            return groupNameStr;
        },
        checkServerName: function() {
            //服务器名称
            ServerUtil.checkServerName();
        },
        checkServerManagePort: function() {
            //JMX Registry端口
            ServerUtil.checkServerManagePort();
        },
        checkServerDeployPort: function() {
            ServerUtil.checkServerDeployPort();
        },
        checkHttpPort: function() {
            ServerUtil.checkHttpPort();
        },
        checkSshPort: function() {
            ServerUtil.checkSshPort();
        },
        checkjava_Memory: function() {
            ServerUtil.checkjava_Memory();
        },
        checkdirect_mem_size: function() {
            ServerUtil.checkdirect_mem_size();
        },
        checkjava_Max_Perm_Mem: function() {
            //checkjava_Perm_Mem
            ServerUtil.checkjava_Max_Perm_Mem();
        },
        checkgcFileNum: function() {
            ServerUtil.checkgcFileNum();
        },
        checkgcFileSize: function() {
            ServerUtil.checkgcFileSize();
        },
        checkBindPort: function() {
            ServerUtil.checkBindPort();
        },
        checkloadfactor: function() {
            ServerUtil.checkloadfactor();
        },
        checkMemoryPoolSize: function() {
            ServerUtil.checkMemoryPoolSize();
        },
        checkBlockSize: function() {
            ServerUtil.checkBlockSize();
        },
        checkHeapMessageLimit: function() {
            ServerUtil.checkHeapMessageLimit();
        },
        checkchannelQueueSize: function() {
            ServerUtil.checkchannelQueueSize();
        },
        checkchannelConcurrent: function() {
            ServerUtil.checkchannelConcurrent();
        },
        checkconnectionRetry: function() {
            ServerUtil.checkconnectionRetry();
        },
        checkheartBeatTime: function() {
            ServerUtil.checkheartBeatTime();
        },
        checkmessageBodyLimit: function() {
            ServerUtil.checkmessageBodyLimit();
        },
        getRegistryBindPort: function() {
            ServerUtil.getRegistryBindPort();
        },
        checkserverport: function() {
            ServerUtil.checkserverport();
        },
        checksynchtime: function() {
            ServerUtil.checksynchtime();
        },
        checkMaxidletime: function() {
            ServerUtil.checkMaxidletime();
        },
        checkmaxFileSize: function() {
            ServerUtil.checkmaxFileSize();
        },
        checkmaxBackupIndex: function() {
            ServerUtil.checkmaxBackupIndex();
        },
        checkpersistQueueFullPath: function() {
            ServerUtil.checkpersistQueueFullPath();
        },
        checkStatisticsSyncTime: function() {
            ServerUtil.checkStatisticsSyncTime();
        },
        checkStatisticsPath: function() {
            ServerUtil.checkStatisticsPath();
        },
        checkJvmHeapAlert: function() {
            ServerUtil.checkJvmHeapAlert();
        },
        checkJvmHeapBlock: function() {
            ServerUtil.checkJvmHeapBlock();
        },
        checkMaxSize4Store: function() {
            ServerUtil.checkMaxSize4Store();
        },
        checkCacheNodeAlert: function() {
            ServerUtil.checkCacheNodeAlert();
        },
        getRegistryBindPort: function() {
            var registryIp = $("#registryIp").val();
            var serverURL = "/" + jcfManager.appName + "/server/getRegistryBindPort.action";
            var queryParam = {
                registryIp: registryIp
            };
            var waiting = util.dealAjaxRequest4SimpleParam(serverURL, queryParam);
            $.when(waiting).done(function(result) {
                $("#registryPort").val(result.bindPort);
            });
        },
        getCacheSpecialInputId: function() {
            var ids = [ "statisticsSyncTime", "statisticsPath", "jvmHeapAlert", "jvmHeapBlock", "cacheNodeMaxCount", "cacheNodeAlert" ];
            return ids;
        },
        hideCacheSpecialInputParam: function() {
            //隐藏cache服务器类型页面‘特有’input参数
            var ids = this.getCacheSpecialInputId();
            for (var i = 0; i < ids.length; i++) {
                var str = ids[i] + "Div";
                $("#" + str).hide();
            }
        },
        showCacheSpecialInputParam: function() {
            //显示cache服务器类型页面‘特有’input参数
            var ids = this.getCacheSpecialInputId();
            for (var i = 0; i < ids.length; i++) {
                var str = ids[i] + "Div";
                $("#" + str).show();
            }
        },
        changeGroupName: function() {
            var groupNameStr = $("#groupName").find("option:selected").text();
            if ("contextGroup" == groupNameStr) {
                //上下文服务器
                $("#serverCategory").html("<option value='3' selected = 'selected'>上下文服务器</option>");
                $("#serverCategory").attr("disabled", true);
                this.contextOption();
                //自动填充服务器名称
                $("#serverName").val("contextServer");
            } else if ("registryGroup" == groupNameStr) {
                //注册库服务器
                $("#serverCategory").html("<option value='4' selected = 'selected'>服务库</option>");
                $("#serverCategory").attr("disabled", true);
                if ($("#serverNameDiv").hasClass("has-error")) {
                    $("#serverNameDiv").removeClass("has-error");
                    $("#serverNameTip").html("");
                }
                this.serviceOption();
            } else if ("adapterGroup" == groupNameStr) {
                //适配服务器
                $("#serverCategory").html("<option value='1' selected = 'selected'>适配服务器</option>");
                $("#serverCategory").attr("disabled", true);
                this.adapterServerOption();
                //自动填充服务器名称
                $("#serverName").val("adapterServer");
            } else if ("cacheGroup" == groupNameStr) {
                $("#serverCategory").html("<option value='7' selected = 'selected'>cache服务器</option>");
                $("#serverCategory").attr("disabled", true);
                this.cacheServerOption();
                //自动填充服务器名称
                $("#serverName").val("cacheServer");
            } else {
                //jcf服务器
                $("#serverCategory").html("<option value='1' selected = 'selected'>JCF服务器</option>");
                $("#serverCategory").attr("disabled", false);
                this.serverOption();
                //自动填充服务器名称
                $("#serverName").val("");
            }
        },
        checkAllRegServerIsExist: function() {
            var serverURL = "/" + jcfManager.appName + "/server/checkAllRegServerIsExist.action";
            //checkRegServerIsExist
            $.when(util.dealAjaxRequestWithoutParam(serverURL)).done(function(result) {
                if (result !== "") {
                    if (result.count === "0") {
                        $("#serverName").val("registryServer");
                        $("#serverName").addClass("readonly");
                        $("#serverName").attr("readonly", true);
                    } else if (result.count === "1") {
                        if (result.serverName === "registryServer") {
                            $("#serverName").val("registryBakServer");
                            $("#serverName").addClass("readonly");
                            $("#serverName").attr("readonly", true);
                        } else {
                            $("#serverName").val("registryServer");
                            $("#serverName").addClass("readonly");
                            $("#serverName").attr("readonly", true);
                        }
                    } else {
                        $("#serverName").val("");
                        $("#serverName").addClass("readonly");
                        $("#serverName").attr("readonly", true);
                    }
                }
            });
        },
        cacheServerOption: function() {
            //cache服务器类型
            this.showCacheSpecialInputParam();
            $("#serverName").val("");
            $("#serverName").removeClass("readonly");
            $("#serverName").attr("readonly", false);
            $("#httpPortDiv").hide();
            $("#sshPortDiv").hide();
            $("#java_MemoryDiv").hide();
            $("#java_Perm_MemDiv").hide();
            $("#karaf_optsDiv").hide();
            $("#direct_mem_sizeDiv").hide();
            $("#gcoptionsDiv").hide();
            $("#rmiRegistryPortDiv").hide();
            $("#rmiServerPortDiv").hide();
            $("#bindPortDiv").hide();
            $("#loadFactorDiv").hide();
            $("#memoryPoolSizeDiv").hide();
            $("#blockSizeDiv").hide();
            $("#heapMessageLimitDiv").hide();
            $("#channelQueueSizeDiv").hide();
            $("#channelConcurrentDiv").hide();
            $("#connectionRetryDiv").hide();
            $("#heartBeatTimeDiv").hide();
            $("#messageBodyLimitDiv").hide();
            $("#sendMessageLimitDiv").hide();
            $("#registryIpDiv").hide();
            $("#registryPortDiv").hide();
            $("#synchTimeDiv").hide();
            $("#maxIdleTimeDiv").hide();
            $("#auditLevelDiv").hide();
            //$("#thresholdDiv").hide();
            //$("#maxFileSizeDiv").hide();
            //$("#maxBackupIndexDiv").hide();
            //测试说删除部分页面控件
            $("#java_Max_Perm_MemDiv").hide();
            $("#heapDumpPathDiv").hide();
            $("#gcFileDiv").hide();
            $("#gcRotationDiv").hide();
            $("#gcFileNumDiv").hide();
            $("#serverLogTypeDiv").hide();
            $("#gcFileSizeDiv").hide();
            $("#persistQueueFullPathDiv").hide();
            //测试说上下文服务器无日志级别
            $("#serverLogLevelDiv").show();
            //$("#auditLevelDiv").show() ;
            $("#serverLogType4CacheDiv").show();
        },
        contextOption: function() {
            //上下文服务器
            this.hideCacheSpecialInputParam();
            $("#serverName").val("");
            $("#serverName").removeClass("readonly");
            $("#serverName").attr("readonly", false);
            $("#httpPortDiv").hide();
            $("#sshPortDiv").hide();
            $("#java_MemoryDiv").hide();
            $("#java_Perm_MemDiv").hide();
            $("#karaf_optsDiv").hide();
            $("#direct_mem_sizeDiv").hide();
            $("#gcoptionsDiv").hide();
            $("#rmiRegistryPortDiv").hide();
            $("#rmiRegistryPort").val("");
            $("#rmiServerPort").val("");
            $("#rmiServerPortDiv").hide();
            $("#bindPortDiv").hide();
            $("#bindPort").val("");
            $("#loadFactorDiv").hide();
            $("#memoryPoolSizeDiv").hide();
            $("#blockSizeDiv").hide();
            $("#heapMessageLimitDiv").hide();
            $("#channelQueueSizeDiv").hide();
            $("#channelConcurrentDiv").hide();
            $("#connectionRetryDiv").hide();
            $("#heartBeatTimeDiv").hide();
            $("#messageBodyLimitDiv").hide();
            $("#sendMessageLimitDiv").hide();
            $("#registryIpDiv").hide();
            $("#registryPortDiv").hide();
            $("#synchTimeDiv").hide();
            $("#maxIdleTimeDiv").hide();
            $("#auditLevelDiv").hide();
            //$("#thresholdDiv").hide();
            //$("#maxFileSizeDiv").hide();
            //$("#maxBackupIndexDiv").hide();
            //测试说删除部分页面控件
            $("#java_Max_Perm_MemDiv").hide();
            $("#heapDumpPathDiv").hide();
            $("#gcFileDiv").hide();
            $("#gcRotationDiv").hide();
            $("#gcFileNumDiv").hide();
            $("#gcFileSizeDiv").hide();
            $("#serverLogTypeDiv").hide();
            //测试说上下文服务器无日志级别
            $("#serverLogLevelDiv").hide();
            $("#serverLogType4CacheDiv").hide();
            $("#persistQueueFullPathDiv").hide();
        },
        serviceOption: function() {
            //服务库
            this.hideCacheSpecialInputParam();
            this.checkAllRegServerIsExist();
            $("#httpPortDiv").hide();
            $("#sshPortDiv").show();
            $("#sshPort").val("6101");
            $("#java_MemoryDiv").show();
            $("#java_Perm_MemDiv").show();
            $("#karaf_optsDiv").show();
            $("#direct_mem_sizeDiv").hide();
            $("#gcoptionsDiv").hide();
            $("#rmiRegistryPortDiv").show();
            $("#rmiRegistryPort").val("6103");
            $("#rmiServerPortDiv").show();
            $("#rmiServerPort").val("6102");
            $("#bindPortDiv").show();
            $("#bindPort").val("6100");
            $("#loadFactorDiv").hide();
            $("#memoryPoolSizeDiv").hide();
            $("#blockSizeDiv").hide();
            $("#heapMessageLimitDiv").hide();
            $("#channelQueueSizeDiv").hide();
            $("#channelConcurrentDiv").hide();
            $("#connectionRetryDiv").hide();
            $("#heartBeatTimeDiv").hide();
            $("#messageBodyLimitDiv").hide();
            $("#sendMessageLimitDiv").hide();
            $("#registryIpDiv").hide();
            $("#registryPortDiv").hide();
            $("#synchTimeDiv").show();
            $("#maxIdleTimeDiv").show();
            $("#auditLevelDiv").hide();
            /*$("#thresholdDiv").hide();
			$("#maxFileSizeDiv").hide();
			$("#maxBackupIndexDiv").hide();*/
            //测试说上下文服务器不现实日志级别
            $("#serverLogLevelDiv").show();
            $("#serverLogTypeDiv").show();
            $("#serverLogType4CacheDiv").hide();
            $("#persistQueueFullPathDiv").hide();
        },
        adapterServerOption: function() {
            //适配服务器
            this.hideCacheSpecialInputParam();
            //jcf服务器
            $("#serverName").val("");
            $("#serverName").removeClass("readonly");
            $("#serverName").attr("readonly", false);
            $("#serverName").val("");
            $("#serverName").removeClass("readonly");
            $("#serverName").attr("readonly", false);
            $("#httpPortDiv").show();
            $("#httpPort").val("6260");
            $("#sshPortDiv").show();
            $("#sshPort").val("6160");
            $("#java_MemoryDiv").show();
            $("#java_Perm_MemDiv").show();
            $("#karaf_optsDiv").show();
            $("#direct_mem_sizeDiv").show();
            $("#gcoptionsDiv").show();
            $("#rmiRegistryPortDiv").show();
            $("#rmiRegistryPort").val("6460");
            $("#rmiServerPortDiv").show();
            $("#rmiServerPort").val("6360");
            $("#bindPortDiv").show();
            $("#bindPort").val("6060");
            $("#loadFactorDiv").show();
            $("#memoryPoolSizeDiv").show();
            $("#blockSizeDiv").show();
            $("#heapMessageLimitDiv").show();
            $("#channelQueueSizeDiv").show();
            $("#channelConcurrentDiv").show();
            $("#connectionRetryDiv").show();
            $("#heartBeatTimeDiv").show();
            $("#messageBodyLimitDiv").show();
            $("#sendMessageLimitDiv").show();
            $("#registryIpDiv").show();
            $("#registryPortDiv").show();
            $("#synchTimeDiv").show();
            $("#maxIdleTimeDiv").hide();
            $("#auditLevelDiv").show();
            /*$("#thresholdDiv").show();
			$("#maxFileSizeDiv").show();
			$("#maxBackupIndexDiv").show();*/
            //测试说上下文服务器不现实日志级别
            $("#serverLogTypeDiv").show();
            $("#serverLogLevelDiv").show();
            $("#serverLogType4CacheDiv").hide();
            $("#persistQueueFullPathDiv").show();
        },
        serverOption: function() {
            //JCF服务器
            this.hideCacheSpecialInputParam();
            //适配服务器
            $("#serverName").val("");
            $("#serverName").removeClass("readonly");
            $("#serverName").attr("readonly", false);
            $("#httpPortDiv").show();
            $("#httpPort").val("6280");
            $("#sshPortDiv").show();
            $("#sshPort").val("6180");
            $("#java_MemoryDiv").show();
            $("#java_Perm_MemDiv").show();
            $("#karaf_optsDiv").show();
            $("#direct_mem_sizeDiv").show();
            $("#gcoptionsDiv").show();
            $("#rmiRegistryPortDiv").show();
            $("#rmiRegistryPort").val("6480");
            $("#rmiServerPortDiv").show();
            $("#rmiServerPort").val("6380");
            $("#bindPortDiv").show();
            $("#bindPort").val("6080");
            $("#loadFactorDiv").show();
            $("#memoryPoolSizeDiv").show();
            $("#blockSizeDiv").show();
            $("#heapMessageLimitDiv").show();
            $("#channelQueueSizeDiv").show();
            $("#channelConcurrentDiv").show();
            $("#connectionRetryDiv").show();
            $("#heartBeatTimeDiv").show();
            $("#messageBodyLimitDiv").show();
            $("#sendMessageLimitDiv").show();
            $("#registryIpDiv").show();
            $("#registryPortDiv").show();
            $("#synchTimeDiv").show();
            $("#maxIdleTimeDiv").hide();
            $("#auditLevelDiv").show();
            /*$("#thresholdDiv").show();
			$("#maxFileSizeDiv").show();
			$("#maxBackupIndexDiv").show();*/
            $("#serverLogType4CacheDiv").hide();
            //测试说上下文服务器不现实日志级别
            $("#serverLogLevelDiv").show();
            $("#persistQueueFullPathDiv").show();
            $("#serverLogTypeDiv").show();
        },
        render: function() {
            //
            this.$el.html(this.template(this.model.toJSON()));
            return this;
        }
    });
    return ServerAddView;
});

define("travsky/jcf/1.0.0/template/server/serverAdd-debug.tpl", [], '<br>\n<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n   <div class="form-group">\n      <label for="groupName" class="col-sm-3 control-label">服务器组名称：</label>\n      <div class="col-sm-4">\n         <select id = "groupName"  class  = "form-control input-sm">\n         <%\n       		for(var i = 0 ; i < groupList.length;i++){\n       		%><option  <%if(i==0){%>selected = "selected"<%} %>   value = "<%=groupList[i].groupId%>"><%=groupList[i].groupName%></option><%\n       		}\n         %>\n         </select>\n      </div>\n      <div class="col-sm-2"><button type = "button" id = "toAddGroupUIBtn"  class = "btn myhand  <%if(groupAddFlag!="true"){%>disabled<%}%>">添加分组</button></div>\n   </div>\n   \n   <div class="form-group" id = "serverNameDiv" >\n      <label for="serverName" class="col-sm-3 control-label">服务器名称：</label>\n      <div class="col-sm-4">\n        <input type="text" id="serverName"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "serverNameTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "serverCategoryDiv">\n      <label for="serverCategory" class="col-sm-3 control-label">服务器类型：</label>\n      <div class="col-sm-4">\n      	 <select  id="serverCategory" class="form-control input-sm">\n			 <option value="1">JCF服务器</option>	\n		 </select>\n      </div>\n       <div><span id = "serverCategoryTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "rmiRegistryHostDiv">\n      <label for="rmiRegistryHost" class="col-sm-3 control-label">服务器IP：</label>\n      <div class="col-sm-4">\n         <select id="rmiRegistryHost"   class="form-control input-sm">\n         	<%for(var i = 0 ; i < nodeIpList.length; i ++){\n         	    if(i==0){\n            %>\n            		<option selected = "selected" value = "<%=nodeIpList[i].serverIp%>"><%=nodeIpList[i].serverIp%></option>\n            <%   \n         	    }else{\n         	%>\n         			<option  value = "<%=nodeIpList[i].serverIp%>"><%=nodeIpList[i].serverIp%></option>\n         	<%\n         	    }\n         	}\n         	%>\n         	\n         </select>\n      </div>\n      <div><span class = "text-danger">*</span><span id = "rmiRegistryHostTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "rmiRegistryPortDiv" >\n      <label for="rmiRegistryPort" class="col-sm-3 control-label">JMX Registry端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="rmiRegistryPort"   class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "rmiRegistryPortTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "rmiServerPortDiv">\n      <label for="rmiServerPort" class="col-sm-3 control-label">JMX Server端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="rmiServerPort"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "rmiServerPortTip" ></span></div>\n   </div>\n   \n   <div class="form-group" id= "httpPortDiv" >\n      <label for="httpPort" class="col-sm-3 control-label">HTTP端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="httpPort"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "httpPortTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "sshPortDiv" >\n      <label for="sshPort" class="col-sm-3 control-label">OSGI Console端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="sshPort"   class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "sshPortTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "java_MemoryDiv" >\n      <label for="java_Memory" class="col-sm-3 control-label">堆内存大小：</label>\n      <div class="col-sm-4 ">\n         <input type="text" id="java_Memory"   class="form-control input-sm" value="1536M"  placeholder="单位为kK,mM,gG">\n      </div>\n      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "java_MemoryTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "java_Max_Perm_MemDiv" >\n      <label for="java_Max_Perm_Mem" class="col-sm-3 control-label">永久代堆大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="java_Max_Perm_Mem"   class="form-control input-sm"  placeholder="单位为kK,mM,gG">\n      </div>\n      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "java_Max_Perm_MemTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "karaf_optsDiv" >\n      <label for="karaf_opts" class="col-sm-3 control-label">JVM扩展参数：</label>\n      <div class="col-sm-4">\n         <input type="text" id="karaf_opts"  class="form-control input-sm"  placeholder="配置的JVM参数超过系统内存值后将导致错误">\n      </div>\n      <div><span id = "karaf_optsTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "direct_mem_sizeDiv" >\n      <label for="direct_mem_size" class="col-sm-3 control-label">最大可分配系统内存：</label>\n      <div class="col-sm-4">\n         <input type="text" id="direct_mem_size"  class="form-control input-sm"  placeholder="不建议配置">\n      </div>\n      <div><span class = "text-info">(单位:kK,mM,gG)&nbsp;</span><span id = "direct_mem_sizeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "gcoptionsDiv" >\n      <label for="gcoptions" class="col-sm-3 control-label">GC选项：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcoptions"  class="form-control input-sm"  placeholder="">\n      </div>\n      <div><span id = "gcoptionsTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "heapDumpPathDiv" >\n      <label for="heapDumpPath" class="col-sm-3 control-label">堆内存快照的存储文件路径：</label>\n      <div class="col-sm-4">\n         <input type="text" id="heapDumpPath"   class="form-control input-sm"  placeholder="">\n      </div>\n      <div><span id = "heapDumpPathTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "gcFileDiv" >\n      <label for="gcFile" class="col-sm-3 control-label">GC日志的文件名和路径：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFile"   class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n      </div>\n      <div><span id = "gcFileTip"></span></div>\n   </div>\n   \n    <div class="form-group" id = "gcRotationDiv" >\n      <label for="gcRotation" class="col-sm-3 control-label">GC日志自动转储：</label>\n      <div class="col-sm-4">\n      	 <select id="gcRotation"  class="form-control input-sm" placeholder="JDK 7版本开始兼容">\n			<option value="-XX:+UseGCLogFileRotation">true</option>\n			<option value="" selected="selected">false</option>\n		 </select>\n      </div>\n       <div><span id = "gcRotationTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "gcFileNumDiv" >\n      <label for="gcFileNum" class="col-sm-3 control-label">GC日志绕接数目：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFileNum"   class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n      </div>\n      <div ><span id = "gcFileNumTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "gcFileSizeDiv" >\n      <label for="gcFileSize" class="col-sm-3 control-label">GC日志大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFileSize"   class="form-control input-sm"  placeholder="单位为kK,mM,gG">\n      </div>\n      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "gcFileSizeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "bindPortDiv" >\n      <label for="bindPort" class="col-sm-3 control-label">监听端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="bindPort"   class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "bindPortTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "loadFactorDiv">\n      <label for="loadFactor" class="col-sm-3 control-label">负载均衡因子：</label>\n      <div class="col-sm-4">\n         <input type="text" id="loadFactor" class="form-control input-sm" value="10"  placeholder="必填项,正整数">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "loadFactorTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "memoryPoolSizeDiv" >\n      <label for="memoryPoolSize" class="col-sm-3 control-label">系统内存池的大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="memoryPoolSize"   class="form-control input-sm" value="0"  placeholder="必填项目，单位：M">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位:M)&nbsp;</span><span  id = "memoryPoolSizeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "blockSizeDiv" >\n      <label for="blockSize" class="col-sm-3 control-label">系统内存块大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="blockSize" class="form-control input-sm"  value="8" placeholder="必填项，单位：KB">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位:KB)&nbsp;</span><span id = "blockSizeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "heapMessageLimitDiv" >\n      <label for="heapMessageLimit" class="col-sm-3 control-label">JVM内存中消息体最大值：</label>\n      <div class="col-sm-4">\n         <input type="text" id="heapMessageLimit"   class="form-control input-sm" value="-1" placeholder="必填项，单位：Byte">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位:Byte)&nbsp;</span><span id = "heapMessageLimitTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "channelQueueSizeDiv" >\n      <label for="channelQueueSize" class="col-sm-3 control-label">发送队列大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="channelQueueSize"   class="form-control input-sm" value="2048"  placeholder="必填项">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "channelQueueSizeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "channelConcurrentDiv" >\n      <label for="channelConcurrent" class="col-sm-3 control-label">连接并发数：</label>\n      <div class="col-sm-4">\n         <input type="text" id="channelConcurrent"   class="form-control input-sm"  value="2" placeholder="必填项">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "channelConcurrentTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "connectionRetryDiv" >\n      <label for="connectionRetry" class="col-sm-3 control-label">链接重试次数：</label>\n      <div class="col-sm-4">\n         <input type="text" id="connectionRetry"   class="form-control input-sm"  value="3" placeholder="必填项">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "connectionRetryTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "heartBeatTimeDiv" >\n      <label for="heartBeatTime" class="col-sm-3 control-label">JCF服务器通信的心跳间隔：</label>\n      <div class="col-sm-4">\n         <input type="text" id="heartBeatTime"   class="form-control input-sm" value="30"  placeholder="必填项，单位：秒（s）">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位：秒(s))&nbsp;</span><span id = "heartBeatTimeTip"></span></div>\n   </div>\n   \n  \n   <input type="hidden" id="messageBodyLimit"    value="500" >\n   \n   <div class="form-group" id = "registryIpDiv" >\n      <label for="registryIp" class="col-sm-3 control-label">注册库IP：</label>\n      <div class="col-sm-4">\n         <select id = "registryIp" class="form-control input-sm">\n         	<%for(var i = 0 ; i < nodeIpList.length; i ++){\n         	    if(i==0){\n            %>\n            		<option selected = "selected" value = "<%=nodeIpList[i].serverIp%>"><%=nodeIpList[i].serverIp%></option>\n            <%   \n         	    }else{\n         	%>\n         			<option  value = "<%=nodeIpList[i].serverIp%>"><%=nodeIpList[i].serverIp%></option>\n         	<%\n         	    }\n         	}\n         	%>\n         </select>\n      </div>\n   </div>\n   \n   <div class="form-group" id = "registryPortDiv" >\n      <label for="registryPort" class="col-sm-3 control-label">注册库端口：</label>\n      <div class="col-sm-4">\n         <input type="text" id="registryPort"   class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "registryPortTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "synchTimeDiv" >\n      <label for="synchTime" class="col-sm-3 control-label">注册库同步间隔：</label>\n      <div class="col-sm-4">\n         <input type="text" id="synchTime"   class="form-control input-sm" value="5" placeholder="必填项，单位：秒（s）">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位：秒(s))&nbsp;</span><span id = "synchTimeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "maxIdleTimeDiv" >\n      <label for="maxIdleTime" class="col-sm-3 control-label">JCF服务器失效超时：</label>\n      <div class="col-sm-4">\n         <input type="text" id="maxIdleTime"   class="form-control input-sm" value="180" placeholder="必填项，单位：秒（s）">\n      </div>\n      <div><span class = "text-danger">*</span><span>(单位：秒(s))&nbsp;</span><span  id = "maxIdleTimeTip" ></span></div>\n   </div>\n   \n   \n   <!--新需求修改，跟踪带相关配置修改-->\n   \n   <div class="form-group" id = "auditLevelDiv" >\n      <label for="auditLevel" class="col-sm-3 control-label">跟踪带日志输出规则：</label>\n      <div class="col-sm-4">\n      	 <select id="auditLevel" class="form-control input-sm" >\n      	 	<%for(var i = 0 ; i < tracLogKeyList.length ; i ++){\n      	 		if(i==0){\n      	 			%><option selected = "selected" value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n      	 		}else{\n      	 			%><option value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n      	 		}\n      	 	}%>\n		 </select>\n      </div>\n   </div>\n   \n   \n   \n   <div class="form-group" id = "persistQueueFullPathDiv" >\n      <label for="persistQueueFullPath" class="col-sm-3 control-label">服务器持久化队列文件保存路径：</label>\n      <div class="col-sm-4">\n         <input type="text" id="persistQueueFullPath"   class="form-control input-sm" value="/opt/applog/jcf/"  placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "persistQueueFullPathTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "serverLogLevelDiv" >\n      <label for="serverLogLevel" class="col-sm-3 control-label">服务器日志级别：</label>\n      <div class="col-sm-4">\n         <select id = "serverLogLevel" class="form-control input-sm" >\n         	<%for(var i = 0 ; i < serverLogLevels.length ; i++){\n         		if(i==0){\n         	%>\n         			<option selected = "selected" value = "<%=serverLogLevels[i]%>"><%=serverLogLevels[i]%></option>\n         	<%\n         		}else{\n         	%>\n         			<option value = "<%=serverLogLevels[i]%>"><%=serverLogLevels[i]%></option>\n         	<%	\n         		}\n         	}%>\n         </select>\n      </div>\n   </div>\n   \n   <div class="form-group" id = "serverLogTypeDiv" >\n      <label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n      <div class="col-sm-4">\n         <select id = "serverLogType" class="form-control input-sm" >\n         	<%\n         		for(var i = 0 ; i < serverLogTypeList.length;i++){\n         		   if(i==0){\n            %>\n            			<option selected = "selected" value = "<%=serverLogTypeList[i].key%>"><%=serverLogTypeList[i].value%></option>\n            <%\n         		   }else{\n         	%>\n         				<option value = "<%=serverLogTypeList[i].key%>"><%=serverLogTypeList[i].value%></option>\n         	<%\n         		   }\n         		}\n         	%>\n         </select>\n      </div>\n   </div>\n   \n   \n    <!--1.3新增，cache服务器日志类型只有两种,(按天，大小)-->\n    <div class="form-group" id = "serverLogType4CacheDiv" >\n      <label for="serverLogType4Cache" class="col-sm-3 control-label">服务器日志类型：</label>\n      <div class="col-sm-4">\n         <select id = "serverLogType4Cache" class="form-control input-sm" >\n         	<option value="daily" selected="selected">按天记录</option>\n			<option value="roll">按大小记录</option>\n         </select>\n      </div>\n   </div>\n   \n   <!--1.3修改增加参数-->\n   \n   \n   <input type = "hidden" id = "jvmMemory4Cache" value = "<%=cacheGroupMap.jvmMemory%>"/>\n   \n   <div class="form-group" id = "statisticsSyncTimeDiv" >\n      <label for="statisticsSyncTime" class="col-sm-3 control-label">统计数据同步时间：</label>\n      <div class="col-sm-4">\n         <input type="text" id="statisticsSyncTime"  value = "<%=cacheGroupMap.statisticsSyncTime%>"  class="form-control input-sm"   placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span class= "text-info">(单位:秒(s))</span><span id = "statisticsSyncTimeTip"></span></div>\n   </div>\n   \n   <!--监控文件目标路径隐藏-->\n   <input type="hidden" id="statisticsPath"  value = "<%=cacheGroupMap.statisticsPath%>"  class="form-control input-sm"   placeholder="">\n   <!--监控文件目标路径隐藏-->\n   \n   \n   \n   <div class="form-group" id = "jvmHeapAlertDiv" >\n      <label for="jvmHeapAlert" class="col-sm-3 control-label">JVM内存报警阈值(百分比)：</label>\n      <div class="col-sm-4">\n         <input type="text" id="jvmHeapAlert" value = "<%=cacheGroupMap.jvmHeapAlert%>"   class="form-control input-sm"   placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "jvmHeapAlertTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "jvmHeapBlockDiv" >\n      <label for="jvmHeapBlock" class="col-sm-3 control-label">JVM内存阻塞阈值(百分比)：</label>\n      <div class="col-sm-4">\n         <input type="text" id="jvmHeapBlock" value = "<%=cacheGroupMap.jvmHeapBlock%>"  class="form-control input-sm"   placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "jvmHeapBlockTip"></span></div>\n   </div>\n   \n   \n   <div class="form-group" id = "maxSize4StoreDiv" >\n      <label for="maxSize4Store" class="col-sm-3 control-label">存储最大个数：</label>\n      <div class="col-sm-4">\n         <input type="text" id="maxSize4Store"  value = "<%=cacheGroupMap.maxSize4Store%>"  class="form-control input-sm"  placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "maxSize4StoreTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "cacheNodeAlertDiv" >\n      <label for="cacheNodeAlert" class="col-sm-3 control-label">存储报警阈值(个)：</label>\n      <div class="col-sm-4">\n         <input type="text" id="cacheNodeAlert"  value = "<%=cacheGroupMap.cacheNodeAlert%>" class="form-control input-sm"   placeholder="">\n      </div>\n      <div><span class = "text-danger">*</span><span id = "cacheNodeAlertTip"></span></div>\n   </div>\n   \n   \n</form>\n	\n<div class="form-group">\n  <div class="col-sm-offset-2 col-sm-10">\n     <button type="button" id = "addServerNext" class="btn btn-primary">下一步</button>\n  </div>\n</div>\n\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-24
 * Time: 下午06:10:28
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/server-debug", [ "jquery-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var InputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var ServerUtil = {
        getFormInputInfos: function() {
            var formIds = [ "groupName", "serverName", "serverCategory", "rmiRegistryHost", "rmiRegistryPort", "rmiServerPort", "httpPort", "sshPort", "java_Memory", "java_Max_Perm_Mem", "karaf_opts", "direct_mem_size", "gcoptions", "heapDumpPath", "gcFile", "gcRotation", "gcFileNum", "gcFileSize", "bindPort", "loadFactor", "memoryPoolSize", "blockSize", "heapMessageLimit", "channelQueueSize", "channelConcurrent", "connectionRetry", "heartBeatTime", "messageBodyLimit", "registryIp", "registryPort", "synchTime", "maxIdleTime", "auditLevel", "persistQueueFullPath", "serverLogLevel", "serverLogType", "statisticsSyncTime", "statisticsPath", "jvmHeapAlert", "jvmHeapBlock", "maxSize4Store", "cacheNodeAlert", "serverLogType4Cache", "jvmMemory4Cache" ];
            var obj = {};
            for (var i = 0; i < formIds.length; i++) {
                var curId = formIds[i];
                var val = $("#" + curId).val();
                var evalStr = "obj." + curId + "='" + val + "' ;";
                eval(evalStr);
            }
            //最后要重置一个属性
            obj.bindAddress = obj.rmiRegistryHost;
            return obj;
        },
        checkForm: function() {
            if ($("#serverCategory").val() === "1") {
                //jcf服务器
                return this.checkJCFServerForm();
            } else if ($("#serverCategory").val() === "3") {
                //上下文服务器
                return this.checkMemcacheServerForm();
            } else if ($("#serverCategory").val() === "4") {
                //服务库
                return this.checkRegistryServerForm();
            } else if ($("#serverCategory").val() === "7") {
                return this.checkCacheServerForm();
            } else {
                return false;
            }
        },
        checkCacheServerForm: function() {
            //检查cache服务器表单数据
            var retInfo = {};
            retInfo.flag = false;
            if (this.checkServerName() && this.checkStatisticsSyncTime() && this.checkStatisticsPath() && this.checkJvmHeapAlert() && this.checkJvmHeapBlock() && this.checkMaxSize4Store() && this.checkCacheNodeAlert()) {
                if (!this.checkJcfCacheServerExistByServerIp()) {
                    retInfo.flag = true;
                    var inputObj = this.getFormInputInfos();
                    retInfo.inputObj = inputObj;
                }
            }
            return retInfo;
        },
        checkJCFServerForm: function() {
            var retInfo = {};
            retInfo.flag = false;
            if (this.checkRmiRegistryHost() && this.checkServerName() && this.checkServerManagePort() && this.checkServerDeployPort() && this.checkSshPort() && this.checkHttpPort() && this.checkBindPort() && this.checkloadfactor() && this.checkMemoryPoolSize() && this.checkBlockSize() && this.checkHeapMessageLimit() && this.checkchannelQueueSize() && this.checkchannelConcurrent() && this.checkconnectionRetry() && this.checkheartBeatTime() && this.checkmessageBodyLimit() && this.checksynchtime() && this.checkserviceip() && this.checkserverport() && this.checkjava_Memory() && this.checkjava_Max_Perm_Mem() && this.checkmaxFileSize() && this.checkmaxBackupIndex() && this.checkpersistQueueFullPath()) {
                // jcf服务器
                retInfo.flag = true;
                var inputObj = this.getFormInputInfos();
                retInfo.inputObj = inputObj;
            }
            //return false;
            return retInfo;
        },
        checkRegistryServerForm: function() {
            var retInfo = {};
            retInfo.flag = false;
            if (this.checkRmiRegistryHost() && this.checkRegServerIsExist() && this.checkServerName() && this.checkServerManagePort() && this.checkServerDeployPort() && this.checkSshPort() && this.checkBindPort() && this.checksynchtime() && this.checkMaxidletime() && this.checkjava_Memory()) {
                // 服务库
                retInfo.flag = true;
                //return true;
                var inputObj = this.getFormInputInfos();
                retInfo.inputObj = inputObj;
            }
            return retInfo;
        },
        checkMemcacheServerForm: function() {
            //上下文服务器在一个ip上只能存在一个(后期bug修改)
            var retInfo = {};
            retInfo.flag = false;
            if (this.checkServerName() && this.checkRmiRegistryHost()) {
                // 上下文
                if (!this.checkContextServerExistByServerIp()) {
                    retInfo.flag = true;
                    var inputObj = this.getFormInputInfos();
                    retInfo.inputObj = inputObj;
                }
            }
            return retInfo;
        },
        checkStatisticsSyncTime: function() {
            var flag = false;
            var id = "statisticsSyncTime";
            var maxLength = 10;
            flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkStatisticsPath: function() {
            var flag = false;
            var id = "statisticsPath";
            flag = true;
            //后期如果需要校验，在此补业务逻辑即可
            return flag;
        },
        checkJvmHeapAlert: function() {
            var flag = false;
            var id = "jvmHeapAlert";
            var minNum = 1;
            var maxNum = 100;
            flag = InputUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkJvmHeapBlock: function() {
            var flag = false;
            var id = "jvmHeapBlock";
            var minNum = 1;
            var maxNum = 100;
            flag = InputUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkMaxSize4Store: function() {
            var flag = false;
            var id = "maxSize4Store";
            //checkMaxSize4Store
            flag = InputUtil.checkInputMatchIntegerAndMaxLength(id, 10);
            return flag;
        },
        checkCacheNodeAlert: function() {
            var flag = false;
            var id = "cacheNodeAlert";
            flag = InputUtil.checkInputMatchIntegerAndMaxLength(id, 10);
            return flag;
        },
        checkJcfCacheServerExistByServerIp: function() {
            //相同ip的上下文服务器，添加第二个时，应给出提示，不能重复添加。
            var serverIp = $.trim($("#rmiRegistryHost").val());
            //与后台存储的所有服务器比较
            var serverURL = "/" + jcfManager.appName + "/server/isJcfCacheServerExistByServerIp.action";
            var jsonParam = {
                serverIp: serverIp
            };
            var flag = true;
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "false") {
                    flag = false;
                } else if (data.flag == "true") {
                    var av = new AlertView({
                        msg: "相同IP的JcfCache服务器只能存在一个!"
                    });
                    jcfManager.dialogRegion.show(av);
                }
            });
            return flag;
        },
        checkContextServerExistByServerIp: function() {
            //相同IP的上下文服务器，添加第二个时，应给出提示，不能重复添加。
            var serverIp = $.trim($("#rmiRegistryHost").val());
            //与后台存储的所有服务器比较
            var serverURL = "/" + jcfManager.appName + "/server/isContextServerExistByServerIp.action";
            var jsonParam = {
                serverIp: serverIp
            };
            var flag = true;
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "false") {
                    flag = false;
                } else if (data.flag == "true") {
                    var av = new AlertView({
                        msg: "相同Ip的上下文服务器只能存在一个!"
                    });
                    jcfManager.dialogRegion.show(av);
                }
            });
            return flag;
        },
        checkRmiRegistryHost: function() {
            var id = "rmiRegistryHost";
            return InputUtil.checkInputMatchIP(id);
        },
        checkheartBeatTime: function() {
            // 验证心跳间隔
            var id = "heartBeatTime";
            var maxLength = 10;
            return InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
        },
        checkchannelConcurrent: function() {
            // 连接并发数
            var id = "channelConcurrent";
            var maxLength = 10;
            return InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
        },
        checkmessageBodyLimit: function() {
            // JCF服务消息的body大小限制
            var id = "messageBodyLimit";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkserviceip: function() {
            //有的地方暂时没有使用
            var id = "registryIp";
            var flag = InputUtil.checkInputMatchIP(id);
            return flag;
        },
        checkloadfactor: function() {
            // 验证JCF服务器负载因子
            var id = "loadFactor";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkchannelQueueSize: function() {
            // 验证发送队列大小
            var id = "channelQueueSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = InputUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkmaxBackupIndex: function() {
            var id = "maxBackupIndex";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLengthCanNull(id, maxLength);
            return flag;
        },
        checkconnectionRetry: function() {
            // 链接重试次数
            var id = "connectionRetry";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checksendRetry: function() {
            // 验证消息发送重试次数
            var id = "sendRetry";
            var maxLength = 5;
            var flag = InputUtil.checkInputMatchNumAndMaxLength(id, maxLength);
            return flag;
        },
        checkserviceip: function() {
            // 验证服务库IP
            var id = "registryIp";
            var flag = InputUtil.checkInputMatchIP(id);
            return flag;
        },
        checkserverport: function() {
            // 验证服务库端口
            var id = "registryPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checksynchtime: function() {
            // 验证服务库同步间隔
            var id = "synchTime";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkBindAddress: function() {
            // 验证服务库IP地址
            var id = "libraryBindAddress";
            var flag = InputUtil.checkInputMatchIP(id);
            return flag;
        },
        checkSynchtime: function() {
            // 验证同步间隔时间
            var id = "librarySynchtime";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchNumAndMaxLength(id, maxLength);
            return flag;
        },
        checkMaxidletime: function() {
            // 验证JCF服务器失效超时
            var id = "maxIdleTime";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkServerName: function() {
            // 验证服务器名字
            var id = "serverName";
            var serverName = $("#" + id).val();
            var returnFlag = 0;
            var flag = InputUtil.checkInputMatchMaxLength(id, 20);
            if (flag) {
                flag = InputUtil.checkGoodString(id);
            }
            if (flag) {
                var serverURL = "/" + jcfManager.appName + "/server/checkServerNameExist.action";
                var simpleQData = {
                    serverName: serverName
                };
                var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, simpleQData);
                $.when(ajaxing).done(function(result) {
                    if (result !== "") {
                        if (result.isExist === "1") {
                            InputUtil.errInput(id, "服务器名称已存在，请重新为服务器起名");
                        } else {
                            InputUtil.successInput(id);
                            returnFlag = 1;
                        }
                    }
                });
            }
            if (returnFlag === 0) {
                return false;
            } else {
                return true;
            }
        },
        checkRegServerIsExist: function() {
            //检查注册库服务器是否存在
            var rmiRegistryHost = $("#rmiRegistryHost").val();
            var returnFlag = 0;
            $.ajax({
                dataType: "json",
                type: "POST",
                url: "/" + jcfManager.appName + "/server/checkRegServerIsExist.action",
                async: false,
                data: {
                    rmiRegistryHost: rmiRegistryHost
                },
                success: function(result) {
                    if (result !== "") {
                        if (result.isExist === "1") {
                            var av = new AlertView({
                                msg: "该域注册库已存在"
                            });
                            jcfManager.dialogRegion.show(av);
                        } else {
                            returnFlag = 1;
                        }
                    }
                }
            });
            if (returnFlag === 0) {
                return false;
            } else {
                return true;
            }
        },
        checkServerManagePort: function() {
            // 验证服务器管理端口
            var id = "rmiRegistryPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checkServerDeployPort: function() {
            // 验证服务器部署端口
            var id = "rmiServerPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checkHttpPort: function() {
            // 验证http端口
            var id = "httpPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checkSshPort: function() {
            // 验证osgi端口
            var id = "sshPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checkBindPort: function() {
            // 验证监听端口
            var id = "bindPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        },
        checkMemoryPoolSize: function() {
            // 验证内存池大小//可以为0
            var id = "memoryPoolSize";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkBlockSize: function() {
            // 验证内存块大小
            var id = "blockSize";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkjava_Memory: function() {
            //堆 内存大小
            var id = "java_Memory";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为kK,mM,gG";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkjava_Perm_Mem: function() {
            var id = "java_Perm_Mem";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为kK,mM,gG";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkdirect_mem_size: function() {
            var id = "direct_mem_size";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为kK,mM,gG";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkjava_Max_Perm_Mem: function() {
            var id = "java_Max_Perm_Mem";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为kK,mM,gG";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkmaxFileSize: function() {
            var id = "maxFileSize";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG][bB]$/;
            var errTip = "单位只能为kb,KB,mb,MB,gb,GB";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkHeapMessageLimit: function() {
            // 消息体大小限制
            var id = "heapMessageLimit";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchNumAndMaxLength(id, maxLength);
            return flag;
        },
        checksendMessageLimit: function() {
            // 消息整体内容大小限制
            var id = "sendMessageLimit";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchNumAndMaxLength(id, maxLength);
            return flag;
        },
        checkpersistQueueFullPath: function() {
            //验证心跳间隔
            var id = "persistQueueFullPath";
            var flag = InputUtil.checkNotNull(id);
            return flag;
        },
        checkgcFileSize: function() {
            var id = "gcFileSize";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为k,K,m,M,g,G";
            var flag = InputUtil.checkInputMatchRegularCanNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkgcFileNum: function() {
            //验证心跳间隔
            var id = "gcFileNum";
            var flag = true;
            if ($.trim($("#" + id).val()).length > 0) {
                var maxLength = 10;
                flag = InputUtil.checkMaxLengthValid(id, maxLength);
                if (flag) {
                    flag = InputUtil.checkIsPositiveInteger(id);
                }
            } else {
                InputUtil.clearInput(id);
            }
            return flag;
        },
        getRegistryBindPort: function() {
            var registryIp = $("#registryIp").val();
            $.ajax({
                dataType: "json",
                type: "POST",
                url: "getRegistryBindPort.action",
                async: true,
                data: {
                    registryIp: registryIp
                },
                success: function(result) {
                    $("#registryPort").attr("value", result.bindPort);
                }
            });
        },
        checkServerManagePort4Update: function() {
            //修改信息，检查端口专用
            //之前的逻辑
            var id = "rmiRegistryPort";
            var flag = this.checkServerManagePort();
            //之后补充的逻辑
            if (flag) {
                var value1 = $("#" + id).val();
                var value2 = $("#orgi" + id).val();
                if (value1 != value2) {
                    //如果修改，则需要检查端口重复问题
                    var serverIp = $("#rmiRegistryHost").val();
                    var port = value1;
                    flag = this.checkPortNotExist4Update(serverIp, port, id);
                }
            }
            return flag;
        },
        checkServerDeployPort4Update: function() {
            var id = "rmiServerPort";
            var flag = this.checkServerDeployPort();
            //之后补充的逻辑
            if (flag) {
                var value1 = $("#" + id).val();
                var value2 = $("#orgi" + id).val();
                if (value1 != value2) {
                    //如果修改，则需要检查端口重复问题
                    var serverIp = $("#rmiRegistryHost").val();
                    var port = value1;
                    flag = this.checkPortNotExist4Update(serverIp, port, id);
                }
            }
            return flag;
        },
        checkHttpPort4Update: function() {
            var id = "httpPort";
            var flag = this.checkHttpPort();
            //之后补充的逻辑
            if (flag) {
                var value1 = $("#" + id).val();
                var value2 = $("#orgi" + id).val();
                if (value1 != value2) {
                    //如果修改，则需要检查端口重复问题
                    var serverIp = $("#rmiRegistryHost").val();
                    var port = value1;
                    flag = this.checkPortNotExist4Update(serverIp, port, id);
                }
            }
            return flag;
        },
        checkSshPort4Update: function() {
            var id = "sshPort";
            var flag = this.checkSshPort();
            //之后补充的逻辑
            if (flag) {
                var value1 = $("#" + id).val();
                var value2 = $("#orgi" + id).val();
                if (value1 != value2) {
                    //如果修改，则需要检查端口重复问题
                    var serverIp = $("#rmiRegistryHost").val();
                    var port = value1;
                    flag = this.checkPortNotExist4Update(serverIp, port, id);
                }
            }
            return flag;
        },
        checkBindPort4Update: function() {
            var id = "bindPort";
            var flag = this.checkBindPort();
            //之后补充的逻辑
            if (flag) {
                var value1 = $("#" + id).val();
                var value2 = $("#orgi" + id).val();
                if (value1 != value2) {
                    //如果修改，则需要检查端口重复问题
                    var serverIp = $("#rmiRegistryHost").val();
                    var port = value1;
                    flag = this.checkPortNotExist4Update(serverIp, port, id);
                }
            }
            return flag;
        },
        checkPortNotExist4Update: function(serverIp, port, id) {
            //检查端口不存在并合法
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/server/checkPortIsUseing.action";
            var jsonParam = {
                serverIp: serverIp,
                port: port
            };
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(result) {
                if (result.isUsed === "1") {
                    flag = InputUtil.errInput(id, "端口被占用");
                } else if (result.isUsed === "2") {
                    flag = InputUtil.errInput(id, "网络连接不可用，无法判断端口号是否被占用");
                } else {
                    flag = InputUtil.successInput(id);
                }
            });
            return flag;
        }
    };
    return ServerUtil;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-21
 * Time: 下午02:01:30
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    //组服务器模块(点击组服务器)--------------------------------开始-------------------------------------------------------------------
    //jcf服务器部分----------------------------------------------------------------------
    AuthCheckUtil.getJcfStartFlag = function() {
        //jcf服务器启动按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_20";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfStopFlag = function() {
        //jcf服务器停止按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_21";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfForceStopFlag = function() {
        //jcf服务器强制停止按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_22";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfConfigFlag = function() {
        //jcf服务器配置按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_23";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfUnloadFlag = function() {
        //jcf服务器卸载按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_24";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfUpdateFlag = function() {
        //jcf服务器更新按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_25";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfMemViewFlag = function() {
        //jcf服务器内存查看按钮操作权限获取
        var jmm = jcfManager.authModel;
        var code = "2_2_26";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //上下文服务器部分-----------------------------------------------------
    AuthCheckUtil.getContextStartFlag = function() {
        //context服务器start
        var jmm = jcfManager.authModel;
        var code = "2_2_6";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getContextStopFlag = function() {
        //context服务器stop
        var jmm = jcfManager.authModel;
        var code = "2_2_7";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getContextForceStopFlag = function() {
        //context服务器forceStop
        var jmm = jcfManager.authModel;
        var code = "2_2_8";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getContextUnloadFlag = function() {
        //context服务器卸载
        var jmm = jcfManager.authModel;
        var code = "2_2_9";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //服务库部分-------------------------------------------------------------------
    AuthCheckUtil.getRegistryStartFlag = function() {
        //registry服务器启动
        var jmm = jcfManager.authModel;
        var code = "2_2_11";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryStopFlag = function() {
        //registry服务器停止
        var jmm = jcfManager.authModel;
        var code = "2_2_17";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryForceStopFlag = function() {
        //registry服务器强制停止
        var jmm = jcfManager.authModel;
        var code = "2_2_18";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryConfigFlag = function() {
        //registry服务器配置
        var jmm = jcfManager.authModel;
        var code = "2_2_12";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryUnloadFlag = function() {
        //registry服务器卸载
        var jmm = jcfManager.authModel;
        var code = "2_2_13";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryMemViewFlag = function() {
        //registry服务器卸载
        var jmm = jcfManager.authModel;
        var code = "2_2_14";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistrySwitchFlag = function() {
        //registry服务器切换
        var jmm = jcfManager.authModel;
        var code = "2_2_27";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //组操作--------------------------------------------------
    AuthCheckUtil.getQueryOperFlag = function() {
        //查询权限flag
        var jmm = jcfManager.authModel;
        var code = "2_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getDelGroupFlag = function() {
        //查询权限flag
        var jmm = jcfManager.authModel;
        var code = "2_2_19";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getBatchOperFlag = function() {
        //服务器的批量启动按钮
        var jmm = jcfManager.authModel;
        var code = "2_2_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    ///////////////////////////////////////////////////////////////////////
    AuthCheckUtil.getJcfGroupConfigFlag = function() {
        //点击组配置按钮
        var jmm = jcfManager.authModel;
        var code = "2_2_5";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegisgryGroupConfigFlag = function() {
        //registry组服务配置
        var jmm = jcfManager.authModel;
        var code = "2_2_16";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //组服务器模块(点击组服务器)--------------------------------结束-------------------------------------------------------------------
    //单个服务器模块(点击单个服务器页面)-------------------------------开始-------------------------------------------------------------------
    //jcf
    AuthCheckUtil.getJcfCfg4Single = function() {
        var jmm = jcfManager.authModel;
        var code = "2_2_23";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfUpdate4Single = function() {
        var jmm = jcfManager.authModel;
        var code = "2_2_25";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //服务库
    AuthCheckUtil.getRegistryCfg4Single = function() {
        var jmm = jcfManager.authModel;
        var code = "2_2_12";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRegistryUpdate4Single = function() {
        var jmm = jcfManager.authModel;
        var code = "2_2_15";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //上下文服务器
    AuthCheckUtil.getContextUpdate4Single = function() {
        var jmm = jcfManager.authModel;
        var code = "2_2_10";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //单个服务器模块(点击单个服务器页面)-------------------------------结束-------------------------------------------------------------------
    //添加服务器页面-----------------------------开始-------------------------------------------------------------
    AuthCheckUtil.getNodeControllerCfgFlag = function() {
        //节点控制器配置
        var jmm = jcfManager.authModel;
        var code = "2_2_28";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //域参数配置权限
    AuthCheckUtil.getDomainParamCfgFlag = function() {
        //节点控制器配置
        var jmm = jcfManager.authModel;
        var code = "2_2_29";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServerAddFlag = function() {
        //添加服务器按钮
        var jmm = jcfManager.authModel;
        var code = "2_2_4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getGroupAddFlag = function() {
        //添加分组按钮
        var jmm = jcfManager.authModel;
        var code = "2_3_4-1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //添加服务器页面-----------------------------结束-------------------------------------------------------------
    return AuthCheckUtil;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-7
 * Time: 上午11:15:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/groupAdd_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "querystring-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var InputCheck = require("travsky/jcf/1.0.0/view/server/checkCacheGroup-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/server/global_view-debug");
    require("bs-modal-debug")($);
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/groupAdd-debug.tpl");
    var GroupAddView = Marionette.LayoutView.extend({
        initialize: function() {
            this.listenTo(this.model, "change", this.render);
            $.extend(this, new InputCheck());
        },
        regions: {
            errInfoShowRegion: "#errInfoShowRegion",
            singleErrInfoShowRegion: "#singleErrInfoShowRegion"
        },
        template: _.template(viewTemplateStr),
        events: {
            "change #addGroup_groupCategory": "changeGroupCategory",
            "click #addGroupBtn": "addGroup",
            "blur #addGroup_groupName": "checkGroupName",
            "blur #addGroup_maxSize4Store": "checkMaxSize4Store",
            //存储最大个数//checkStoreNodeMaxCount
            "blur #addGroup_singleDataMaxLength": "checkSingleDataMaxLength",
            //已存在//单个数据最大长度
            "blur #addGroup_cacheNodeAlert": "checkCacheNodeAlert",
            //存储报警阀值
            "blur  #addGroup_jvmMemory": "checkJvmMemory",
            "blur #addGroup_jvmHeapAlert": "checkJvmHeapAlert",
            "blur #addGroup_dataBackupNum": "checkDataBackupNum",
            //已存在
            "blur #addGroup_statisticsPath": "checkStatisticsPath",
            "blur #addGroup_statisticsSyncTime": "checkStatisticsSyncTime",
            "blur #addGroup_jvmHeapBlock": "checkJvmHeapBlock",
            "blur #addGroup_groupPassword": "checkGroupPassword",
            //已存在
            "blur #addGroup_broadcastURL": "checkBroadcastURL",
            //已存在
            "blur #addGroup_maxSize4Cache": "checkMaxSize4Cache",
            "blur #addGroup_networkPort": "checkaNetworkPort",
            "blur #addGroup_tcpIPMember": "checkaddTcpIPMember"
        },
        changeGroupCategory: function() {
            var selectGC = this.$el.find("#addGroup_groupCategory").val();
            this.model.set("checkGroupCategory", selectGC);
            $("#addGroupModal").modal("show");
        },
        getCacheConfigFormInputParam: function() {
            var ids = [ "addGroup_groupPassword", "addGroup_broadcastURL", "addGroup_maxSize4Store", "addGroup_singleDataMaxLength", "addGroup_cacheNodeAlert", "addGroup_jvmMemory", "addGroup_jvmHeapAlert", "addGroup_dataBackupNum", "addGroup_statisticsPath", "addGroup_statisticsSyncTime", "addGroup_jvmHeapBlock", "addGroup_maxSize4Cache", "addGroup_networkPort", "addGroup_tcpIPMember" ];
            var jsParam = util.getFormInputObj(ids);
            jsParam.addGroup_broadcastURL = "127.0.0.1:8888";
            return jsParam;
        },
        checkCacheGroupCfgInfo: function() {
            if (this.checkGroupName() && this.checkGroupPassword() && this.checkBroadcastURL() && this.checkMaxSize4Store() && this.checkSingleDataMaxLength() && this.checkCacheNodeAlert() && this.checkJvmMemory() && this.checkJvmHeapAlert() && this.checkDataBackupNum() && this.checkStatisticsPath() && this.checkStatisticsSyncTime() && this.checkJvmHeapBlock() && this.checkMaxSize4Cache() && this.checkaNetworkPort() && this.checkaddTcpIPMember()) {
                return true;
            }
            return false;
        },
        addGroup: function() {
            var groupCategory = this.$el.find("#addGroup_groupCategory").val();
            var groupName = this.$el.find("#addGroup_groupName").val();
            var jsParam = {};
            var serverURL = "/" + jcfManager.appName + "/server/addNewGroup.action";
            var t = new Date().getTime();
            var jString = {
                selectedPageUI: "serverAddUI",
                t: t
            };
            var flag = this.checkGroupName();
            var selectGroupCategory = this.model.get("checkGroupCategory");
            if (flag && selectGroupCategory == "7") {
                //dataCount-- singleDataMaxLength -- dataBackupNum
                var value = $.trim($(":radio[name='addGroup_cacheModel']:checked").val());
                //addGroup_cacheModel单独处理
                flag = this.checkCacheGroupCfgInfo();
                var jsParam2 = this.getCacheConfigFormInputParam();
                jsParam2.addGroup_cacheModel = value;
                jsParam2.groupCategory = groupCategory;
                jsParam2.groupName = groupName;
                jsParam = jsParam2;
            } else {
                var jsParam1 = {};
                jsParam1.groupCategory = groupCategory;
                jsParam1.groupName = groupName;
                jsParam = jsParam1;
            }
            if (flag) {
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        self.remove();
                        appRouter.navigate("serverMgr/param/" + QueryString.stringify(jString), {
                            trigger: true
                        });
                    } else {
                        self.remove();
                        alert("失败");
                    }
                });
            }
        }
    });
    return GroupAddView;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-14
 * Time: 下午03:37:31
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", [ "jquery-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var InputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var _ = require("underscore-debug");
    var CahceGroupInputCheck = function() {
        this.checkMaxSize4Store = function() {
            var id = "addGroup_maxSize4Store";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        };
        this.checkMaxSize4Cache = function() {
            var id = "addGroup_maxSize4Cache";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        };
        this.checkaNetworkPort = function() {
            var id = "addGroup_networkPort";
            var flag = InputUtil.checkInputMatchPort(id);
            return flag;
        };
        this.checkaddTcpIPMember = function() {
            var id = "addGroup_tcpIPMember";
            var flag = InputUtil.checkNotNull(id);
            var errInfo = "[如 172.27.1.1:8080,172.27.1.2:8080]";
            if (flag) {
                var valueAll = $.trim($("#" + id).val());
                var allInfos = valueAll.split(",");
                var doubleFlag = false;
                //重复标记
                var newInfos = _.uniq(allInfos);
                if (allInfos.length > newInfos.length) {
                    doubleFlag = true;
                }
                if (doubleFlag) {
                    //如果重复
                    flag = false;
                    InputUtil.errInput(id, "不能添加重复信息!");
                } else {
                    for (var i = 0; i < allInfos.length; i++) {
                        var value = allInfos[i];
                        var infos = value.split(":");
                        if (infos.length != 2) {
                            InputUtil.errInput(id, errInfo);
                            flag = false;
                        } else {
                            var ip = infos[0];
                            flag = util.checkStrIsIp(ip);
                            var port = infos[1];
                            var reg1 = /^[0-9]*[1-9][0-9]*$/;
                            if (!reg1.test(port)) {
                                InputUtil.errInput(id, errInfo);
                                flag = false;
                            }
                        }
                    }
                }
            }
            return flag;
        };
        this.checkSingleDataMaxLength = function() {
            var id = "addGroup_singleDataMaxLength";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        };
        this.checkCacheNodeAlert = function() {
            var retInfo = {};
            var id = "addGroup_cacheNodeAlert";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        };
        this.checkJvmMemory = function() {
            var id = "addGroup_jvmMemory";
            var maxLength = 10;
            var regular = /^\d+[kKmMgG]$/;
            var errTip = "单位只能为kK,mM,gG";
            var flag = InputUtil.checkInputMatchRegularAndNotNull(id, maxLength, regular, errTip);
            return flag;
        };
        this.checkJvmHeapAlert = function() {
            var id = "addGroup_jvmHeapAlert";
            var minNum = 1;
            var maxNum = 100;
            var flag = InputUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        };
        this.checkStatisticsPath = function() {
            var id = "addGroup_statisticsPath";
            return true;
        };
        this.checkStatisticsSyncTime = function() {
            //单位秒
            var id = "addGroup_statisticsSyncTime";
            var maxLength = 10;
            var flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        };
        this.checkJvmHeapBlock = function() {
            //百分比
            var id = "addGroup_jvmHeapBlock";
            var minNum = 1;
            var maxNum = 100;
            var flag = InputUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        };
        this.checkGroupPassword = function() {
            var id = "addGroup_groupPassword";
            var flag = InputUtil.checkInputMatchMaxLength(id, 10);
            return flag;
        };
        this.checkBroadcastURL = function() {
            var id = "addGroup_broadcastURL";
            var flag = true;
            /*var flag = InputUtil.checkNotNull(id) ;
	    	var errInfo = "广播地址不合法[如 172.27.1.1:8080]" ;
	    	if(flag){
	    		var value = $.trim($("#"+id).val()) ;
	    		var infos = value.split(":")
	    		if(infos.length!=2){
	    			flag = InputUtil.errInput(id,errInfo) ;
	    		}else{
	    			var port = infos[1] ;
	    			var reg1 =  /^[0-9]*[1-9][0-9]*$/;
				    if(!reg1.test(port)){
				    	flag = InputUtil.errInput(id,errInfo) ;
				    }else{
				    	flag = true;
				    }
	    		}
	    	}*/
            return flag;
        };
        this.checkDataBackupNum = function() {
            var flag = false;
            var id = "addGroup_dataBackupNum";
            flag = InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, 10);
            return flag;
        };
        this.checkGroupName = function() {
            var groupName = this.$el.find("#addGroup_groupName").val();
            var id = "addGroup_groupName";
            var flag = InputUtil.checkInputMatchMaxLength(id, 30);
            if (flag) {
                flag = InputUtil.checkGoodString(id);
                if (flag) {
                    var jsonParam = {
                        groupName: groupName
                    };
                    var serverURL = "/" + jcfManager.appName + "/server/isGroupExist.action";
                    var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag) {
                            flag = false;
                            InputUtil.errInput(id, "名称已存在!");
                        } else {
                            InputUtil.successInput(id);
                            flag = true;
                        }
                    });
                }
            }
            return flag;
        };
    };
    return CahceGroupInputCheck;
});

define("travsky/jcf/1.0.0/view/server/global_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    require("bs-alert-debug")($);
    var globalViewTemplate = require("travsky/jcf/1.0.0/template/server/global-debug.tpl");
    var GlobalView = Marionette.ItemView.extend({
        template: _.template(globalViewTemplate)
    });
    return GlobalView;
});

define("travsky/jcf/1.0.0/template/server/global-debug.tpl", [], '<%\n	if(succList.length>0){\n	  %>\n		<div class="alert alert-success">\n			 <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &times;</button>\n		   <%\n			  for(var i = 0 ; i < succList.length ; i ++){\n			  %>\n				 <%=succList[i]%><br/>\n			  <%\n			}	\n		   %>\n		</div>\n	  <%\n	}\n	\n	if(errList.length>0){\n	  %>\n		<div class="alert alert-danger">\n			<button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &times;</button>\n		   <%\n			  for(var j = 0 ; j < errList.length ; j ++){\n			  %>\n				 <%=errList[j]%><br/>\n			  <%\n			}	\n		   %>\n		</div>\n	  <%\n	}\n%>');

define("travsky/jcf/1.0.0/template/server/groupAdd-debug.tpl", [], '<div id = "addGroupModal" class="modal" aria-hidden="true" style="z-index:10400;"  data-backdrop="static">\n   <div class="modal-dialog" style = "width:700px;">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n            <h4 class="modal-title" id="myModalLabel">服务器组添加</h4>\n         </div>\n         <div class="modal-body">\n         <form class="form-horizontal"  role="form" method= "POST">\n 	          <div class="form-group" id = "addGroup_groupCategoryDiv" >\n			      <label for="addGroup_groupCategory" class="col-sm-3 control-label">组类型：</label>\n			      <div class="col-sm-5">\n			          <select id="addGroup_groupCategory"  class  = "form-control input-sm">\n					     <%\n					      	for(var i = 0 ; i < groupList.length ; i++){\n					      	   if(groupList[i].groupCategoryId==checkGroupCategory){//默认选中jcf服务器\n					      		  %><option selected = "selected"  value = "<%=groupList[i].groupCategoryId%>" ><%=groupList[i].groupCategoryName%></option><%\n					      	   }else{\n					      	 	  %><option value = "<%=groupList[i].groupCategoryId%>" ><%=groupList[i].groupCategoryName%></option><%\n					      	   }\n					      	}\n					     %>\n				     </select>\n			      </div>\n			      <div><span class = "text-danger">*</span><span id = "addGroup_groupCategoryTip"></span></div>\n			  </div>	\n         	  			\n 			  <div class="form-group" id = "addGroup_groupNameDiv" >\n			      <label for="addGroup_groupName" class="col-sm-3 control-label">组名称：</label>\n			      <div class="col-sm-5">\n			      	<%if(checkGroupCategory=="1"){//jcf服务器组\n			      	    %><input type="text" id="addGroup_groupName" value = "jcfGroup" class="form-control input-sm"  placeholder="必填项" /><%\n			      	}else if (checkGroupCategory=="3"){//上下文服务器组\n			      	    %><input type="text" id="addGroup_groupName" value = "contextGroup"  readonly = "readonly" class="form-control input-sm"  placeholder="必填项" /><%\n			      	}else if (checkGroupCategory=="4"){//注册库组\n			      	    %><input type="text" id="addGroup_groupName" value = "registryGroup" readonly = "readonly" class="form-control input-sm"  placeholder="必填项" /><%\n			      	}else if (checkGroupCategory=="6"){//适配服务器组\n			      	    %><input type="text" id="addGroup_groupName" value = "adapterGroup"  readonly = "readonly" class="form-control input-sm"  placeholder="必填项" /><%\n			      	}else if (checkGroupCategory=="7"){//cache服务器组\n			      		%><input type="text" id="addGroup_groupName" value = "cacheGroup" readonly = "readonly" class="form-control input-sm"  placeholder="必填项" /><%\n			      	}%>\n			      </div>\n			      <div><span class = "text-danger">*</span><span id = "addGroup_groupNameTip"></span></div>\n			   </div>\n         </form>\n          <%\n		   	if(checkGroupCategory=="7"){//如果选择的是cache服务器组,则需要别的配置\n		  %>\n		   	   	<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_groupPasswordDiv" >\n					      <label for="addGroup_groupPassword" class="col-sm-3 control-label">域密码：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_groupPassword"   class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_groupPasswordTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<!--广播地址暂时隐藏\n				    <label for="addGroup_broadcastURL" class="col-sm-3 control-label">广播地址：</label>\n				    <span class = "text-info">(IP:端口)</span><span id = "addGroup_broadcastURLTip"></span>\n				    -->\n				    <input type="hidden" id="addGroup_broadcastURL"   class="form-control input-sm"  placeholder="必填项" />\n		   	   		\n		   	   		\n		   	   		\n		   	   		\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_maxSize4StoreDiv" >\n					      <label for="addGroup_maxSize4Store" class="col-sm-3 control-label">存储最大个数：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_maxSize4Store"  value = "1000" class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_maxSize4StoreTip"></span></div>\n				    </div>\n				    \n				    <!-----------------------------新增参数开始----------------------------------->\n				    <div class="form-group" id = "addGroup_maxSize4CacheDiv" >\n					      <label for="addGroup_maxSize4Cache" class="col-sm-3 control-label">cache最大个数：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_maxSize4Cache"  value = "1000" class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_maxSize4CacheTip"></span></div>\n				    </div>\n				    \n				    <div class="form-group" id = "addGroup_networkPortDiv" >\n					      <label for="addGroup_networkPort" class="col-sm-3 control-label">networkPort：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_networkPort"  value = "8000" class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_networkPortTip"></span></div>\n				    </div>\n				    \n				    <div class="form-group" id = "addGroup_tcpIPMemberDiv" >\n					      <label for="addGroup_tcpIPMember" class="col-sm-3 control-label">tcp-ip member：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_tcpIPMember"  value = "" class="form-control input-sm"  placeholder="[10.6.148.225:8000,10.6.148.224:8000]" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_tcpIPMemberTip"></span></div>\n				    </div>\n				    <!---------------------新增参数结束--------------------------------------------->\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_singleDataMaxLengthDiv" >\n					      <label for="addGroup_singleDataMaxLength" class="col-sm-3 control-label">单数据最大长度：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_singleDataMaxLength"  class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_singleDataMaxLengthTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_cacheNodeAlertDiv" >\n					      <label for="addGroup_cacheNodeAlert" class="col-sm-3 control-label">存储报警阀值：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_cacheNodeAlert" value = "600"  class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span class = "text-info">(个)</span><span id = "addGroup_cacheNodeAlertTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group"  >\n					      <label  class="col-sm-3 control-label">CACHE类型：</label>\n					      <div class="col-sm-5">\n					        <input type="radio"  name = "addGroup_cacheModel" checked = "checked" value = "LRU"/> LRU\n					        <input type="radio"  name = "addGroup_cacheModel" value = "LFU"/> LFU\n					      </div>\n					      <div></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_jvmMemoryDiv" >\n					      <label for="addGroup_jvmMemory" class="col-sm-3 control-label">JVM内存：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_jvmMemory"   class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span class = "text-info">(kK,mM,gG)</span><span id = "addGroup_jvmMemoryTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_jvmHeapAlertDiv" >\n					      <label for="addGroup_jvmHeapAlert" class="col-sm-3 control-label">内存报警阀值：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_jvmHeapAlert" value = "60"  class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span class = "text-info">(%)</span><span id = "addGroup_jvmHeapAlertTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_dataBackupNumDiv" >\n					      <label for="addGroup_dataBackupNum" class="col-sm-3 control-label">数据备份个数：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_dataBackupNum"   class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "addGroup_dataBackupNumTip"></span></div>\n				    </div>\n				  \n		   	   		<input type="hidden" id="addGroup_statisticsPath"  value = "../measureOutput/" />\n		   	   		\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_statisticsSyncTimeDiv" >\n					      <label for="addGroup_statisticsSyncTime" class="col-sm-3 control-label">数据同步时间：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_statisticsSyncTime" value = "60"  class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span class = "text-info">(秒)</span><span id = "addGroup_statisticsSyncTimeTip"></span></div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_jvmHeapBlockDiv" >\n					      <label for="addGroup_jvmHeapBlock" class="col-sm-3 control-label">内存阻塞阀值：</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="addGroup_jvmHeapBlock"  value = "85" class="form-control input-sm"  placeholder="必填项" />\n					      </div>\n					      <div><span class = "text-danger">*</span><span class = "text-info">(%)</span><span id = "addGroup_jvmHeapBlockTip"></span></div>\n				    </div>\n		   	   	</form>\n		   	<%\n		   	}\n		   %>\n         </div>\n         <div class="modal-footer">\n            <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>\n            <button id = "addGroupBtn" type="button" class="btn btn-primary">添加 </button>\n         </div>\n      </div>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-26
 * Time: 上午11:24:14
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverAddNext_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverAddNext-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var ServerAddNextView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(options) {
            this.inputObj = options.inputObj;
        },
        events: {
            "click #addServerAndStart": "addServerAndStart",
            "click #addServerNotStart": "addServerNotStart"
        },
        addServerAndStart: function() {
            var modelName = sidbarUtil.getModuleName();
            $("#showWaitInfo").removeClass("hide");
            $("#addServerAndStart").addClass("hide");
            $("#addServerNotStart").addClass("hide");
            $("#addserverCloseBtn").addClass("hide");
            var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
            this.inputObj.ynStart = "start";
            var ajaxDeferred = util.dealAjaxRequest4JSObj(serverURL, this.inputObj);
            var self = this;
            $.when(ajaxDeferred).done(function(data) {
                if (data.flag == "true") {
                    self.remove();
                    jcfManagement.view.server_sidebar.refresh();
                    //这里直接跳转到服务器列表显示页面//下面的代码需要修改
                    appRouter.navigate(modelName, {
                        trigger: true
                    });
                } else {
                    self.remove();
                    var av = new AlertView();
                    av.model.set("msg", "添加服务器失败");
                    jcfManager.dialogRegion.show(av);
                }
            }).fail(function() {
                self.remove();
                var av = new AlertView();
                av.model.set("msg", "添加服务器失败");
                jcfManager.dialogRegion.show(av);
            });
        },
        addServerNotStart: function() {
            var self = this;
            var modelName = sidbarUtil.getModuleName();
            this.inputObj.ynStart = "no";
            var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
            var ajaxDeferred = util.dealAjaxRequest4JSObj(serverURL, this.inputObj);
            $("#showWaitInfo").removeClass("hide");
            $("#addServerAndStart").addClass("hide");
            $("#addServerNotStart").addClass("hide");
            $("#addserverCloseBtn").addClass("hide");
            $.when(ajaxDeferred).done(function(data) {
                if (data.flag == "true") {
                    self.remove();
                    jcfManagement.view.server_sidebar.refresh();
                    appRouter.navigate(modelName, {
                        trigger: true
                    });
                } else {
                    self.remove();
                    var av = new AlertView();
                    av.model.set("msg", "添加服务器失败");
                    jcfManager.dialogRegion.show(av);
                }
            }).fail(function() {
                self.remove();
                var av = new AlertView();
                av.model.set("msg", "添加服务器失败");
                jcfManager.dialogRegion.show(av);
            });
        },
        /*onShow:function(){
			//this. $el.dialog({modal: true,width: "auto"});
		},*/
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    return ServerAddNextView;
});

define("travsky/jcf/1.0.0/template/server/serverAddNext-debug.tpl", [], '<!-- 模态框（Modal） -->\n<div class="modal fade" id="addServerNextDialog" tabindex="-1" role="dialog" \n		aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">\n   <div class="modal-dialog" style = "width:500px;">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n            <h4 class="modal-title" id="myModalLabel">确认添加服务器 </h4>\n         </div>\n         <div class="modal-body">\n            <form class="form-horizontal" role="form">\n			   <div class="form-group">\n			      <label for="loginID" class="col-sm-4" control-label">服务器名称：</label>\n			      <div class="col-sm-5">\n			         <input type="text" readonly="readonly" class="form-control input-sm" value = "<%=serverName%>" placeholder="必填项">\n			      </div>\n			   </div>\n			   \n			   <div class="form-group">\n			      <label for="loginID" class="col-sm-4" control-label">服务器类型：</label>\n			      <div class="col-sm-5">\n			         <input type="text" readonly="readonly" class="form-control input-sm" value = "<%=categoryName%>服务器" placeholder="必填项">\n			      </div>\n			   </div>\n			   \n			   <div class="form-group">\n			      <label for="loginID" class="col-sm-4" control-label">服务器分组为：</label>\n			      <div class="col-sm-5">\n			         <input type="text" readonly="readonly"  class="form-control input-sm" value = "<%=groupName%>" >\n			      </div>\n			   </div>\n			   \n			   <div class="form-group">\n			      <label for="loginID" class="col-sm-4" control-label">服务器IP为：</label>\n			      <div class="col-sm-5">\n			         <input type="text" readonly="readonly" name = "loginID" class="form-control input-sm" value = "<%=rmiRegistryHost%>" >\n			      </div>\n			   </div>\n			   \n			   <%\n      			if(serverCategory!="3"){\n      			%>\n      			   <div class="form-group">\n				      <label for="loginID" class="col-sm-4" control-label">JMX Registry端口：</label>\n				      <div class="col-sm-5">\n				         <input type="text" readonly="readonly" class="form-control input-sm" value = "<%=rmiRegistryPort%>" >\n				      </div>\n				   </div>\n				   \n				   <div class="form-group">\n				      <label for="loginID" class="col-sm-4" control-label">JMX Server端口：</label>\n				      <div class="col-sm-5">\n				         <input type="text" readonly="readonly" class="form-control input-sm" value = "<%=rmiServerPort%>" >\n				      </div>\n				   </div>\n      			<%\n      			}\n     		   %>\n			</form>\n			\n			\n         </div>\n         \n         <div class="modal-footer">\n         	<span id = "showWaitInfo" class = "text-warning hide">服务器添加中，请耐心等待...</span>\n            <button type="button" id = "addserverCloseBtn" class="btn btn-default" data-dismiss="modal">关闭</button>\n            <button type="button" id = "addServerAndStart" class="btn btn-primary">添加并启动</button>\n      	    <button type="button" id = "addServerNotStart" class="btn btn-primary" >添加</button>\n         </div>\n      </div><!-- /.modal-content -->\n</div><!-- /.modal -->\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-23
 * Time: 下午02:52:56
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/nodeControllerCfg_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var InputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/nodeControllerCfg-debug.tpl");
    var NodeControllerCfgView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        events: {
            "change #nodeControllerIp": "changeNodeControllerIp",
            "blur #queuecapacity": "checkQueuecapacity",
            "blur #mqHostIp": "checkMqHostIp",
            "blur #mqPort": "checkMqPort",
            "blur #ccsid": "checkCcsid",
            "blur #mqManager": "checkMqManager",
            "blur #mqChannel": "checkMqChannel",
            "blur #mqName": "checkMqName",
            "click #cfgSubmit": "setNodeConfig"
        },
        onShow: function() {
            this.changeNodeControllerIp();
        },
        changeNodeControllerIp: function() {
            var nodeControllerIp = $("#nodeControllerIp").val();
            var serverURL = "/" + jcfManager.appName + "/server/getNodeConfig.action";
            var simpleQData = {
                nodeControllerIp: nodeControllerIp
            };
            $.when(util.dealAjaxRequest4SimpleParam(serverURL, simpleQData)).done(function(result) {
                $("#nodeLevel").val(result.loglevel);
                $("#queuecapacity").val(result.queuecapacity);
                $("#mqHostIp").val(result.mqHostIP);
                //
                $("#mqPort").val(result.mqPort);
                $("#ccsid").val(result.ccsid);
                $("#mqManager").val(result.mqManager);
                $("#mqChannel").val(result.mqChannel);
                $("#mqName").val(result.mqName);
            });
        },
        setNodeConfig: function() {
            //点击提交按钮，1.检查表单数据合法性,2.提交表单
            //检查表单数据合法性
            var flag1 = this.checkQueuecapacity();
            var flag2 = this.checkMqName();
            var flag3 = this.checkMqChannel();
            var flag4 = this.checkMqManager();
            var flag5 = this.checkMqPort();
            var flag6 = this.checkCcsid();
            var flag7 = this.checkMqHostIp();
            //mqHostIp
            //提交表单
            if (flag1 && flag2 && flag3 && flag4 && flag5 && flag6 && flag7) {
                this.submitMyNodecontrollerForm();
            }
        },
        submitMyNodecontrollerForm: function() {
            var inputObj = this.getInputObj();
            var serverURL = "/" + jcfManager.appName + "/server/setNodeConfig.action";
            $.when(util.dealAjaxRequest4JSObj(serverURL, inputObj)).done(function(data) {
                if (!data.flag) {
                    alert("配置失败!");
                } else {
                    alert("配置成功!");
                }
            });
        },
        getInputObj: function() {
            var formIds = [ "nodeControllerIp", "nodeLevel", "queuecapacity", "mqHostIp", "mqPort", "ccsid", "mqManager", "mqChannel", "mqName" ];
            var inputObj = util.getFormInputObj(formIds);
            return inputObj;
        },
        checkQueuecapacity: function() {
            var id = "queuecapacity";
            var maxLength = 10;
            return InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
        },
        checkMqHostIp: function() {
            var id = "mqHostIp";
            return InputUtil.checkInputMatchIP(id);
        },
        checkMqPort: function() {
            var id = "mqPort";
            return InputUtil.checkInputMatchPort(id);
        },
        checkCcsid: function() {
            var id = "ccsid";
            var maxLength = 10;
            return InputUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
        },
        checkMqManager: function() {
            var id = "mqManager";
            return InputUtil.checkNotNull(id);
        },
        checkMqChannel: function() {
            var id = "mqChannel";
            return InputUtil.checkNotNull(id);
        },
        checkMqName: function() {
            var id = "mqName";
            return InputUtil.checkNotNull(id);
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    return NodeControllerCfgView;
});

define("travsky/jcf/1.0.0/template/server/nodeControllerCfg-debug.tpl", [], '<br/>\n<form class="form-horizontal" role="form">\n   <div class="form-group" id = "nodeControllerIpDiv" >\n      <label for="nodeControllerIp" class="col-sm-3 control-label">节点控制器IP：</label>\n      <div class="col-sm-4">\n        <select id = "nodeControllerIp" class="form-control input-sm" >\n        	<% for(var i = 0 ; i < nodeIpList.length ;i ++){\n        			var curIpInfo = nodeIpList[i] ;\n        		if(i == 0){\n        	%>\n        			<option value = "<%=curIpInfo.serverIp%>" selected="selected" ><%=curIpInfo.serverIp%></option>\n        	<%\n        		}else{\n        	%>\n        			<option value = "<%=curIpInfo.serverIp%>" ><%=curIpInfo.serverIp%></option>\n        	<%\n        		}\n        	}%>\n        </select>\n      </div>\n   </div>\n\n   <div class="form-group" id = "nodeLevelDiv" >\n      <label for="nodeLevel" class="col-sm-3 control-label">节点控制器日志级别：</label>\n      <div class="col-sm-4">\n        <select id = "nodeLevel" class="form-control input-sm" >\n        	<option value = "DEBUG" selected="selected">DEBUG</option>\n			<option value = "INFO" >INFO</option>\n			<option value = "ERROR" >ERROR</option>\n        </select>\n      </div>\n   </div>\n\n   <div class="form-group" id = "queuecapacityDiv" >\n      <label for="queuecapacity" class="col-sm-3 control-label">队列大小：</label>\n      <div class="col-sm-4">\n        <input type="text" id="queuecapacity"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "queuecapacityTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "mqHostIpDiv" >\n      <label for="mqHostIp" class="col-sm-3 control-label">TAM MQ IP：</label>\n      <div class="col-sm-4">\n        <input type="text" id="mqHostIp"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "mqHostIpTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "mqPortDiv" >\n      <label for="mqPort" class="col-sm-3 control-label">TAM MQ Port：</label>\n      <div class="col-sm-4">\n        <input type="text" id="mqPort"  class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "mqPortTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "ccsidDiv" >\n      <label for="ccsid" class="col-sm-3 control-label">CCSID：</label>\n      <div class="col-sm-4">\n        <input type="text" id="ccsid"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "ccsidTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "mqManagerDiv" >\n      <label for="mqManager" class="col-sm-3 control-label">MQManager名称：</label>\n      <div class="col-sm-4">\n        <input type="text" id="mqManager"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "mqManagerTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "mqChannelDiv" >\n      <label for="mqChannel" class="col-sm-3 control-label">MQManager通道：</label>\n      <div class="col-sm-4">\n        <input type="text" id="mqChannel"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "mqChannelTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "mqNameDiv" >\n      <label for="mqName" class="col-sm-3 control-label">MQ名称：</label>\n      <div class="col-sm-4">\n        <input type="text" id="mqName"   class="form-control input-sm"  placeholder="必填项" />\n      </div>\n      <div><span class = "text-danger">*</span><span id = "mqNameTip"></span></div>\n   </div>\n  \n   \n   <div class="form-group">\n      <div class="col-sm-offset-2 col-sm-10">\n         <button type="button" id = "cfgSubmit" class="btn btn-primary">保存</button>\n      </div>\n   </div>\n   \n</form>\n');

define("travsky/jcf/1.0.0/template/server/serverItem-debug.tpl", [], '<td class = "singleServerInfoTd" ><a href = "<%=serverId%>" ><%=serverName%></a></td>\n<td class = "groupServerInfoTd" ><a href = "<%=groupId%>" ><%=groupName%></a></td>\n<td><%=serverIp%></td>\n<td>\n<%\n	if(groupCategory==1){\n		%>JCF服务器<%\n	}else if(groupCategory==6){\n		%>适配服务器<%\n	}else if(groupCategory==3){\n		%>上下文服务器<%\n	}else if(groupCategory==4){\n		%>服务库<%\n	}else if(groupCategory==7){\n		%>JCFCache服务器<%\n	}else{\n		%>其他<%\n	}\n%>\n</td>\n<td><%=serverManagePort%></td>\n<td><%=serverDeployPort%></td>\n<td>\n	<%\n		if(processStatus==1){\n			%>启动<%\n		}else if (processStatus==2){\n			%>停止<%	\n		}else if (processStatus==3){\n			%>启动中<%\n		}else if (processStatus==4){\n			%>停止中<%\n		}else if (processStatus==7){\n			%>查询中<%\n		}else{\n			%>异常<%\n		}\n	%>\n</td>\n 	\n\n');

define("travsky/jcf/1.0.0/template/server/serverList-debug.tpl", [], "<thead>\n  <tr>\n    <th>服务器名称</th>\n    <th>所属分组</th>\n    <th>服务器IP</th>\n    <th>服务器类型</th>\n    <th>管理端口</th>\n    <th>部署端口</th>\n    <th>状态</th>\n  </tr>\n</thead>\n<tbody></tbody>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-24
 * Time: 上午10:07:42
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/domainParamCfg_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "icheck-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/domainParamCfg-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheck = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    require("icheck-debug")($);
    var GlobalView = require("travsky/jcf/1.0.0/view/server/global_view-debug");
    var DomainParamCfgView = Marionette.LayoutView.extend({
        template: _.template(viewTemplateStr),
        regions: {
            alertInfoRegion: "#alertInfoRegion"
        },
        events: {
            "click #saveBtn": "saveInfo"
        },
        saveInfo: function() {
            //保存信息
            this.alertInfoRegion.empty();
            var qhVal = "";
            //亲和值
            var fqhVal = "";
            //非亲和值
            qhVal = $.trim($(":radio[name='affinityAlgorithm']:checked").val());
            fqhVal = $.trim($(":radio[name='statelessAlgorithm']:checked").val());
            if (qhVal.length == 0 || fqhVal.length == 0) {
                var model = new Backbone.Model();
                model.set("succList", []);
                model.set("errList", [ "亲和非亲和都为必选项!" ]);
                this.alertInfoRegion.show(new GlobalView({
                    model: model
                }));
            } else {
                var formObj = {};
                var self = this;
                formObj.affinityAlgorithm = qhVal;
                formObj.statelessAlgorithm = fqhVal;
                var serverURL = "/" + jcfManager.appName + "/server/saveDomainParamCfgInfo.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        var model = new Backbone.Model(data);
                        self.alertInfoRegion.show(new GlobalView({
                            model: model
                        }));
                    } else {
                        var model = new Backbone.Model();
                        model.set("succList", []);
                        model.set("errList", [ "保存域参数失败!" ]);
                        self.alertInfoRegion.show(new GlobalView({
                            model: model
                        }));
                    }
                });
            }
        },
        onShow: function() {
            $("input").iCheck({
                checkboxClass: "icheckbox_flat-red",
                radioClass: "iradio_flat-red"
            });
            $("#qhcheckbox, #fqhcheckbox").iCheck("disable");
        }
    });
    return DomainParamCfgView;
});

define("travsky/jcf/1.0.0/template/server/domainParamCfg-debug.tpl", [], '<br/>\n<div class = "row">\n	<div class = "col-sm-12" id = "alertInfoRegion"></div>\n</div>\n<div class = "row">\n	<div class = "col-sm-1"></div>\n	<div class = "col-sm-11">\n		<div class = "row">\n			<div class ="col-sm-2">\n				<label  class="control-label">负载均衡配置</label>\n			</div>\n		</div>\n		\n		<div class = "row">\n			<div class = "col-sm-3"><input type="checkbox" id = "qhcheckbox" checked = "checked" />亲和</div>\n			<div class ="col-sm-1"></div>\n			<div class = "col-sm-4"><input type="checkbox" id = "fqhcheckbox" checked = "checked" />非亲和</div>\n		</div>\n		<br/>\n		<div class = "row">\n			<div class = "col-sm-3">\n				&nbsp;&nbsp;&nbsp;&nbsp;\n				<input type="radio"   name = "affinityAlgorithm"   <%if(affinityAlgorithm==""||affinityAlgorithm==\'CONSISTENTHASH\'){%>checked=\'checked\'<%}%>  value = "CONSISTENTHASH"/> 一致性哈希\n			</div>\n			<div class ="col-sm-1"></div>\n			<div class = "col-sm-4">\n				&nbsp;&nbsp;&nbsp;&nbsp;\n				<input type="radio"    name = "statelessAlgorithm" <%if(statelessAlgorithm==\'WEIGHTEDROUNDROBIN\'){%>checked=\'checked\'<%}%>  value = "WEIGHTEDROUNDROBIN"/> 比例因子\n				<input type="radio"    name = "statelessAlgorithm" <%if(statelessAlgorithm==""||statelessAlgorithm==\'LEASTPENDINGREQUESTS\'){%>checked=\'checked\'<%}%> value = "LEASTPENDINGREQUESTS"/> 最小交易未完成数\n			</div>\n		</div>\n			\n	</div>\n</div>\n\n<br/>\n<div class="form-group">\n  <div class="col-sm-offset-1 col-sm-1">\n     <button type="button" id = "saveBtn" class="btn btn-primary">保存</button>\n  </div>\n</div>\n	\n\n	\n\n\n\n\n	\n\n	\n\n\n\n	\n\n\n\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-29
 * Time: 下午05:59:29
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverMgr4GroupLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig_registry-debug", "travsky/jcf/1.0.0/view/server/groupServerConfig_cache-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/model/pagebar_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/server/serverSysMemoryStatisticsLayout-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var GroupServerConfig = require("travsky/jcf/1.0.0/view/server/groupServerConfig-debug");
    var GroupServerConfig_registry = require("travsky/jcf/1.0.0/view/server/groupServerConfig_registry-debug");
    var GroupServerConfig_cache = require("travsky/jcf/1.0.0/view/server/groupServerConfig_cache-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverMgr4GroupLayout-debug.tpl");
    var searchTeplateStr = require("travsky/jcf/1.0.0/template/server/groupServerSearch-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var PagebarModel = require("travsky/jcf/1.0.0/model/pagebar_model-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var authUtil = require("travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug");
    var ItemTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var ListView = null;
    //显示的不同视图
    var groupCategoryStr = "";
    //查询form视图   ----第一部分
    var GroupServerSearchView = Marionette.ItemView.extend({
        initialize: function() {
            var batchOperFlag = authUtil.getBatchOperFlag();
            var queryOperFlag = authUtil.getQueryOperFlag();
            var delOperFlag = authUtil.getDelGroupFlag();
            this.model.set("batchOperFlag", batchOperFlag);
            this.model.set("queryOperFlag", queryOperFlag);
            this.model.set("delOperFlag", delOperFlag);
        },
        template: _.template(searchTeplateStr),
        events: {
            "click #deleteGroupBtn": "deleteGroup",
            "click #batchStartBtn": "batchStart",
            "click #batchStopBtn": "batchStop",
            "click #batchForceStopBtn": "batchForceStop"
        },
        deleteGroup: function() {
            var cv = new ConfirmView();
            cv.model.set("msg", "确认删除分组?");
            jcfManager.dialogRegion.show(cv);
            cv.confirm(function(cflag) {
                if (cflag) {
                    var groupId = $("#hiddenGroupId").val();
                    var serverURL = "/" + jcfManager.appName + "/server/deleteServerGroupByGroupId.action";
                    var jsonParam = {
                        groupId: groupId
                    };
                    var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                    $.when(ajaxing).done(function(data) {
                        var alertView = new AlertView();
                        alertView.model.set("msg", data.message);
                        jcfManager.dialogRegion.show(alertView);
                        if (data.flag == "true") {
                            appRouter.navigate("serverMgr", {
                                trigger: true
                            });
                        }
                    });
                }
            });
        },
        batchStart: function() {
            var operStatus = "1";
            var showProcess = "3";
            jcfManager.tipInfoRegion.empty();
            //找到有效的操作集合(当前为停止状态的可以启动)
            var $checkedInput = $("td.groupServerIdsTd input:checkbox:checked");
            var length = $checkedInput.length;
            var namesArr = new Array();
            var collection = this.model.get("listCollection");
            $checkedInput.each(function() {
                var curName = $(this).val();
                var serverStatus = $(this).attr("serverStatus");
                if (serverStatus == "2") {
                    //停止状态的服务器
                    namesArr.push(curName);
                    collection.each(function(c) {
                        if (c.get("serverName") == curName) {
                            c.set("processStatus", showProcess);
                        }
                    });
                }
            });
            if (namesArr.length > 0) {
                this.batchStartStopServer(operStatus, showProcess, namesArr);
            } else {
                var tv = new ItemTipView();
                tv.model.set("flag", "false");
                tv.model.set("msg", "请选择有效的服务器!");
                jcfManager.tipInfoRegion.show(tv);
            }
        },
        batchStop: function() {
            jcfManager.tipInfoRegion.empty();
            var operStatus = "2";
            var showProcess = "4";
            var $checkedInput = $("td.groupServerIdsTd input:checkbox:checked");
            var length = $checkedInput.length;
            var namesArr = new Array();
            var collection = this.model.get("listCollection");
            $checkedInput.each(function() {
                var curName = $(this).val();
                var serverStatus = $(this).attr("serverStatus");
                if (serverStatus == "1") {
                    namesArr.push(curName);
                    collection.each(function(c) {
                        if (c.get("serverName") == curName) {
                            c.set("processStatus", showProcess);
                        }
                    });
                }
            });
            if (namesArr.length > 0) {
                this.batchStartStopServer(operStatus, showProcess, namesArr);
            } else {
                var tv = new ItemTipView();
                tv.model.set("flag", "false");
                tv.model.set("msg", "请选择有效的服务器!");
                jcfManager.tipInfoRegion.show(tv);
            }
        },
        batchForceStop: function() {
            jcfManager.tipInfoRegion.empty();
            var operStatus = "3";
            var showProcess = "44";
            //强制停止中
            var $checkedInput = $("td.groupServerIdsTd input:checkbox:checked");
            var length = $checkedInput.length;
            var namesArr = new Array();
            var collection = this.model.get("listCollection");
            $checkedInput.each(function() {
                var curName = $(this).val();
                var serverStatus = $(this).attr("serverStatus");
                if (serverStatus != "2" && serverStatus != "3") {
                    namesArr.push(curName);
                    collection.each(function(c) {
                        if (c.get("serverName") == curName) {
                            c.set("processStatus", showProcess);
                        }
                    });
                }
            });
            if (namesArr.length > 0) {
                this.batchStartStopServer(operStatus, showProcess, namesArr);
            } else {
                var tv = new ItemTipView();
                tv.model.set("flag", "false");
                tv.model.set("msg", "请选择有效的服务器!");
                jcfManager.tipInfoRegion.show(tv);
            }
        },
        batchStartStopServer: function(operStatus, showProcess, serverNames) {
            // var collection = this.model.get("listCollection") ;
            $("#groupCheckAll").prop("checked", false);
            var serverURL = "/" + jcfManager.appName + "/server/batchStartStopServer.action";
            var objParam = {};
            objParam.operStatus = operStatus;
            objParam.serverNames = serverNames;
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, objParam);
            //取消其他的自动刷新函数
            var autoFreshFlag = $("#freshPage4GroupServerFlag").val();
            if (autoFreshFlag != undefined && autoFreshFlag.length > 0) {
                window.clearInterval(autoFreshFlag);
            }
            var self = this;
            $.when(ajaxing).done(function(data) {
                $("td.groupServerIdsTd input:checkbox").prop("checked", false);
                self.listView.trigger("autoFreshPageInfo");
            });
        },
        onShow: function() {
            var pp = this.model.get("processStatus");
            this.$el.find("#processStatus").find("option").each(function() {
                var curStr = $(this).val();
                if (curStr == pp) {
                    $(this).attr("selected", "selected");
                    return false;
                }
            });
        }
    });
    //显示组服务器信息列表----第二部分
    var rowViewTeplateStr = require("travsky/jcf/1.0.0/template/server/groupServerItem-debug.tpl");
    var tableViewTeplateStr = require("travsky/jcf/1.0.0/template/server/groupServerList-debug.tpl");
    var GroupServerItemView = Marionette.ItemView.extend({
        initialize: function() {
            //jcf服务器相关操作
            var jcfStartFlag = authUtil.getJcfStartFlag();
            var jcfStopFlag = authUtil.getJcfStopFlag();
            var jcfForceStopFlag = authUtil.getJcfForceStopFlag();
            var jcfConfigFlag = authUtil.getJcfConfigFlag();
            var jcfUnloadFlag = authUtil.getJcfUnloadFlag();
            var jcfUpdateFlag = authUtil.getJcfUpdateFlag();
            var jcfMemViewFlag = authUtil.getJcfMemViewFlag();
            this.model.set("jcfStartFlag", jcfStartFlag);
            this.model.set("jcfStopFlag", jcfStopFlag);
            this.model.set("jcfForceStopFlag", jcfForceStopFlag);
            this.model.set("jcfConfigFlag", jcfConfigFlag);
            this.model.set("jcfUnloadFlag", jcfUnloadFlag);
            this.model.set("jcfUpdateFlag", jcfUpdateFlag);
            this.model.set("jcfMemViewFlag", jcfMemViewFlag);
            //上下文服务器相关操作
            var contextStarFlag = authUtil.getContextStartFlag();
            var contextStopFlag = authUtil.getContextStopFlag();
            var contextForceStopFlag = authUtil.getContextForceStopFlag();
            var contextUnloadFlag = authUtil.getContextUnloadFlag();
            this.model.set("contextStarFlag", contextStarFlag);
            this.model.set("contextStopFlag", contextStopFlag);
            this.model.set("contextForceStopFlag", contextForceStopFlag);
            this.model.set("contextUnloadFlag", contextUnloadFlag);
            //注册库相关操作
            var registryStartFlag = authUtil.getRegistryStartFlag();
            var registryStopFlag = authUtil.getRegistryStopFlag();
            var registryForceStopFlag = authUtil.getRegistryForceStopFlag();
            var registryConfigFlag = authUtil.getRegistryConfigFlag();
            var registryUnloadFlag = authUtil.getRegistryUnloadFlag();
            var registryMenViewFlag = authUtil.getRegistryMemViewFlag();
            var registrySwitchFlag = authUtil.getRegistrySwitchFlag();
            //切换注册库
            this.model.set("registryStartFlag", registryStartFlag);
            this.model.set("registryStopFlag", registryStopFlag);
            this.model.set("registryForceStopFlag", registryForceStopFlag);
            this.model.set("registryConfigFlag", registryConfigFlag);
            this.model.set("registryUnloadFlag", registryUnloadFlag);
            this.model.set("registryMenViewFlag", registryMenViewFlag);
            this.model.set("registrySwitchFlag", registrySwitchFlag);
            this.model.on("change", this.render);
        },
        template: _.template(rowViewTeplateStr),
        tagName: "tr",
        events: {
            click: "highlightName",
            "click td.groupServerIdsTd :checkbox": "checkedServerItem",
            "click td.operTd a": "operServer",
            "click td.configTd a": "configServer",
            "click td.deleteTd a": "deleteServer",
            "click td.memoryDetailTd a": "showMemoryDetail",
            "click td.changeRegistryServerTd a": "changeRegistryServer"
        },
        checkedServerItem: function(e) {
            //选择复选框时
            e.stopPropagation();
            var len1 = $("td.groupServerIdsTd input:checkbox").length;
            var len2 = $("td.groupServerIdsTd input:checkbox:checked").length;
            var $all = $("#groupCheckAll");
            if (len1 == len2) {
                $all.prop("checked", true);
            } else {
                $all.prop("checked", false);
            }
        },
        highlightName: function(e) {
            e.preventDefault();
            this.$el.toggleClass("warning");
        },
        checkRegistryCanSwitch: function() {
            //切换注册库
            jcfManager.tipInfoRegion.empty();
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/server/checkAllRegServerIsExist.action";
            //checkRegServerIsExist
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.count == "2") {
                    flag = true;
                } else {
                    var tv = new ItemTipView();
                    tv.model.set("flag", "false");
                    tv.model.set("msg", "不存在可切换的注册库服务器!");
                    jcfManager.tipInfoRegion.show(tv);
                }
            });
            return flag;
        },
        changeRegistryServer: function(e) {
            //切换注册库
            e.preventDefault();
            e.stopPropagation();
            var flag = this.checkRegistryCanSwitch();
            //1.检查注册库是否可切换
            var self = this;
            if (flag) {
                //2.切换注册库
                var serverIp = this.model.get("serverIp");
                var groupId = this.model.get("groupId");
                var serverURL = "/" + jcfManager.appName + "/server/switchRegistryServer.action";
                var jsonParam = {
                    serverIp: serverIp,
                    groupId: groupId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        alert("切换成功");
                        var timstamp = new Date().valueOf();
                        var url = "serverMgr/group/param/groupId=" + groupId + "&timstamp=" + timstamp;
                        appRouter.navigate(url, {
                            trigger: true
                        });
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", "不存在可切换的注册库服务器!");
                        jcfManager.tipInfoRegion.show(tv);
                    }
                });
            }
        },
        showMemoryDetail: function(e) {
            //内存查看
            e.preventDefault();
            e.stopPropagation();
            var ServerSysMemoryStatisticsLayout = require("travsky/jcf/1.0.0/view/server/serverSysMemoryStatisticsLayout-debug");
            var modelName = sidbarUtil.getModuleName();
            var serverId = this.model.get("serverId");
            var groupId = this.model.get("groupId");
            var queryString = {
                serverId: serverId,
                groupId: groupId
            };
            appRouter.navigate(modelName + "/server/memoryInfo/param/" + QueryString.stringify(queryString));
            var layout = new ServerSysMemoryStatisticsLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(layout);
            layout.trigger("showPageInfo");
        },
        configServer: function(e) {
            e.preventDefault();
            e.stopPropagation();
            var modelName = sidbarUtil.getModuleName();
            var serverId = $(e.target).attr("href");
            var selectNavItem = "paramCfg";
            var jSring = {
                serverId: serverId,
                selectedPageUI: selectNavItem
            };
            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jSring), {
                trigger: true
            });
        },
        deleteServer: function(e) {
            //删除服务器
            e.preventDefault();
            e.stopPropagation();
            if (confirm("确认删除?")) {
                var $curA = $(e.target);
                var serverId = this.model.get("serverId");
                var serverName = this.model.get("serverName");
                var jsonParam = {
                    serverId: serverId,
                    serverName: serverName
                };
                var serverURL = "/" + jcfManager.appName + "/server/deleteServer.action";
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "success") {
                        jcfManagement.view.server_sidebar.refresh();
                        //self.remove() ;
                        self.trigger("parent:removeModel");
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", "删除服务器失败!");
                        jcfManager.tipInfoRegion.show(tv);
                    }
                });
            }
        },
        operServer: function(e) {
            e.preventDefault();
            e.stopPropagation();
            $("#groupCheckAll").prop("checked", false);
            var $a = $(e.target);
            var href = $a.attr("href");
            var autoFreshFlag = $("#freshPage4GroupServerFlag").val();
            if (autoFreshFlag != undefined && autoFreshFlag.length > 0) {
                window.clearInterval(autoFreshFlag);
            }
            //var serverName = this.$el.find("td[name='serverName']").text() ;
            var serverName = this.model.get("serverName");
            if ("start" == href) {
                this.startServer(serverName);
            } else if ("stop" == href) {
                this.stopServer(serverName);
            } else if ("forceStop" == href) {
                this.forceStopServer(serverName);
            }
        },
        startServer: function(serverName) {
            //启动服务器
            var jsonData = {
                serverName: serverName,
                operStatus: 1
            };
            var ajaxing = this.operServerStatus(jsonData);
            var self = this;
            self.model.set("processStatus", "3");
            //启动中
            $.when(ajaxing).done(function(result) {
                //自动刷新页面
                self.trigger("autoFresh:pageInfo");
            });
        },
        stopServer: function(serverName) {
            //停止服务器
            var jsonData = {
                serverName: serverName,
                operStatus: 2
            };
            var ajaxing = this.operServerStatus(jsonData);
            var self = this;
            self.model.set("processStatus", "4");
            //停止中...
            $.when(ajaxing).done(function(result) {
                //自动刷新页面
                self.trigger("autoFresh:pageInfo");
            });
        },
        forceStopServer: function(serverName) {
            //强制停止服务器//如果点击强制停止，则不可重复强制停止
            var jsonData = {
                serverName: serverName,
                operStatus: 3
            };
            var ajaxing = this.operServerStatus(jsonData);
            var self = this;
            self.model.set({
                processStatus: "44"
            });
            //强制停止中...//如果点击强制停止，则不可重复强制停止
            $.when(ajaxing).done(function(result) {
                //自动刷新页面
                self.trigger("autoFresh:pageInfo");
            });
        },
        operServerStatus: function(jsonData) {
            //启动、停止、强制停止服务器
            var serverURL = "/" + jcfManager.appName + "/server/updateSingleServerStatus.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonData);
            return ajaxing;
        }
    });
    var GroupServerListView = Marionette.CompositeView.extend({
        //jcf服务器组
        initialize: function() {
            this.on("autoFreshPageInfo", this.autoFreshPageInfo);
            this.on("freshPage4SwitchRegistryServer", this.freshPage4SwitchRegistryServer);
        },
        events: {
            "click #groupCheckAll": "groupCheckAll"
        },
        template: _.template(tableViewTeplateStr),
        childView: GroupServerItemView,
        childViewContainer: "tbody",
        groupCheckAll: function(e) {
            var checkFlag = e.target.checked;
            $("td.groupServerIdsTd input:checkbox").prop("checked", checkFlag);
        },
        childEvents: {
            "parent:removeModel": function(itemView) {
                var m = itemView.model;
                this.collection.remove(m);
            },
            "autoFresh:pageInfo": function() {
                this.trigger("autoFreshPageInfo");
            }
        },
        autoFreshPageInfo: function() {
            var cc = this.collection;
            var refreshSpace = 2e3;
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            //保存当前url
            var curHash = window.location.hash;
            $("#freshPage4GroupServerUrl").val(curHash);
            var self = this;
            //定时刷新页面服务的状态
            if (cc.length > 0) {
                //进入页面就先刷一把
                setTimeout(self._directUpdate(self), 300);
                //第二步：定时刷新
                var ttt = setInterval(self.updatePageServerStatus, refreshSpace, self);
                self.autoFreshPageTTT = ttt;
                $("#freshPage4GroupServerFlag").val(ttt);
                setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
            }
        },
        freshPage4SwitchRegistryServer: function() {},
        updatePageServerStatus: function(self) {
            //自动刷新
            var ttt = self.autoFreshPageTTT;
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4GroupServerUrl").val();
            //var autoFreshFlag = $("#freshPage4GroupServerFlag").val() ;
            if (oldUrl == curHash) {
                //刷新页面
                self.directUpdate(self);
            } else {
                //结束自动刷新
                window.clearInterval(ttt);
            }
        },
        _directUpdate: function(self) {
            return function() {
                self.directUpdate(self);
            };
        },
        directUpdate: function(self) {
            //刷新页面
            var collection = self.collection;
            var serverURL = "/" + jcfManager.appName + "/server/updatePageServerStatus.action";
            var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                var model = new Backbone.Model(data);
                collection.each(function(m) {
                    var serverName = m.get("serverName");
                    var cStatus = model.get("" + serverName + "");
                    if (cStatus != undefined) {
                        m.set("processStatus", cStatus);
                    }
                });
            });
        }
    });
    //组信息显示布局----第三部分
    var ServerMgr4GroupLayout = Marionette.LayoutView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(options) {
            this.queryString = options.queryString;
            var jcfGroupCfgFlag = authUtil.getJcfGroupConfigFlag();
            var registryGroupCfgFlag = authUtil.getRegisgryGroupConfigFlag();
            this.model.set("jcfGroupCfgFlag", jcfGroupCfgFlag);
            this.model.set("registryGroupCfgFlag", registryGroupCfgFlag);
            groupCategoryStr = this.model.get("groupCategory");
            ListView = GroupServerListView;
            this.on("showPageInfo", this.showPageInfo);
            //显示查询列表视图
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        events: {
            "click #searchGroupServer": "searchGroupServer2",
            "click #serverMgrNav li a": "serverMgr4GroupNav"
        },
        ui: {
            hiddenGroupId: "#hiddenGroupId"
        },
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            searchRegion: "#searchRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        showPageInfo: function() {
            var itemStr = this.queryString.selectedPageUI;
            if (itemStr == undefined || itemStr.length == 0) {
                itemStr = "serverGroupList";
            }
            this.showPageInfo2(itemStr);
        },
        showPageInfo2: function(itemStr) {
            var self = this;
            var groupId = this.queryString.groupId;
            if ("serverGroupConfig" == itemStr) {
                //1:组服务器配置
                //显示组服务配置的信息
                var serverURL = "/" + jcfManager.appName + "/server/getGroupServerConfig.action";
                var jsonParam = {
                    groupId: groupId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    self.searchRegion.empty();
                    self.listRegion.empty();
                    self.pagebarRegion.empty();
                    if ("7" == groupCategoryStr) {
                        //alert("jcfCache组配置!") ;
                        self.searchRegion.show(new GroupServerConfig_cache({
                            model: model
                        }));
                    } else if ("4" == groupCategoryStr) {
                        //注册服务库
                        self.searchRegion.show(new GroupServerConfig_registry({
                            model: model
                        }));
                    } else if ("1" == groupCategoryStr || "6" == groupCategoryStr) {
                        //6是适配组
                        self.searchRegion.show(new GroupServerConfig({
                            model: model
                        }));
                    }
                });
            } else if ("serverGroupList" == itemStr) {
                //2.服务器控制
                //显示列表信息
                var processStatus = this.queryString.processStatus == undefined ? "0" : this.queryString.processStatus;
                var searchModel = new Backbone.Model();
                searchModel.set("processStatus", processStatus);
                //显示查询条件部分视图
                var searchItemView = new GroupServerSearchView({
                    model: searchModel
                });
                this.searchItemView = searchItemView;
                this.searchRegion.show(searchItemView);
                this.searchGroupServer();
            }
        },
        serverMgr4GroupNav: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var $curA = $(e.target);
            var $curLi = $curA.parent();
            $curLi.siblings().removeClass("active");
            var autoFreshFlag = $("#freshPage4GroupServerFlag").val();
            if (autoFreshFlag != undefined && autoFreshFlag.length > 0) {
                window.clearInterval(autoFreshFlag);
            }
            var modelName = sidbarUtil.getModuleName();
            if (!$curLi.hasClass("active")) {
                $curLi.addClass("active");
                var itemStr = $curA.attr("href");
                var groupId = this.queryString.groupId;
                //地址栏导航到组服务器配置页面
                var jString = {
                    selectedPageUI: "" + itemStr,
                    groupId: groupId
                };
                appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(jString));
                //显示信息
                this.showPageInfo2(itemStr);
            }
        },
        searchGroupServer: function() {
            //直接从route导航过来的
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            if (autoFreshFlag != undefined && autoFreshFlag.length > 0) {
                window.clearInterval(autoFreshFlag);
            }
            var goupId = this.queryString.groupId;
            var jsParam = {};
            jsParam.groupId = goupId;
            jsParam.processStatus = this.queryString.processStatus;
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            var serverURL = "/" + jcfManager.appName + "/server/searchGroupPageServer.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, JSON.parse(JSON.stringify(jsParam)));
            //this.downContentRegion.empty()
            var self = this;
            $.when(ajaxing).done(function(data) {
                var groupCategory = data.groupCategory;
                var pageBean = data.pageBean;
                var model = new Backbone.Model({
                    groupCategory: groupCategory
                });
                //显示查询列表
                var cc = new Backbone.Collection(pageBean.recordList);
                var searchView = self.searchItemView;
                //这一行一定要放在下面一行的上面，否则出错
                var listView = new ListView({
                    model: model,
                    collection: cc
                });
                if (searchView != undefined) {
                    searchView.model.set("listCollection", cc);
                    //将listView传递给searchView
                    searchView.listView = listView;
                }
                self.listRegion.show(listView);
                //显示分页栏
                var pm = new PagebarModel(pageBean);
                cc.on("remove", function(m) {
                    var n = pm.get("recordCount") * 1 - 1;
                    pm.set("recordCount", n + "");
                });
                pm.set("uriSection", "group");
                var pbview = new PagebarView({
                    model: pm,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbview);
                //页面自动刷新
                //定时刷新页面服务的状态
                listView.trigger("autoFreshPageInfo");
            });
        },
        searchGroupServer2: function() {
            //点击查询按钮显示的视图
            var modelName = sidbarUtil.getModuleName();
            var id = $("#hiddenGroupId").val();
            var processStatus = this.$el.find("#processStatus").val();
            var pageSize = $("#pageSize").val();
            if (processStatus == undefined) {
                processStatus = "";
            }
            if (pageSize == undefined) {
                pageSize = jcfManager.defaultPageSize;
            }
            var jString = {
                groupId: id,
                processStatus: processStatus,
                currentPage: "1",
                pageSize: pageSize,
                selectedPageUI: "serverGroupList"
            };
            appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        }
    });
    return ServerMgr4GroupLayout;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-31
 * Time: 下午03:24:16
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/groupServerConfig-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/groupServerConfig-debug.tpl");
    var ServerInputCheck = require("travsky/jcf/1.0.0/view/server/serverInputCheck-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var GroupServerConfig = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function() {
            $.extend(this, new ServerInputCheck());
        },
        events: {
            "click #groupServerCfgSubmit": "saveGroupServerCfg",
            "blur #java_Memory": "checkjava_Memory",
            "blur #java_Max_Perm_Mem": "checkjava_Max_Perm_Mem",
            "blur #direct_mem_size": "checkdirect_mem_size",
            "blur #loadFactor": "checkloadfactor",
            "blur #memoryPoolSize": "checkMemoryPoolSize",
            "blur #blockSize": "checkBlockSize",
            "blur #heapMessageLimit": "checkHeapMessageLimit",
            "blur #channelQueueSize": "checkchannelQueueSize",
            "blur #channelConcurrent": "checkchannelConcurrent",
            "blur #connectionRetry": "checkconnectionRetry",
            "blur #heartBeatTime": "checkheartBeatTime",
            "blur #messageBodyLimit": "checkmessageBodyLimit",
            "blur #registryIp": "checkserviceip",
            "blur #registryPort": "checkserverport",
            "blur #synchTime": "checksynchtime",
            "blur #gcFileNum": "checkgcFileNum",
            "blur #gcFileSize": "checkgcFileSize",
            "blur #persistQueueFullPath": "checkpersistQueueFullPath"
        },
        saveGroupServerCfg: function() {
            var flag = this.checkServerGroup();
            if (flag) {
                var formIds = [ "serverId", "groupId", "serverCategory", "java_Memory", "java_Max_Perm_Mem", "karaf_opts", "direct_mem_size", "gcoptions", "loadFactor", "memoryPoolSize", "blockSize", "heapMessageLimit", "channelQueueSize", "channelConcurrent", "connectionRetry", "heartBeatTime", "messageBodyLimit", "registryIp", "registryPort", "synchTime", "heapDumpPath", "gcFile", "gcRotation", "gcFileNum", "gcFileSize", "auditLevel", "persistQueueFullPath", "serverLogLevel", "serverLogType" ];
                var formObj = util.getFormInputObj(formIds);
                var serverURL = "/" + jcfManager.appName + "/server/updateGroupServerConfig.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        alert("保存信息成功");
                    } else {
                        alert("保存信息失败");
                    }
                });
            }
        },
        checkServerGroup: function() {
            if (this.checkloadfactor() && this.checkMemoryPoolSize() && this.checkdirect_mem_size() && this.checkBlockSize() && this.checkHeapMessageLimit() && this.checkchannelQueueSize() && this.checkchannelConcurrent() && this.checkconnectionRetry() && this.checkheartBeatTime() && this.checkmessageBodyLimit() && this.checksynchtime() && this.checkserviceip() && this.checkserverport() && this.checkjava_Memory() && this.checkjava_Max_Perm_Mem() && this.checkgcFileNum() && this.checkgcFileSize() && this.checkpersistQueueFullPath()) {
                //
                return true;
            }
            return false;
        }
    });
    return GroupServerConfig;
});

define("travsky/jcf/1.0.0/template/server/groupServerConfig-debug.tpl", [], '<form class="form-horizontal" role="form">\n	<input type="hidden" id="serverId" value="<%=configureInfo.serverId%>"/>\n	<input type="hidden" id="groupId" value ="<%=groupId%>"/>\n	<input type="hidden" id="serverCategory" value ="<%=serverCategory%>"/>\n	<div class="form-group" id = "java_MemoryDiv" >\n		<label for="java_Memory" class="col-sm-3 control-label">堆内存大小：</label>\n		<div class="col-sm-4">\n			<input type="text" id="java_Memory" value="<%=configureInfo.java_Memory%>" class="form-control input-sm" placeholder="单位只能为kK,mM,gG"/>\n		</div>\n		<div>\n			<span class = "text-info">(单位:kK,mM,gG)&nbsp;</span>\n			<span id = "java_MemoryTip"></span>\n		</div>\n	</div>\n 	<div class="form-group" id="java_Max_Perm_MemDiv">\n		<label for="java_Max_Perm_Mem" class="col-sm-3 control-label">永久代堆大小：</label>\n		<div class="col-sm-4">\n			<input type="text" id="java_Max_Perm_Mem" value = "<%=configureInfo.java_Max_Perm_Mem%>"  class="form-control input-sm"  placeholder="单位只能为kK,mM,gG" />\n      	</div>\n      	<div>\n      		<span class = "text-info">(单位:kK,mM,gG)&nbsp;</span>\n      		<span id = "java_Max_Perm_MemTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "karaf_optsDiv" >\n		<label for="karaf_opts" class="col-sm-3 control-label">JVM扩展参数：</label>\n		<div class="col-sm-4">\n			<input type="text" id="karaf_opts"  value = "<%=configureInfo.karaf_opts%>"    class="form-control input-sm"  placeholder="配置JVM参数超过系统内存值后将导致错误" />\n		</div>\n		<div>\n			<span id = "karaf_optsTip"></span>\n		</div>\n	</div>\n	<div class="form-group" id = "direct_mem_sizeDiv" >\n		<label for="direct_mem_size" class="col-sm-3 control-label">最大可分配系统内存：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="direct_mem_size" value = "<%=configureInfo.direct_mem_size%>"   class="form-control input-sm"  placeholder="不建议配置" />\n      	</div>\n      	<div>\n      		<span class = "text-info">(单位:kK,mM,gG)&nbsp;</span>\n      		<span id = "direct_mem_sizeTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "gcoptionsDiv" >\n		<label for="gcoptions" class="col-sm-3 control-label">GC选项：</label>\n		<div class="col-sm-4">\n        	<input type="text" id="gcoptions"  value = "<%=configureInfo.gcoptions%>"  class="form-control input-sm"  placeholder="" />\n      	</div>\n      	<div>\n      		<span id = "gcoptionsTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "heapDumpPathDiv" >\n		<label for="heapDumpPath" class="col-sm-3 control-label">堆内存快照的存储文件路径：</label>\n		<div class="col-sm-4">\n			<input type="text" id="heapDumpPath" value = "<%=configureInfo.heapDumpPath%>"  class="form-control input-sm"  placeholder="">\n	    </div>\n	    <div>\n	    	<span id = "heapDumpPathTip"></span>\n	    </div>\n	</div>\n	<div class="form-group" id = "gcFileDiv" >\n		<label for="gcFile" class="col-sm-3 control-label">GC日志的文件名和路径：</label>\n		<div class="col-sm-4">\n			<input type="text" id="gcFile"  value = "<%=configureInfo.gcFile%>" class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n	    </div>\n	    <div>\n	    	<span id = "gcFileTip"></span>\n	    </div>\n	</div>\n	<div class="form-group" id = "gcRotationDiv">\n		<label for="gcRotation" class="col-sm-3 control-label">GC日志自动转储：</label>\n	    <div class="col-sm-4">\n	    	<select id="gcRotation" class="form-control input-sm" placeholder="JDK 7版本开始兼容">\n	      	 	<%if(configureInfo.gcRotation=="-XX:+UseGCLogFileRotation"){%>\n	      			<option selected = "selected"  value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option value="" >false</option>\n	      	 	 <%}else if(""==configureInfo.gcRotation){%>\n	      	 	 	<option value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option selected = "selected" value="" selected="selected">false</option>\n	      	 	 <%}%>\n			</select>\n		</div>\n		<div>\n			<span id="gcRotationTip"></span>\n		</div>\n	</div>\n	<div class="form-group" id="gcFileNumDiv">\n		<label for="gcFileNum" class="col-sm-3 control-label">GC日志绕接数目：</label>\n		<div class="col-sm-4">\n			<input type="text" id="gcFileNum"  value = "<%=configureInfo.gcFileNum%>" class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n      	</div>\n      	<div>\n      		<span id = "gcFileNumTip"></span>\n      	</div>\n    </div>\n    <div class="form-group" id = "gcFileSizeDiv" >\n		<label for="gcFileSize" class="col-sm-3 control-label">GC日志大小：</label>\n		<div class="col-sm-4">\n			<input type="text" id="gcFileSize" value = "<%=configureInfo.gcFileSize%>"  class="form-control input-sm"  placeholder="单位为k,K,m,M,g,G">\n      	</div>\n      	<div>\n      		<span>(单位:kK,mM,gG)</span><span id="gcFileSizeTip"></span>\n      	</div>\n    </div>\n	<div class="form-group" id = "loadFactorDiv" >\n		<label for="loadFactor" class="col-sm-3 control-label">负载均衡因子：</label>\n 		<div class="col-sm-4">\n        	<input type="text" id="loadFactor" value="<%=configureInfo.loadFactor%>"  class="form-control input-sm"  placeholder="必填项" />\n      	</div>\n      	<div class="text-danger">*\n      		<span id = "loadFactorTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id="memoryPoolSizeDiv" >\n		<label for="memoryPoolSize" class="col-sm-3 control-label">系统内存池大小：</label>\n  		<div class="col-sm-4">\n    		<input type="text" id="memoryPoolSize" value="<%=configureInfo.memoryPoolSize%>" class="form-control input-sm"  placeholder="单位：M" />\n  		</div>\n  		<div>\n  			<span class="text-danger">*</span>\n  			<span class="text-info">(单位:M)&nbsp;</span>\n  			<span id="memoryPoolSizeTip"></span>\n  		</div>\n   	</div>\n 	<div class="form-group" id = "blockSizeDiv" >\n 		<label for="blockSize" class="col-sm-3 control-label">系统内存块大小：</label>\n		<div class="col-sm-4">\n			<input type="text" id="blockSize" value = "<%=configureInfo.blockSize%>"  class="form-control input-sm"  placeholder="单位：k" />\n		</div>\n      	<div>\n      		<span class = "text-danger">*</span>\n      		<span class = "text-info">(单位:k)&nbsp;</span>\n      		<span id = "blockSizeTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "heapMessageLimitDiv" >\n 		<label for="heapMessageLimit" class="col-sm-3 control-label">JVM内存消息体最大值：</label>\n		<div class="col-sm-4">\n        	<input type="text" id="heapMessageLimit" value = "<%=configureInfo.heapMessageLimit%>"  class="form-control input-sm"  placeholder="单位：Byte" />\n      	</div>\n      	<div>\n      		<span class = "text-danger">*</span>\n      		<span class = "text-info">(单位:Byte)&nbsp;</span>\n      		<span id = "heapMessageLimitTip"></span>\n      	</div>\n 	</div>\n	<div class="form-group" id = "channelQueueSizeDiv" >\n      	<label for="channelQueueSize" class="col-sm-3 control-label">并发队列大小：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="channelQueueSize" value = "<%=configureInfo.channelQueueSize%>"  class="form-control input-sm"  placeholder="正整数" />\n     	 </div>\n      	<div>\n      		<span class = "text-danger">*</span>\n      		<span id = "channelQueueSizeTip"></span>\n      	</div>\n   	</div>\n	<div class="form-group" id = "channelConcurrentDiv" >\n     	<label for="channelConcurrent" class="col-sm-3 control-label">连接并发数：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="channelConcurrent"  value = "<%=configureInfo.channelConcurrent%>"  class="form-control input-sm"  placeholder="正整数" />\n      	</div>\n      	<div>\n      		<span class = "text-danger">*</span>\n      		<span id = "channelConcurrentTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "connectionRetryDiv" >\n		<label for="connectionRetry" class="col-sm-3 control-label">连接重试次数：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="connectionRetry"  value = "<%=configureInfo.connectionRetry%>" class="form-control input-sm"  placeholder="正整数" />\n      	</div>\n      	<div>\n      		<span class="text-danger">*</span>\n      		<span id="connectionRetryTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "heartBeatTimeDiv" >\n		<label for="heartBeatTime" class="col-sm-3 control-label">JCF服务器通信心跳间隔：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="heartBeatTime" value = "<%=configureInfo.heartBeatTime%>"  class="form-control input-sm"  placeholder="单位：秒（s）" />\n      	</div>\n      	<div>\n      		<span class = "text-info">(单位：秒(s))</span>\n      		<span id = "heartBeatTimeTip"></span>\n      	</div>\n	</div>\n	<input type="hidden" id="messageBodyLimit"  value = "<%=configureInfo.messageBodyLimit%>" class="form-control input-sm"  placeholder="单位：k" />\n	<div class="form-group" id = "registryIpDiv" >\n      	<label for="registryIp" class="col-sm-3 control-label">注册库IP：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="registryIp"  value = "<%=configureInfo.registryIp%>" class="form-control input-sm"  placeholder="必填项" />\n      	</div>\n      	<div>\n      		<span class="text-danger">*</span>\n      		<span id="registryIpTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "registryPortDiv" >\n		<label for="registryPort" class="col-sm-3 control-label">注册库端口：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="registryPort" value = "<%=configureInfo.registryPort%>"  class="form-control input-sm"  placeholder="端口应为1024~65535之间的数字" />\n      	</div>\n      	<div>\n      		<span class="text-danger">*</span>\n      		<span id="registryPortTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "synchTimeDiv" >\n		<label for="synchTime" class="col-sm-3 control-label">注册库同步间隔：</label>\n      	<div class="col-sm-4">\n        	<input type="text" id="synchTime"  value = "<%=configureInfo.synchTime%>" class="form-control input-sm"  placeholder="单位：秒（s）" />\n      	</div>\n      	<div>\n      		<span class = "text-danger">*</span>\n      		<span class = "text-info">(单位:秒(s))</span>\n      		<span id = "synchTimeTip"></span>\n      	</div>\n	</div>\n	<div class="form-group" id = "auditLevelDiv" >\n		<label for="auditLevel" class="col-sm-3 control-label">跟踪带日志输出规则：</label>\n		<div class="col-sm-4">\n			<select id="auditLevel" class="form-control input-sm" >\n				<%for(var i = 0; i < tracLogKeyList.length; i++){\n	      	 		if(configureInfo.auditLevel==""){\n	      	 			if(i==0){%>\n	      	 				<option selected = "selected" value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option>\n			      	 	<%}else{%>\n			      	 		<option value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option>\n			      	 	<%}\n	      	 		}else {\n	      	 			if(configureInfo.auditLevel==tracLogKeyList[i]){%>\n	      	 				<option selected = "selected" value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option>\n	      	 			<%}else{%>\n	      	 				<option value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option>\n	      	 			<%}\n	      	 		}\n	      	 	}%>\n			</select>\n		</div>\n	</div>\n	<div class="form-group" id = "persistQueueFullPathDiv" >\n		<label for="persistQueueFullPath" class="col-sm-3 control-label">服务器持久化队列文件保存路径：</label>\n		<div class="col-sm-4">\n			<input type="text" id="persistQueueFullPath" value = "<%=configureInfo.persistQueueFullPath%>"  class="form-control input-sm" value="/opt/applog/jcf/"  placeholder="">\n	    </div>\n	    <div>\n	    	<span class = "text-danger">*</span>\n	    	<span id = "persistQueueFullPathTip"></span>\n	    </div>\n	</div>\n	<div class="form-group" id = "serverLogLevelDiv" >\n		<label for="serverLogLevel" class="col-sm-3 control-label">服务日志级别：</label>\n		<div class="col-sm-4">\n			<select id="serverLogLevel" class="form-control input-sm">\n				<%for(var i = 0 ; i < serverLogLevels.length ;i ++){\n	         		var curll = serverLogLevels[i] ;\n	         		if(curll==configureInfo.serverLogLevel){%>\n	         			<option selected = "selected" value = "<%=curll%>" ><%=curll%></option>\n	         		<%}else{%>\n	         			<option value="<%=curll%>"><%=curll%></option>\n	         		<%}\n	         	  }%>\n			</select>\n		</div>\n	</div>\n	<div class="form-group" id = "serverLogTypeDiv" >\n		<label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n		<div class="col-sm-4">\n			<select id = "serverLogType" class="form-control input-sm" >\n	         	<%for(var i = 0; i < serverLogTypeList.length; i++){\n	         	  	var curlt = serverLogTypeList[i] ;\n	         		if(curlt.key==configureInfo.serverLogType){%>\n	         			<option selected="selected" value="<%=curlt.key%>" ><%=curlt.value%></option>\n	         		<%}else{%>\n	         			<option value="<%=curlt.key%>"><%=curlt.value%></option>\n	         		<%}\n	         	  }%>\n			</select>\n		</div>\n	</div>\n	<div class="form-group">\n		<div class="col-sm-offset-2 col-sm-10">\n			<button type="button" id="groupServerCfgSubmit" class="btn btn-primary">保存</button>\n		</div>\n   </div>\n</form>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-6
 * Time: 下午01:35:49
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverInputCheck-debug", [ "travsky/jcf/1.0.0/view/server/server-debug", "jquery-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var ServerUtil = require("travsky/jcf/1.0.0/view/server/server-debug");
    var ServerInputCheck = function() {
        this.checkServerName = function() {
            //服务器名称
            return ServerUtil.checkServerName();
        }, this.checkServerManagePort = function() {
            //JMX Registry端口
            return ServerUtil.checkServerManagePort();
        }, this.checkServerDeployPort = function() {
            return ServerUtil.checkServerDeployPort();
        }, this.checkHttpPort = function() {
            return ServerUtil.checkHttpPort();
        }, this.checkSshPort = function() {
            return ServerUtil.checkSshPort();
        }, this.checkjava_Memory = function() {
            return ServerUtil.checkjava_Memory();
        }, this.checkjava_Max_Perm_Mem = function() {
            //checkjava_Perm_Mem
            return ServerUtil.checkjava_Max_Perm_Mem();
        }, this.checkdirect_mem_size = function() {
            return ServerUtil.checkdirect_mem_size();
        }, this.checkjava_Perm_Mem = function() {
            return ServerUtil.checkjava_Perm_Mem();
        }, this.checkgcFileNum = function() {
            return ServerUtil.checkgcFileNum();
        }, this.checkgcFileSize = function() {
            return ServerUtil.checkgcFileSize();
        }, this.checkBindPort = function() {
            return ServerUtil.checkBindPort();
        }, this.checkloadfactor = function() {
            return ServerUtil.checkloadfactor();
        }, this.checkMemoryPoolSize = function() {
            return ServerUtil.checkMemoryPoolSize();
        }, this.checkBlockSize = function() {
            return ServerUtil.checkBlockSize();
        }, this.checkHeapMessageLimit = function() {
            return ServerUtil.checkHeapMessageLimit();
        }, this.checkchannelQueueSize = function() {
            return ServerUtil.checkchannelQueueSize();
        }, this.checkchannelConcurrent = function() {
            return ServerUtil.checkchannelConcurrent();
        }, this.checkconnectionRetry = function() {
            return ServerUtil.checkconnectionRetry();
        }, this.checkheartBeatTime = function() {
            return ServerUtil.checkheartBeatTime();
        }, this.checkmessageBodyLimit = function() {
            return ServerUtil.checkmessageBodyLimit();
        }, this.checkserviceip = function() {
            return ServerUtil.checkserviceip();
        }, this.getRegistryBindPort = function() {
            return ServerUtil.getRegistryBindPort();
        }, this.checkserverport = function() {
            return ServerUtil.checkserverport();
        }, this.checksynchtime = function() {
            return ServerUtil.checksynchtime();
        }, this.checkMaxidletime = function() {
            return ServerUtil.checkMaxidletime();
        }, this.checkmaxFileSize = function() {
            return ServerUtil.checkmaxFileSize();
        }, this.checkmaxBackupIndex = function() {
            return ServerUtil.checkmaxBackupIndex();
        }, this.checkpersistQueueFullPath = function() {
            return ServerUtil.checkpersistQueueFullPath();
        }, this.checkServerManagePort4Update = function() {
            return ServerUtil.checkServerManagePort4Update();
        }, this.checkServerDeployPort4Update = function() {
            return ServerUtil.checkServerDeployPort4Update();
        }, this.checkHttpPort4Update = function() {
            return ServerUtil.checkHttpPort4Update();
        }, this.checkSshPort4Update = function() {
            return ServerUtil.checkSshPort4Update();
        }, this.checkBindPort4Update = function() {
            return ServerUtil.checkBindPort4Update();
        }, this.checkStatisticsSyncTime = function() {
            //1.3
            return ServerUtil.checkStatisticsSyncTime();
        }, this.checkStatisticsPath = function() {
            //1.3
            return ServerUtil.checkStatisticsPath();
        }, this.checkJvmHeapAlert = function() {
            //1.3
            return ServerUtil.checkJvmHeapAlert();
        }, this.checkJvmHeapBlock = function() {
            //1.3
            return ServerUtil.checkJvmHeapBlock();
        }, this.checkMaxSize4Store = function() {
            //1.3
            return ServerUtil.checkMaxSize4Store();
        }, this.checkCacheNodeAlert = function() {
            //1.3
            return ServerUtil.checkCacheNodeAlert();
        };
    };
    return ServerInputCheck;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-31
 * Time: 下午03:24:16
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/groupServerConfig_registry-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/groupServerConfig_registry-debug.tpl");
    var ServerInputCheck = require("travsky/jcf/1.0.0/view/server/serverInputCheck-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var GroupServerConfig_registry = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function() {
            $.extend(this, new ServerInputCheck());
        },
        events: {
            "click #groupServerCfgSubmit": "saveGroupServerCfg",
            "blur #java_Memory": "checkjava_Memory",
            "blur #java_Perm_Mem": "checkjava_Perm_Mem",
            "blur #synchTime": "checksynchtime",
            "blur #maxIdleTime": "checkMaxidletime",
            "blur #gcFileNum": "checkgcFileNum",
            "blur #gcFileSize": "checkgcFileSize"
        },
        saveGroupServerCfg: function() {
            var flag = this.checkRegistryGroupFrom();
            if (flag) {
                var formIds = [ "serverId", "groupId", "serverCategory", "java_Memory", "java_Perm_Mem", "karaf_opts", "synchTime", "maxIdleTime", "heapDumpPath", "gcFile", "gcRotation", "gcFileNum", "gcFileSize", "serverLogLevel", "serverLogType" ];
                var formObj = util.getFormInputObj(formIds);
                var serverURL = "/" + jcfManager.appName + "/server/updateGroupServerConfig.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        alert("保存信息成功");
                    } else {
                        alert("保存信息失败");
                    }
                });
            }
        },
        checkRegistryGroupFrom: function() {
            if (this.checkjava_Memory() && this.checkjava_Perm_Mem() && this.checksynchtime() && this.checkMaxidletime() && this.checkgcFileNum() && this.checkgcFileSize()) return true;
            return false;
        }
    });
    return GroupServerConfig_registry;
});

define("travsky/jcf/1.0.0/template/server/groupServerConfig_registry-debug.tpl", [], '<br/>\n<form class="form-horizontal" role="form">\n   <input type="hidden" id="serverId" value="<%=configureInfo.serverId%>"/>\n   <input type = "hidden" id = "groupId" value ="<%=groupId%>"/>\n   <input type = "hidden" id = "serverCategory" value ="<%=serverCategory%>"/>\n   \n   <div class="form-group" id = "java_MemoryDiv" >\n      <label for="java_Memory" class="col-sm-3 control-label">堆内存大小：</label>\n      <div class="col-sm-4">\n        <input type="text" id="java_Memory"  value = "<%=configureInfo.java_Memory%>"  class="form-control input-sm"  placeholder="单位只能为kK,mM,gG" />\n      </div>\n      <div><span class = "text-info">(单位:kK,mM,gG)&nbsp;</span><span id = "java_MemoryTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "java_Perm_MemDiv" >\n      <label for="java_Perm_Mem" class="col-sm-3 control-label">永久代堆大小：</label>\n      <div class="col-sm-4">\n        <input type="text" id="java_Perm_Mem" value = "<%=configureInfo.java_Perm_Mem%>"   class="form-control input-sm"  placeholder="单位只能为kK,mM,gG" />\n      </div>\n      <div><span class = "text-info">(单位:kK,mM,gG)&nbsp;</span><span id = "java_Perm_MemTip"></span></div>\n   </div>\n\n   <div class="form-group" id = "karaf_optsDiv" >\n      <label for="karaf_opts" class="col-sm-3 control-label">JVM扩展参数：</label>\n      <div class="col-sm-4">\n        <input type="text" id="karaf_opts" value = "<%=configureInfo.karaf_opts%>"   class="form-control input-sm"  placeholder="必配置JVM参数超过系统内存值后将导致错误" />\n      </div>\n      <div><span id = "karaf_optsTip"></span></div>\n   </div>\n   \n   <!--组配置增加页面控件开始-------------------------------->\n   <!--堆内存快照-->\n   \n   <div class="form-group" id = "heapDumpPathDiv" >\n      <label for="heapDumpPath" class="col-sm-3 control-label">堆内存快照的存储文件路径：</label>\n      <div class="col-sm-4">\n         <input type="text" id="heapDumpPath"  value = "<%=configureInfo.heapDumpPath%>"  class="form-control input-sm"  placeholder="">\n      </div>\n      <div><span id = "heapDumpPathTip"></span></div>\n   </div>\n	   \n   <div class="form-group" id = "gcFileDiv" >\n      <label for="gcFile" class="col-sm-3 control-label">GC日志的文件名和路径：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFile" value = "<%=configureInfo.gcFile%>"   class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n      </div>\n      <div><span id = "gcFileTip"></span></div>\n   </div>\n	   \n   <div class="form-group" id = "gcRotationDiv" >\n      <label for="gcRotation" class="col-sm-3 control-label">GC日志自动转储：</label>\n      <div class="col-sm-4">\n      	 <select id="gcRotation"  class="form-control input-sm" placeholder="JDK 7版本开始兼容">\n			<%\n      	 	 if(configureInfo.gcRotation=="-XX:+UseGCLogFileRotation"){\n      	 	 %>\n      	 	 	<option selected = "selected"  value="-XX:+UseGCLogFileRotation">true</option>\n      	 	 	<option value="" >false</option>\n      	 	 <%\n      	 	 }else if(""==configureInfo.gcRotation) {\n      	 	 %>\n      	 	 	<option value="-XX:+UseGCLogFileRotation">true</option>\n      	 	 	<option selected = "selected" value="" selected="selected">false</option>\n      	 	 <%\n      	 	 }\n      	 	%>\n		 </select>\n      </div>\n       <div><span id = "gcRotationTip"></span></div>\n   </div>\n	   \n   <div class="form-group" id = "gcFileNumDiv" >\n      <label for="gcFileNum" class="col-sm-3 control-label">GC日志绕接数目：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFileNum"  value = "<%=configureInfo.gcFileNum%>"  class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n      </div>\n      <div><span id = "gcFileNumTip"></span></div>\n   </div>\n	    \n   <div class="form-group" id = "gcFileSizeDiv" >\n      <label for="gcFileSize" class="col-sm-3 control-label">GC日志大小：</label>\n      <div class="col-sm-4">\n         <input type="text" id="gcFileSize"  value = "<%=configureInfo.gcFileSize%>"  class="form-control input-sm"  placeholder="单位为k,K,m,M,g,G">\n      </div>\n      <div><span class = "text-info">(单位:k,K,m,M,g,G)&nbsp;</span><span id = "gcFileSizeTip"></span></div>\n   </div> \n	   \n   \n   <!--监听端口-->\n   <!--组配置增加页面控件结束-------------------------------->\n   \n   \n   <div class="form-group" id = "synchTimeDiv" >\n      <label for="synchTime" class="col-sm-3 control-label">注册库同步时间隔：</label>\n      <div class="col-sm-4">\n        <input type="text" id="synchTime"  value = "<%=configureInfo.synchTime%>" class="form-control input-sm"  placeholder="必填项，正整数" />\n      </div>\n      <div><span class = "text-info">(单位:秒)</span><span class = "text-danger">*</span><span id = "synchTimeTip"></span></div>\n   </div>\n   \n   <div class="form-group" id = "maxIdleTimeDiv" >\n      <label for="maxIdleTime" class="col-sm-3 control-label">JCF服务器失效超时：</label>\n      <div class="col-sm-4">\n        <input type="text" id="maxIdleTime" value = "<%=configureInfo.maxIdleTime%>"  class="form-control input-sm"  placeholder="必填项，正整数" />\n      </div>\n      <div><span class = "text-info">(单位:秒)</span><span class = "text-danger">*</span><span id = "maxIdleTimeTip"></span></div>\n   </div>\n   \n   \n  <div class="form-group" id = "serverLogLevelDiv" >\n      <label for="serverLogLevel" class="col-sm-3 control-label">服务日志级别：</label>\n      <div class="col-sm-4">\n         <select id = "serverLogLevel" class="form-control input-sm" >\n         	 <%\n         	  for(var i = 0 ; i < serverLogLevels.length ;i ++){\n         	    var curll = serverLogLevels[i] ;\n         		if(curll==configureInfo.serverLogLevel){\n         		%>\n         			<option selected = "selected" value = "<%=curll%>" ><%=curll%></option>\n         		<%\n         		}else {\n         		%>\n         			<option  value = "<%=curll%>" ><%=curll%></option>\n         		<%\n         		}\n         	  }\n         	%>\n         </select>\n      </div>\n   </div>\n	   \n   <div class="form-group" id = "serverLogTypeDiv" >\n      <label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n      <div class="col-sm-4">\n         <select id = "serverLogType" class="form-control input-sm" >\n         	<%\n         	  for(var i = 0 ; i < serverLogTypeList.length ;i ++){\n         	  	var curlt = serverLogTypeList[i] ;\n         		if(curlt.key==configureInfo.serverLogType){\n         		%>\n         			<option selected = "selected"  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n         		<%\n         		}else {\n         		%>\n         			<option  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n         		<%\n         		}\n         	  }\n         	%>\n         </select>\n      </div>\n   </div>\n   \n   <div class="form-group">\n      <div class="col-sm-offset-2 col-sm-10">\n         <button type="button" id = "groupServerCfgSubmit" class="btn btn-primary">保存</button>\n      </div>\n   </div>\n   \n</form>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-10
 * Time: 上午10:24:21
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/groupServerConfig_cache-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/server/checkCacheGroup-debug", "travsky/jcf/1.0.0/view/server/global_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/groupServerConfig_cache-debug.tpl");
    var InputUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var InputCheck = require("travsky/jcf/1.0.0/view/server/checkCacheGroup-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/server/global_view-debug");
    var JcfCacheGroupCfgLayout = Marionette.LayoutView.extend({
        initialize: function() {
            $.extend(this, new InputCheck());
        },
        template: _.template(viewTemplateStr),
        regions: {
            errInfoRegion: "#errInfoRegion",
            contentRegion: "#jcfCacheGroupCfgRegion"
        },
        events: {
            "blur #addGroup_maxSize4Store": "checkMaxSize4Store",
            //存储最大个数
            "blur #addGroup_singleDataMaxLength": "checkSingleDataMaxLength",
            //已存在//单个数据最大长度
            "blur #addGroup_cacheNodeAlert": "checkCacheNodeAlert",
            //存储报警阀值
            "blur #addGroup_jvmMemory": "checkJvmMemory",
            "blur #addGroup_jvmHeapAlert": "checkJvmHeapAlert",
            "blur #addGroup_dataBackupNum": "checkDataBackupNum",
            //已存在
            "blur #addGroup_statisticsPath": "checkStatisticsPath",
            "blur #addGroup_statisticsSyncTime": "checkStatisticsSyncTime",
            "blur #addGroup_jvmHeapBlock": "checkJvmHeapBlock",
            "blur #addGroup_groupPassword": "checkGroupPassword",
            //已存在
            "blur #addGroup_broadcastURL": "checkBroadcastURL",
            //已存在
            "click #groupServerCfgSubmit": "groupServerCfgSubmit",
            "blur #addGroup_maxSize4Cache": "checkMaxSize4Cache",
            "blur #addGroup_networkPort": "checkaNetworkPort",
            "blur #addGroup_tcpIPMember": "checkaddTcpIPMember"
        },
        getCacheConfigFormInputParam: function() {
            var ids = [ "groupId", "groupName", "addGroup_groupPassword", "addGroup_broadcastURL", "addGroup_maxSize4Store", "addGroup_singleDataMaxLength", "addGroup_cacheNodeAlert", "addGroup_jvmMemory", "addGroup_jvmHeapAlert", "addGroup_dataBackupNum", "addGroup_statisticsPath", "addGroup_statisticsSyncTime", "addGroup_jvmHeapBlock", "addGroup_maxSize4Cache", "addGroup_networkPort", "addGroup_tcpIPMember" ];
            var jsParam = util.getFormInputObj(ids);
            var value = $.trim($(":radio[name='addGroup_cacheModel']:checked").val());
            //addGroup_cacheModel单独处理
            jsParam.addGroup_cacheModel = value;
            jsParam.groupCategory = "7";
            jsParam.addGroup_broadcastURL = "127.0.0.1:8888";
            return jsParam;
        },
        checkCacheGroupCfgInfo: function() {
            if (this.checkGroupPassword() && this.checkBroadcastURL() && this.checkMaxSize4Store() && this.checkSingleDataMaxLength() && this.checkCacheNodeAlert() && this.checkJvmMemory() && this.checkJvmHeapAlert() && this.checkDataBackupNum() && this.checkStatisticsPath() && this.checkStatisticsSyncTime() && this.checkJvmHeapBlock() && this.checkMaxSize4Cache() && this.checkaNetworkPort() && this.checkaddTcpIPMember()) {
                return true;
            }
            return false;
        },
        groupServerCfgSubmit: function() {
            var flag = this.checkCacheGroupCfgInfo();
            var self = this;
            if (flag) {
                var inputObj = this.getCacheConfigFormInputParam();
                var serverURL = "/" + jcfManager.appName + "/server/updateJcfCacheGroupCfg.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, inputObj);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    var tipView = new GlobalView({
                        model: model
                    });
                    self.errInfoRegion.show(tipView);
                });
            }
        }
    });
    return JcfCacheGroupCfgLayout;
});

define("travsky/jcf/1.0.0/template/server/groupServerConfig_cache-debug.tpl", [], '<br/>\n<div id = "errInfoRegion"></div>\n<div id = "jcfCacheGroupCfgRegion">\n	<input type = "hidden" id = "groupName" value = "<%=groupName%>" />\n	<input type = "hidden" id = "groupId" value = "<%=groupId%>"/>\n	\n	<form class="form-horizontal"  role="form" method= "POST">\n   		<div class="form-group" id = "addGroup_groupPasswordDiv" >\n		      <label for="addGroup_groupPassword" class="col-sm-3 control-label">域密码：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_groupPassword"  value = "<%=groupPassword%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_groupPasswordTip"></span></div>\n	    </div>\n	    \n	    <!--\n	    <label for="addGroup_broadcastURL" class="col-sm-3 control-label">广播地址：</label>\n	    <span class = "text-info">(IP:端口)</span><span id = "addGroup_broadcastURLTip"></span>\n	    -->\n   		<input type="hidden" id="addGroup_broadcastURL"   value = "<%=broadcastURL%>" class="form-control input-sm"  placeholder="必填项" />\n   		\n   		\n   		\n   		<div class="form-group" id = "addGroup_maxSize4StoreDiv" >\n		      <label for="addGroup_maxSize4Store" class="col-sm-3 control-label">存储最大个数：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_maxSize4Store"  value = "<%=maxSize4Store%>"  class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_maxSize4StoreTip"></span></div>\n	    </div>\n	    \n	    <!-----------------------------新增参数开始----------------------------------->\n	    <div class="form-group" id = "addGroup_maxSize4CacheDiv" >\n		      <label for="addGroup_maxSize4Cache" class="col-sm-3 control-label">cache最大个数：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_maxSize4Cache"  value = "<%=maxSize4Cache%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_maxSize4CacheTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "addGroup_networkPortDiv" >\n		      <label for="addGroup_networkPort" class="col-sm-3 control-label">networkPort：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_networkPort"  value = "<%=networkPort%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_networkPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "addGroup_tcpIPMemberDiv" >\n		      <label for="addGroup_tcpIPMember" class="col-sm-3 control-label">tcp-ip member：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_tcpIPMember"  value = "<%=tcpIPMember%>" class="form-control input-sm"  placeholder="[10.6.148.225:8000,10.6.148.224:8000]" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_tcpIPMemberTip"></span></div>\n	    </div>\n	    <!---------------------新增参数结束--------------------------------------------->\n   		\n   		<div class="form-group" id = "addGroup_singleDataMaxLengthDiv" >\n		      <label for="addGroup_singleDataMaxLength" class="col-sm-3 control-label">单数据最大长度：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_singleDataMaxLength" value = "<%=singleDataMaxLength%>"  class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_singleDataMaxLengthTip"></span></div>\n	    </div>\n   		\n   		<div class="form-group" id = "addGroup_cacheNodeAlertDiv" >\n		      <label for="addGroup_cacheNodeAlert" class="col-sm-3 control-label">存储报警阀值：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_cacheNodeAlert"  value = "<%=cacheNodeAlert%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span class = "text-info">(个)</span><span id = "addGroup_cacheNodeAlertTip"></span></div>\n	    </div>\n   		\n   		<div class="form-group"  >\n		      <label  class="col-sm-3 control-label">CACHE类型：</label>\n		      <div class="col-sm-4">\n		      	<%if(cacheModel=="LRU"||cacheModel=="LFU"){\n		      		if(cacheModel=="LRU"){\n		      		%>\n		      		   <input type="radio"  name = "addGroup_cacheModel" checked = "checked" value = "LRU"/> LRU\n		        	   <input type="radio"  name = "addGroup_cacheModel" value = "LFU"/> LFU\n		      		<%\n		      		}else{\n		      		%>\n		      		   <input type="radio"  name = "addGroup_cacheModel"  value = "LRU"/> LRU\n		        	   <input type="radio"  name = "addGroup_cacheModel" checked = "checked" value = "LFU"/> LFU\n		      		<%\n		      		}\n		      	}else{\n		      		%>\n		      		   <input type="radio"  name = "addGroup_cacheModel" checked = "checked" value = "LRU"/> LRU\n		        	   <input type="radio"  name = "addGroup_cacheModel" value = "LFU"/> LFU\n		      		<%\n		      	}%>\n		      </div>\n		      <div></div>\n	    </div>\n   		\n   		<div class="form-group" id = "addGroup_jvmMemoryDiv" >\n		      <label for="addGroup_jvmMemory" class="col-sm-3 control-label">JVM内存：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_jvmMemory"  value = "<%=jvmMemory%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span class = "text-info">(kK,mM,gG)</span><span id = "addGroup_jvmMemoryTip"></span></div>\n	    </div>\n   		\n   		<div class="form-group" id = "addGroup_jvmHeapAlertDiv" >\n		      <label for="addGroup_jvmHeapAlert" class="col-sm-3 control-label">内存报警阀值：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_jvmHeapAlert" value = "<%=jvmHeapAlert%>"  class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span class = "text-info">(%)</span><span id = "addGroup_jvmHeapAlertTip"></span></div>\n	    </div>\n   		\n   		<div class="form-group" id = "addGroup_dataBackupNumDiv" >\n		      <label for="addGroup_dataBackupNum" class="col-sm-3 control-label">数据备份个数：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_dataBackupNum"  value = "<%=dataBackupNum%>" class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span id = "addGroup_dataBackupNumTip"></span></div>\n	    </div>\n   \n	    \n	    <input type="hidden" id="addGroup_statisticsPath" value = "<%=statisticsPath%>"  class="form-control input-sm"  placeholder="必填项" />\n   		\n   		<div class="form-group" id = "addGroup_statisticsSyncTimeDiv" >\n		      <label for="addGroup_statisticsSyncTime" class="col-sm-3 control-label">数据同步时间：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_statisticsSyncTime" value = "<%=statisticsSyncTime%>"  class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span class = "text-info">(秒)</span><span id = "addGroup_statisticsSyncTimeTip"></span></div>\n	    </div>\n   		\n   		<div class="form-group" id = "addGroup_jvmHeapBlockDiv" >\n		      <label for="addGroup_jvmHeapBlock" class="col-sm-3 control-label">内存阻塞阀值：</label>\n		      <div class="col-sm-4">\n		        <input type="text" id="addGroup_jvmHeapBlock" value = "<%=jvmHeapBlock%>"  class="form-control input-sm"  placeholder="必填项" />\n		      </div>\n		      <div><span class = "text-danger">*</span><span class = "text-info">(%)</span><span id = "addGroup_jvmHeapBlockTip"></span></div>\n	    </div>\n   	</form>\n   	\n   	 <div class="form-group">\n	      <div class="col-sm-offset-2 col-sm-10">\n	         <button type="button" id = "groupServerCfgSubmit" class="btn btn-primary">保存</button>\n	      </div>\n	 </div>\n</div>');

define("travsky/jcf/1.0.0/template/server/serverMgr4GroupLayout-debug.tpl", [], '<div>\n	<ul class="nav nav-tabs " id = "serverMgrNav">     \n		<%\n			if(((groupCategory=="1"||groupCategory=="6"||groupCategory=="7")&&jcfGroupCfgFlag=="true")||\n				groupCategory=="4"&&registryGroupCfgFlag=="true"\n			){//jcf和适配器\n		%>\n			    <li <%if(selectedPageUI=="serverGroupConfig"){%>class = \'active\'<%}%> ><a href="serverGroupConfig">服务器组配置</a></li>      \n		<%	\n			}\n		%>\n		<li <%if(selectedPageUI=="serverGroupList"){%>class = \'active\'<%}%> ><a href="serverGroupList">服务器控制</a></li>      \n	</ul>\n	<input type = "hidden" id = "hiddenGroupId" value = "<%=hiddenGroupId%>">\n</div>\n<div id = "tipInfoRegion"></div>\n<div  id = "searchRegion"></div>\n<div  id = "listRegion"></div>\n<div  id = "pagebarRegion"></div>\n<input id = "freshPage4GroupServerFlag" type = "hidden" />\n<input id = "freshPage4GroupServerUrl" type = "hidden" />');

define("travsky/jcf/1.0.0/template/server/groupServerSearch-debug.tpl", [], '<br/>\n<table width = "100%" id = "searchServerFrom">\n      <tr>\n 		<td width = "20%">\n         	<button id = "batchStartBtn" class = "btn btn-success <%if(batchOperFlag!=\'true\'){%>disabled<%}%>">启动</button>\n			<button id = "batchStopBtn" class = "btn btn-warning <%if(batchOperFlag!=\'true\'){%>disabled<%}%>">停止</button>\n			<button id = "batchForceStopBtn" class = "btn btn-danger <%if(batchOperFlag!=\'true\'){%>disabled<%}%>">强制停止</button>\n        </td>\n         <td width = "10%"></td>\n         <td width = "10%" align = "right">运行状态&nbsp;:&nbsp;</td>\n         <td width = "20%">\n         	<select id = "processStatus"  class  = "form-control input-sm">\n         		<option value="0" selected="selected">全部</option>\n         		<option value="1">启动</option>\n         		<option value="2">停止</option>\n         	</select>\n         </td>\n         <td width = "10%" align = "right">\n         	<button type="button" id = "searchGroupServer"  class="btn btn-primary <%if(queryOperFlag!=\'true\'){%>disabled<%}%>">查询</button>\n         </td>\n         <td width = "10%" align = "right">\n         	<button type="button" id = "deleteGroupBtn"  class="btn <%if(delOperFlag!=\'true\'){%>disabled<%}%> ">删除分组</button>\n         </td>\n         <td width = "*%"></td>\n      </tr>\n</table>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-11-29
 * Time: 下午03:31:47
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/pagebar_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var PagebarModel = Backbone.Model.extend({
        defaults: function() {
            return {
                prePage: "1",
                nextPage: "1",
                currentPage: "1",
                pageSize: jcfManager.defaultPageSize,
                recordCount: "0",
                pageCount: "1",
                beginPageIndex: "1",
                endPageIndex: "1"
            };
        },
        hasNext: function() {
            return this.get("pageCount") > this.get("currentPage");
        },
        hasPrevious: function() {
            return this.get("currentPage") > 1;
        }
    });
    return PagebarModel;
});

define("travsky/jcf/1.0.0/view/listTip_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    require("bs-alert-debug")($);
    var listTipTpl = require("travsky/jcf/1.0.0/template/listTip-debug.tpl");
    var ListTipView = Marionette.ItemView.extend({
        template: _.template(listTipTpl)
    });
    return ListTipView;
});

define("travsky/jcf/1.0.0/template/listTip-debug.tpl", [], '<%\n	if(succList.length>0){\n	  %>\n		<div class="alert alert-success">\n			 <button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &times;</button>\n		   <%\n			  for(var i = 0 ; i < succList.length ; i ++){\n			  %>\n				 <%=succList[i]%><br/>\n			  <%\n			}	\n		   %>\n		</div>\n	  <%\n	}\n	\n	if(errList.length>0){\n	  %>\n		<div class="alert alert-danger">\n			<button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &times;</button>\n		   <%\n			  for(var j = 0 ; j < errList.length ; j ++){\n			  %>\n				 <%=errList[j]%><br/>\n			  <%\n			}	\n		   %>\n		</div>\n	  <%\n	}\n%>');

define("travsky/jcf/1.0.0/template/server/groupServerItem-debug.tpl", [], '<td class="groupServerIdsTd">\n	<input type="checkbox" serverStatus="<%=processStatus%>" serverName="<%=serverName%>" value="<%=serverName%>"/>\n</td>\n<td><%=groupName%></td>\n<td name="serverName"><%=serverName%></td>\n<td><%=serverIp%></td>\n<td>\n	<%if(serverCategory==1){%>\n		JCF服务器\n	<%}else if (serverCategory==2){%>\n		TSI适配服务器\n	<%}else if(serverCategory==3){%>\n		上下文服务器\n	<%}else if(serverCategory==4){%>\n		<%if (registryServerCategory==1){%>\n			主服务库\n		<%}else{%>\n			备服务库\n		<%}%>\n	<%}else if (serverCategory==7){%>\n		JCFCache\n	<%}%>\n	\n</td>\n<td>\n	<%if(processStatus==1){%>\n		启动\n	<%}else if(processStatus==2){%>\n		停止\n	<%}else if(processStatus==3){%>\n		启动中...\n	<%}else if(processStatus==4){%>\n		停止中...\n	<%}else if(processStatus==44){%>\n		强停中..\n	<%}else if(processStatus==7){%>\n		查询中...\n	<%}else{%>\n		异常\n	<%}%>\n</td>\n<%if(serverCategory=="1"){\n%>\n<td class="operTd">\n	<%if(processStatus=="1"){%>\n		<%\n		   if(jcfStopFlag=="true"){\n		   %> <a href="stop">停止</a><%\n		   }else{\n		   	  %>停止<%\n		   }\n		%>\n		|\n		<%if(jcfForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%><span class = "text-info">强制停止</span><%\n		}%>\n	<%}else if(processStatus=="2"){%>\n		<%if(jcfStartFlag=="true"){\n			%><a href="start">启动</a><%\n		}else{\n			%><span class = "text-info">启动</span><%\n		}%>	\n	<% }else if (processStatus=="3"){%>\n		启动中\n	<%}else if (processStatus=="4"){%>\n		停止中|\n		<%if(jcfForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%><span class = "text-info">强制停止</span><%\n		}%>\n	<%}else if (processStatus=="44"){%>\n		<%if(jcfForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%><span class = "text-info">强制停止</span><%\n		}%>\n	<%}else{%>\n		<%if(jcfForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%><span class = "text-info">强制停止</span><%\n		}%>\n	<%}%>\n</td>\n<td class="configTd">\n	<%if((processStatus=="1"||processStatus=="2")&&(jcfConfigFlag=="true")){%>\n		<a href="<%=serverId%>" serverName="<%=serverName%>">配置</a>\n	<%}else{%>\n		<span class = "text-info">配置</span>\n	<%}%>\n</td>\n<td class="deleteTd">\n	<%if(processStatus=="1"||processStatus=="3"||processStatus=="4"||processStatus=="44"||jcfUnloadFlag!="true"){%>\n		<span class = "text-info">删除</span>\n	<%}else{%>\n		<a href="<%=serverId%>" name="<%=serverName%>" >删除</a>\n	<%}%>\n</td>\n<td class="memoryDetailTd" >\n	<%if((processStatus=="1")&&jcfMemViewFlag=="true"){%>\n		<a href="<%=serverId%>">内存查看</a>\n	<%}else{%>\n		<span class = "text-info">内存查看</span>\n	<%}%>\n</td>\n<td><%=nodeControllerPort%></td>\n\n<%\n}else if (serverCategory=="3"||serverCategory=="7"){//上下文服务器\n%>\n<td class="operTd">\n	<%if(processStatus=="1"){%>\n		<%if(contextStopFlag=="true"){\n			%><a href="stop">停止</a><%\n		}else{\n			%><span class = "text-info">停止</span><%\n		}%>\n		|\n		<%if(contextForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%><span class = "text-info">强制停止</span><%\n		}%>\n	<%}else if(processStatus=="2"){%>	\n		<%if(contextStarFlag=="true"){\n			%><a href="start">启动</a><%\n		}else{\n			%><span class = "text-info">启动</span><%\n		}%>\n	<% }else if (processStatus=="3"){%>\n		启动中\n	<%}else if (processStatus=="4"){%>\n		停止中|\n		<%if(contextForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}else if (processStatus=="44"){%>\n		<%if(contextForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}else{%>\n		<%if(contextForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}%>\n</td>\n<td class="deleteTd">\n	<%if(processStatus=="1"||processStatus=="3"||processStatus=="4"||processStatus=="44"||contextUnloadFlag!="true"){%>\n		删除\n	<%}else{%>\n		<a href="<%=serverId%>" name="<%=serverName%>" >删除</a>\n	<%}%>\n</td>\n<%\n}else if (serverCategory=="4"){\n%>\n<td class="operTd">\n	<%if(processStatus=="1"){%>\n		<%if(registryStopFlag=="true"){\n			%><a href="stop">停止</a><%\n		}else{\n			%>停止<%\n		}%>\n		|\n		<%if(registryForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}else if(processStatus=="2"){%>	\n		<%if(registryStartFlag=="true"){\n			%><a href="start">启动</a><%\n		}else{\n			%>启动<%\n		}%>\n		\n	<% }else if (processStatus=="3"){%>\n		启动中\n	<%}else if (processStatus=="4"){%>\n		停止中|\n		<%if(registryForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}else if (processStatus=="44"){%>\n		<%if(registryForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}else{%>\n		<%if(registryForceStopFlag=="true"){\n			%><a href="forceStop">强制停止</a><%\n		}else{\n			%>强制停止<%\n		}%>\n	<%}%>\n</td>\n<td class="configTd">\n	<%if((processStatus=="1"||processStatus=="2")&&(registryConfigFlag=="true")){%>\n		<a href="<%=serverId%>" serverName="<%=serverName%>">配置</a>\n	<%}else{%>\n		配置\n	<%}%>\n</td>\n<td class="deleteTd">\n	<%if(processStatus=="1"||processStatus=="3"||processStatus=="4"||processStatus=="5"||processStatus=="44"||registryUnloadFlag!="true"){%>\n		删除\n	<%}else{%>\n		<a href="<%=serverId%>" name="<%=serverName%>" >删除</a>\n	<%}%>\n</td>\n<td class="changeRegistryServerTd">\n	<%if(processStatus=="1"&&registryServerCategory=="2"&&registrySwitchFlag=="true"){%>\n		<a href="#">切换</a>\n	<%}else{%>\n		切换\n	<%}%>\n</td>\n<%\n}%>');

define("travsky/jcf/1.0.0/template/server/groupServerList-debug.tpl", [], '<table class="table table-bordered">\n	<thead>\n		<tr>\n	      	<th>\n	      		<input type="checkbox" id="groupCheckAll"/>\n	      	</th>\n	        <th>所属分组</th>\n	        <th>服务器名称</th>\n	        <th>服务器IP</th>\n	        <th>服务器类型</th>\n	        <th>当前状态</th>\n	        <th>操作</th>\n	        <%if(groupCategory!=3&&groupCategory!=7){%>\n	        	<th>配置</th>\n	        <%}%>\n	        <th>删除</th>\n	        <%if(groupCategory==1||groupCategory==6){%>\n	        	<th>内存查看</th>\n	        	<th>节点控制器Port</th>\n	        <%}%>\n	        <%if(groupCategory==4){%>\n	        	<th>切换</th>\n	        <%}%>\n		</tr>\n	</thead>\n	<tbody></tbody>\n</table>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-8
 * Time: 下午04:18:46
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverSysMemoryStatisticsLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var itemViewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsItem-debug.tpl");
    var tableViewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsList-debug.tpl");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsLayout-debug.tpl");
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsBaseInfo-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var BaseInfoView = Marionette.ItemView.extend({
        tagName: "table",
        className: "table",
        template: _.template(baseInfoTmpStr)
    });
    var RowView = Marionette.ItemView.extend({
        tagName: "tr",
        template: _.template(itemViewTemplateStr)
    });
    var ListView = Marionette.CompositeView.extend({
        template: _.template(tableViewTemplateStr),
        childView: RowView,
        childViewContainer: "tbody"
    });
    var ServerSysMemoryStatisticsLayout = Marionette.LayoutView.extend({
        template: _.template(viewTemplateStr),
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
        },
        regions: {
            baseInfoRegion: "#baseInfoRegion",
            downContentRegion: "#downContentRegion"
        },
        events: {
            "click #backBtn": "toBackPage"
        },
        showPageInfo: function() {
            var serverId = this.queryString.serverId;
            var serverURL = "/" + jcfManager.appName + "/server/monitorSystemMemory.action";
            var jsonParam = {
                serverId: serverId
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var baseModel = new Backbone.Model(data.baseInfo);
                    var baesInfoView = new BaseInfoView({
                        model: baseModel
                    });
                    self.baseInfoRegion.show(baesInfoView);
                    var collection = new Backbone.Collection(data.detailInfo);
                    self.downContentRegion.show(new ListView({
                        collection: collection
                    }));
                } else {
                    var av = new AlertView({
                        msg: data.errInfo
                    });
                    jcfManager.dialogRegion.show(av);
                    window.history.back();
                }
            });
        },
        toBackPage: function() {
            window.history.back();
        }
    });
    return ServerSysMemoryStatisticsLayout;
});

define("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsItem-debug.tpl", [], "<td><%=queueName%></td>\n<td><%=queueSize%></td>");

define("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsList-debug.tpl", [], '<table class = "table table-bordered">\n	<caption>系统内存使用情况详细列表</caption>\n	<thead>\n      <tr>\n         <th>队列名称</th>\n         <th>队列大小</th>\n      </tr>\n   </thead>\n   <tbody></tbody>\n</table>\n\n');

define("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsLayout-debug.tpl", [], '<div id = "baseInfoRegion"></div>\n<div id = "downContentRegion"></div>\n<div><button id = "backBtn" class = "btn btn-info" >返回</button></div>\n\n');

define("travsky/jcf/1.0.0/template/server/serverSysMemoryStatisticsBaseInfo-debug.tpl", [], ' <caption>基本信息:</caption>\n <thead>\n	  <tr>\n	     <th width = "20%">系统内存的总内存块数:</th>\n	     <th width = "20%"><%=allBlockNum%></th>\n	     <th width = "*%">&nbsp;</td>\n	  </tr>\n	  <tr>\n	     <th >系统内存的空闲内存块数:</th>\n	     <th><%=freeBlockNum%></th>\n	     <th >&nbsp;</td>\n	  </tr>\n </thead>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-29
 * Time: 下午05:59:33
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverMgr4ServerLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/server/serverUpdate_view-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/waiting_view-debug", "travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/server/serverMgr4ServerLayout-debug.tpl");
    var serverDetailTemplateStr = require("travsky/jcf/1.0.0/template/server/serverDetail-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var ServerUpdateView = require("travsky/jcf/1.0.0/view/server/serverUpdate_view-debug");
    var authUtil = require("travsky/jcf/1.0.0/view/server/AuthCheck4ServerUtil-debug");
    var ErrorPageView = require("travsky/jcf/1.0.0/view/errorPage_view-debug");
    //显示服务器详细信息
    var ServerDetailView = Marionette.ItemView.extend({
        template: _.template(serverDetailTemplateStr)
    });
    var ServerMgr4ServerLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            //jcf
            var jcfCfgFlag = authUtil.getJcfCfg4Single();
            var jcfUpdateFlag = authUtil.getJcfUpdate4Single();
            //registry
            var registryCfgFlag = authUtil.getRegistryCfg4Single();
            var registryUpdateFlag = authUtil.getRegistryUpdate4Single();
            //context
            var contextUpdateFlag = authUtil.getContextUpdate4Single();
            this.model.set("jcfCfgFlag", jcfCfgFlag);
            this.model.set("jcfUpdateFlag", jcfUpdateFlag);
            this.model.set("registryCfgFlag", registryCfgFlag);
            this.model.set("registryUpdateFlag", registryUpdateFlag);
            this.model.set("contextUpdateFlag", contextUpdateFlag);
            this.on("showDownContentRegion", this.showDownContentRegion);
        },
        template: _.template(viewTemplateStr),
        regions: {
            downContentRegion: "#downContentRegion"
        },
        events: {
            "click #serverMgrNav": "changeNavItem"
        },
        changeNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var curHref = $(e.target).attr("href");
            //[detailInfo],[paramCfg],[serverUpdate]
            var $curA = $(e.target);
            var $curLi = $curA.parent();
            if (!$curLi.hasClass("active")) {
                this.queryString.selectedPageUI = curHref;
                appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(this.queryString));
                $curLi.siblings().removeClass("active");
                $curLi.addClass("active");
                this.model.set("selectNavItem", curHref);
                this.showDownContentRegion();
            }
        },
        showDownContentRegion: function() {
            var btnTipInfo = "";
            var serverId = this.model.get("serverId");
            if ("paramCfg" == this.model.get("selectNavItem")) {
                btnTipInfo = "保存";
            } else if ("serverUpdate" == this.model.get("selectNavItem")) {
                btnTipInfo = "下一步";
            }
            var selectNavItem = this.model.get("selectNavItem");
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/server/searchSingleServer.action";
            var jsParam = {
                serverId: serverId
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data);
                    //data.configInfo
                    if ("detailInfo" == selectNavItem) {
                        //详细信息
                        self.downContentRegion.show(new ServerDetailView({
                            model: model
                        }));
                    } else {
                        //服务器更新
                        model.set("submitBtnInfo", btnTipInfo);
                        self.downContentRegion.show(new ServerUpdateView({
                            model: model
                        }));
                    }
                } else {
                    var ev = new ErrorPageView();
                    jcfManager.contentRegion.show(ev);
                }
            });
        }
    });
    return ServerMgr4ServerLayout;
});

define("travsky/jcf/1.0.0/template/server/serverMgr4ServerLayout-debug.tpl", [], '<div>\n	<ul class="nav nav-tabs" id = "serverMgrNav">    \n		<li  <%if("detailInfo"==selectNavItem){%>class = "active"<%}%>  ><a href = "detailInfo" >详细信息</a></li> \n		\n		<%\n			if(serverCategory=="1"||serverCategory=="7"){//jcf和适配服务器\n				if(jcfCfgFlag=="true"){\n				  %><li <%if("paramCfg"==selectNavItem){%>class = "active"<%}%> ><a href = "paramCfg" >参数配置</a></li><%\n				}\n				if(jcfUpdateFlag=="true"){\n				  %><li <%if("serverUpdate"==selectNavItem){%>class = "active"<%}%> ><a href = "serverUpdate" >服务器更新</a></li><%\n				}\n			}else if (serverCategory=="3"){//上下文服务器\n				if(contextUpdateFlag=="true"){\n				  %><li <%if("serverUpdate"==selectNavItem){%>class = "active"<%}%> ><a href = "serverUpdate" >服务器更新</a></li><%\n				}\n			}else if (serverCategory=="4"){//注册库服务器\n				if(registryCfgFlag=="true"){\n				   %><li <%if("paramCfg"==selectNavItem){%>class = "active"<%}%> ><a href = "paramCfg" >参数配置</a></li><%\n				}\n				if(registryUpdateFlag=="true"){\n				   %><li <%if("serverUpdate"==selectNavItem){%>class = "active"<%}%> ><a href = "serverUpdate" >服务器更新</a></li><%\n				}\n			}\n		%>\n	</ul>\n	<input type = "hidden" id = "hiddenServerId" value = "<%=serverId%>">\n</div>\n<div id = "downContentRegion"></div>\n\n');

define("travsky/jcf/1.0.0/template/server/serverDetail-debug.tpl", [], '<%\n	if(configInfo.serverCategory==3){\n%>\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">所属分组&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.groupNameShowUser%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器名称&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverName%></div>\n	</div>\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器类型&nbsp;:</div>\n	   <div class = "col-sm-3">上下文服务器</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器IP&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverIpShowUser%></div>\n	</div>\n	\n<%		\n	}else if (configInfo.serverCategory==4){\n%>\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务库组名&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.groupNameShowUser%></div>\n	</div>\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务库名&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverName%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务库类型&nbsp;:</div>\n	   <div class = "col-sm-3">服务库</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务库IP&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiRegistryHost%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JMX Registry端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiRegistryPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JMX Server端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiServerPort%></div>\n	</div>\n	\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">OSGI端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.sshPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">堆内存大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.java_Memory%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">永久代堆大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.java_Perm_Mem%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JVM扩展参数&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.karaf_opts%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">堆内存快照的存储文件路径&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.heapDumpPath%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志的文件名和路径&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFile%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件的自动转储&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcRotation%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件的绕接数目&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFileNum%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件的大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFileSize%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">监听端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.bindPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">注册库同步间隔&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.synchTime%>秒</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器失效超时&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.maxIdleTime%>秒</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器日志级别&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverLogLevel%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器日志类型&nbsp;:</div>\n	   <div class = "col-sm-3">\n	   	<%if(configInfo.serverLogType=="daily"){\n	   	%>按天记录<%	\n	   	}else if (configInfo.serverLogType=="roll"){\n	   	%>按大小记录<%\n	   	}else if (configInfo.serverLogType=="hoursize"){\n	   	%>按小时和大小记录<%\n	   	}else if (configInfo.serverLogType=="dailysize"){\n	   	%>按天和大小记录<%\n	   	}else {\n	   	%>其他<%\n	   	}%>\n	   </div>\n	</div>\n<%	\n	}else if (configInfo.serverCategory==7){\n%>\n\n	<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">服务器组名&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.groupNameShowUser%></div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">服务器名&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.serverName%></div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">服务器类型&nbsp;:</div>\n		   <div class = "col-sm-3">JCFCache服务器</div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">JCF服务器IP&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.rmiRegistryHost%></div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">日志级别&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.serverLogLevel%></div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">服务器日志类型&nbsp;:</div>\n		   <div class = "col-sm-3">\n		   	 	<%if(configInfo.serverLogType=="daily"){\n			   	%>按天记录<%	\n			   	}else if (configInfo.serverLogType=="roll"){\n			   	%>按大小记录<%\n			   	}else {\n			   	%><%=configInfo.serverLogType%><%\n			   	}%>\n		   </div>\n		</div>\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">统计数据同步时间(秒)&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.statisticsSyncTime%></div>\n		</div>\n		\n		\n		\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">JVM内存报警阀值(百分比)&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.jvmHeapAlert%></div>\n		</div>\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">JVM内存阻塞阀值(百分比)&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.jvmHeapBlock%></div>\n		</div>\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">存储最大个数&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.maxSize4Store%></div>\n		</div>\n		<div class = "row detailDivHight">\n		   <div class = "col-sm-3 textRight">存储报警阀值(个)&nbsp;:</div>\n		   <div class = "col-sm-3"><%=configInfo.cacheNodeAlert%></div>\n		</div>\n\n\n<%		\n	}else if (configInfo.serverCategory==1||configInfo.serverCategory==2){//jcf和adapter服务器\n%>\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器组名&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.groupNameShowUser%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器名&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverName%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器类型&nbsp;:</div>\n	   <div class = "col-sm-3">JCF服务器</div>\n	</div>\n	\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器IP&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiRegistryHost%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JMX Registry端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiRegistryPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JMX Server端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.rmiServerPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">HTTP端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.httpPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">OSGI Console端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.sshPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">堆内存大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.java_Memory%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">永久代堆大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.java_Max_Perm_Mem%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JVM扩展参数&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.karaf_opts%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">最大可分配系统内存&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.direct_mem_size%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC选项&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcoptions%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">堆内存快照的存储路径&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.heapDumpPath%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件名和路径&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFile%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志的自动转储&nbsp;:</div>\n	   <div class = "col-sm-3"><%if("-XX:+UseGCLogFileRotation"==configInfo.gcRotation){%>是<%}else{%>否<%}%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件绕接数&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFileNum%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">GC日志文件的大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.gcFileSize%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">监听端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.bindPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">负载因子&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.loadFactor%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">系统内存池大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.memoryPoolSize%>M</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">系统内存块大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.blockSize%>KB</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">发送队列大小&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.channelQueueSize%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JVM内存中的消息最大值&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.heapMessageLimit%>Byte</div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">连接并发数&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.channelConcurrent%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">连接重试次数&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.connectionRetry%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">JCF服务器通信的心跳间隔&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.heartBeatTime%>秒</div>\n	</div>\n	\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">注册库IP&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.registryIp%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">注册库端口&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.registryPort%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">注册库同步间隔&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.synchTime%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">跟踪带日志输出规则&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.auditLevelShowUser%></div>\n	</div>\n	\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器持久化队列文件存放路径&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.persistQueueFullPath%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器日志级别&nbsp;:</div>\n	   <div class = "col-sm-3"><%=configInfo.serverLogLevel%></div>\n	</div>\n	\n	<div class = "row detailDivHight">\n	   <div class = "col-sm-3 textRight">服务器日志类型&nbsp;:</div>\n	   <div class = "col-sm-3">\n	   	  	<%if(configInfo.serverLogType=="daily"){\n		   	%>按天记录<%	\n		   	}else if (configInfo.serverLogType=="roll"){\n		   	%>按大小记录<%\n		   	}else if (configInfo.serverLogType=="hoursize"){\n		   	%>按小时和大小记录<%\n		   	}else if (configInfo.serverLogType=="dailysize"){\n		   	%>按天和大小记录<%\n		   	}else {\n		   	%>其他<%\n		   	}%>\n	   </div>\n	</div>\n<%\n	}\n%>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-6
 * Time: 下午01:09:59
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/server/serverUpdate_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/server/server-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/server/serverInputCheck-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "querystring-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/waiting_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var serverUpdateTemplateStr = require("travsky/jcf/1.0.0/template/server/serverUpdate-debug.tpl");
    var ServerUtil = require("travsky/jcf/1.0.0/view/server/server-debug");
    var ServerInputCheck = require("travsky/jcf/1.0.0/view/server/serverInputCheck-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var WaitingView = require("travsky/jcf/1.0.0/view/waiting_view-debug");
    //服务器更新
    var ServerUpdateView = Marionette.ItemView.extend({
        template: _.template(serverUpdateTemplateStr),
        initialize: function() {
            $.extend(this, new ServerInputCheck());
        },
        events: {
            "click #updateContextServerInfoBtn": "updateContextServerInfo",
            "click #updateRegistryServerInfoBtn": "updateRegistryServerInfo",
            "click #updateJCFServerInfoBtn": "updateJCFServerInfo",
            "click #updateJCFCacheServerInfoBtn": "updateJCFCacheServerInfo",
            "blur #rmiRegistryPort": "checkServerManagePort4Update",
            "blur #rmiServerPort": "checkServerDeployPort4Update",
            "blur #httpPort": "checkHttpPort4Update",
            "blur #sshPort": "checkSshPort4Update",
            "blur #java_Memory": "checkjava_Memory",
            "blur #java_Max_Perm_Mem": "checkjava_Max_Perm_Mem",
            //java_Perm_Mem
            "blur #java_Perm_Mem": "checkjava_Max_Perm_Mem",
            "blur #direct_mem_size": "checkdirect_mem_size",
            "blur #gcFileNum": "checkgcFileNum",
            "blur #gcFileSize": "checkgcFileSize",
            "blur #bindPort": "checkBindPort4Update",
            "blur #loadFactor": "checkloadfactor",
            "blur #memoryPoolSize": "checkMemoryPoolSize",
            "blur #blockSize": "checkBlockSize",
            "blur #heapMessageLimit": "checkHeapMessageLimit",
            "blur #channelQueueSize": "checkchannelQueueSize",
            "blur #channelConcurrent": "checkchannelConcurrent",
            "blur #connectionRetry": "checkconnectionRetry",
            "blur #heartBeatTime": "checkheartBeatTime",
            "blur #messageBodyLimit": "checkmessageBodyLimit",
            "change #registryIp": "getRegistryBindPort",
            "blur #registryPort": "checkserverport",
            "blur #synchTime": "checksynchtime",
            "blur #maxIdleTime": "checkMaxidletime",
            "blur #persistQueueFullPath": "checkpersistQueueFullPath",
            "change #registryIp": "getRegistryBindPort",
            "blur #statisticsSyncTime": "checkStatisticsSyncTime",
            "blur #statisticsPath": "checkStatisticsPath",
            "blur #jvmHeapAlert": "checkJvmHeapAlert",
            "blur #jvmHeapBlock": "checkJvmHeapBlock",
            "blur #maxSize4Store": "checkMaxSize4Store",
            //maxSize4Store//checkCacheNodeMaxCount
            "blur #cacheNodeAlert": "checkCacheNodeAlert"
        },
        updateContextServerInfo: function(e) {
            //上下文服务器更新操作//只有更新不存在参数配置
            e.stopPropagation();
            e.preventDefault();
            var $btn = $(e.target);
            var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
            var formIds = [ "serverId", "serverCategory", "serverName", "rmiRegistryHost" ];
            var formInputObj = util.getFormInputObj(formIds);
            var flag = this.checkContextFormSubmit();
            var modelName = sidbarUtil.getModuleName();
            var serverId = formInputObj.serverId;
            if (flag) {
                var cv = new ConfirmView();
                cv.model.set("msg", "确定更新？");
                jcfManager.dialogRegion.show(cv);
                cv.confirm(function(myflag) {
                    if (myflag) {
                        $btn.addClass("disabled");
                        var wv = new WaitingView();
                        jcfManager.dialogRegion.show(wv);
                        formInputObj.ynStart = "start";
                        var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                        $.when(ajaxing).done(function(data) {
                            jcfManager.dialogRegion.empty();
                            if (data.flag == "true") {
                                util.alertEsg("保存信息成功!", "true");
                                var jString = {
                                    serverId: serverId
                                };
                                appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                    trigger: true
                                });
                            } else {
                                $btn.removeClass("disabled");
                                var av = new AlertView();
                                av.model.set("msg", "更新失败!");
                                jcfManager.dialogRegion.show(av);
                            }
                        });
                    }
                });
            }
        },
        updateRegistryServerInfo: function(e) {
            //注册库服务器更新
            e.stopPropagation();
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var btnText = $(e.target).text();
            var formValidFlag = this.checkRegistryFormSubmit();
            //注册库表单ip数组
            var formIds = [ "serverId", "groupName", "serverName", "serverCategory", "rmiRegistryHost", "rmiRegistryPort", "rmiServerPort", "sshPort", "java_Memory", "java_Perm_Mem", "karaf_opts", "heapDumpPath", "gcFile", "gcRotation", "gcFileNum", "gcFileSize", "bindPort", "synchTime", "maxIdleTime", "serverLogLevel", "serverLogType" ];
            var $btn = $(e.target);
            var formInputObj = util.getFormInputObj(formIds);
            var serverId = formInputObj.serverId;
            if (formValidFlag) {
                if ("保存" == btnText) {
                    //修改配置时服务器状态不能为启动状态
                    var serverURL = "/" + jcfManager.appName + "/server/updateServerConfig.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                    $btn.addClass("disabled");
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            util.alertEsg("保存信息成功!", "true");
                            var jString = {
                                serverId: serverId
                            };
                            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                trigger: true
                            });
                        } else {
                            //$btn.removeClass("disabled") ;
                            var av = new AlertView();
                            av.model.set("msg", "保存信息失败!");
                            jcfManager.dialogRegion.show(av);
                        }
                    });
                } else if ("下一步" == btnText) {
                    //更新服务器时不检查服务器状态
                    var flag2 = this.checkServerStatus();
                    if (flag2) {
                        var cv = new ConfirmView();
                        cv.model.set("msg", "确定更新？");
                        jcfManager.dialogRegion.show(cv);
                        cv.confirm(function(myflag) {
                            if (myflag) {
                                var wv = new WaitingView();
                                jcfManager.dialogRegion.show(wv);
                                $btn.addClass("disabled");
                                var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
                                formInputObj.ynStart = "start";
                                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                                $.when(ajaxing).done(function(data) {
                                    jcfManager.dialogRegion.empty();
                                    if (data.flag == "true") {
                                        util.alertEsg("保存信息成功!", "true");
                                        var jString = {
                                            serverId: serverId
                                        };
                                        appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                            trigger: true
                                        });
                                    } else {
                                        $btn.removeClass("disabled");
                                        var av = new AlertView();
                                        av.model.set("msg", "更新失败!");
                                        jcfManager.dialogRegion.show(av);
                                    }
                                });
                            }
                        });
                    }
                }
            }
        },
        updateJCFCacheServerInfo: function(e) {
            //更新jcfCache服务器
            e.stopPropagation();
            e.preventDefault();
            var $btn = $(e.target);
            var modelName = sidbarUtil.getModuleName();
            var btnText = $(e.target).text();
            var formValidFlag = this.checkJcfCacheFormSubmit();
            var formIds = [ "serverId", "serverName", "jvmMemory4Cache", "serverCategory", "rmiRegistryHost", "serverLogLevel", "serverLogType", "statisticsSyncTime", "statisticsPath", "jvmHeapAlert", "jvmHeapBlock", "maxSize4Store", "cacheNodeAlert", "groupNameText" ];
            var formInputObj = util.getFormInputObj(formIds);
            formInputObj.serverLogType4Cache = formInputObj.serverLogType;
            var serverId = formInputObj.serverId;
            if (formValidFlag) {
                if ("保存" == btnText) {
                    $btn.addClass("disabled");
                    var serverURL = "/" + jcfManager.appName + "/server/updateServerConfig.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            util.alertEsg("保存信息成功!", "true");
                            var jString = {
                                serverId: serverId
                            };
                            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                trigger: true
                            });
                        } else {
                            $btn.removeClass("disabled");
                            util.alertEsg("保存信息失败!");
                        }
                    });
                } else if ("下一步" == btnText) {
                    var flag2 = this.checkServerStatus();
                    if (flag2) {
                        //检查服务器是否处于停止状态
                        if (confirm("确定更新？")) {
                            $btn.addClass("disabled");
                            var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
                            formInputObj.ynStart = "start";
                            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                            $.when(ajaxing).done(function(data) {
                                if (data.flag == "true") {
                                    util.alertEsg("更新成功!", "true");
                                    var jString = {
                                        serverId: serverId
                                    };
                                    appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                        trigger: true
                                    });
                                } else {
                                    $btn.removeClass("disabled");
                                    util.alertEsg("更新失败!");
                                }
                            });
                        }
                    }
                }
            }
        },
        updateJCFServerInfo: function(e) {
            //jcf服务器更新
            e.stopPropagation();
            e.preventDefault();
            var $btn = $(e.target);
            var modelName = sidbarUtil.getModuleName();
            var btnText = $(e.target).text();
            var formValidFlag = this.checkJCFServerFormSubmit();
            //注册库表单ip数组
            var formIds = [ "serverId", "groupName", "serverName", "serverCategory", "rmiRegistryHost", "rmiRegistryPort", "rmiServerPort", "httpPort", "sshPort", "java_Memory", "java_Max_Perm_Mem", "karaf_opts", "direct_mem_size", "gcoptions", "heapDumpPath", "gcFile", "gcRotation", "gcFileNum", "gcFileSize", "bindPort", "loadFactor", "memoryPoolSize", "blockSize", "heapMessageLimit", "channelQueueSize", "channelConcurrent", "connectionRetry", "heartBeatTime", "messageBodyLimit", "registryIp", "registryPort", "synchTime", "auditLevel", "persistQueueFullPath", "serverLogLevel", "serverLogType" ];
            var formInputObj = util.getFormInputObj(formIds);
            var serverId = formInputObj.serverId;
            if (formValidFlag) {
                if ("保存" == btnText) {
                    $btn.addClass("disabled");
                    var serverURL = "/" + jcfManager.appName + "/server/updateServerConfig.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            util.alertEsg("保存成功!", "true");
                            var jString = {
                                serverId: serverId
                            };
                            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                trigger: true
                            });
                        } else {
                            $btn.removeClass("disabled");
                            var av = new AlertView();
                            av.model.set("msg", "保存信息失败!");
                            jcfManager.dialogRegion.show(av);
                        }
                    });
                } else if ("下一步" == btnText) {
                    var flag2 = this.checkServerStatus();
                    if (flag2) {
                        var cv = new ConfirmView();
                        cv.model.set("msg", "确定更新？");
                        jcfManager.dialogRegion.show(cv);
                        cv.confirm(function(myflag) {
                            if (myflag) {
                                $btn.addClass("disabled");
                                var wv = new WaitingView();
                                jcfManager.dialogRegion.show(wv);
                                var serverURL = "/" + jcfManager.appName + "/server/addOrUpdateServer.action";
                                formInputObj.ynStart = "start";
                                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formInputObj);
                                $.when(ajaxing).done(function(data) {
                                    jcfManager.dialogRegion.empty();
                                    if (data.flag == "true") {
                                        util.alertEsg("更新成功!", "true");
                                        var jString = {
                                            serverId: serverId
                                        };
                                        appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                                            trigger: true
                                        });
                                    } else {
                                        $btn.removeClass("disabled");
                                        var av = new AlertView();
                                        av.model.set("msg", "更新失败!");
                                        jcfManager.dialogRegion.show(av);
                                    }
                                });
                            }
                        });
                    }
                }
            }
        },
        checkContextFormSubmit: function() {
            //检查上下文服务器是否符合提交表单要求
            var flag = this.checkServerStatus();
            return flag;
        },
        checkRegistryFormSubmit: function() {
            //检查注册库服务器表单数据正确性
            if (this.checkServerManagePort4Update() && this.checkServerDeployPort4Update() && this.checkSshPort4Update() && //
            this.checkBindPort4Update() && this.checkjava_Memory() && this.checkjava_Perm_Mem() && //
            this.checksynchtime() && this.checkMaxidletime()) {
                return true;
            }
            return false;
        },
        checkJCFServerFormSubmit: function() {
            //jcf服务器和adapter服务器相同
            if (this.checkServerManagePort4Update() && this.checkServerDeployPort4Update() && this.checkHttpPort4Update() && this.checkSshPort4Update() && //
            this.checkBindPort4Update() && this.checkloadfactor() && this.checkMemoryPoolSize() && this.checkBlockSize() && //
            this.checkHeapMessageLimit() && this.checkchannelQueueSize() && this.checkchannelConcurrent() && this.checkconnectionRetry() && //
            this.checkheartBeatTime() && this.checkmessageBodyLimit() && this.checksynchtime() && this.checkserviceip() && //
            this.checkserverport() && this.checkjava_Memory() && this.checkjava_Perm_Mem()) {
                //
                return true;
            }
            return false;
        },
        checkJcfCacheFormSubmit: function() {
            if (this.checkStatisticsSyncTime() && this.checkStatisticsPath() && this.checkJvmHeapAlert() && this.checkJvmHeapBlock() && this.checkMaxSize4Store() && this.checkCacheNodeAlert()) {
                return true;
            } else {
                return false;
            }
        },
        checkServerStatus: function() {
            //检查服务器的状态
            var serverName = $("#serverName").val();
            var serverIp = $("#rmiRegistryHost").val();
            //服务器ip其实就是注册库IP一样
            var ajaxParam = {
                serverName: serverName,
                serverIp: serverIp
            };
            var serverURL = "/" + jcfManager.appName + "/server/checkUpdateServer.action";
            var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, ajaxParam);
            var flag = false;
            $.when(ajaxing).done(function(result) {
                if (result.isCanBeUpdate == "false") {
                    var av = new AlertView();
                    av.model.set("msg", "服务器非停止或更新状态,禁止更新!");
                    jcfManager.dialogRegion.show(av);
                    //alert("服务器非停止或更新状态,禁止更新!");
                    flag = false;
                } else if (result.isCanBeUpdate == "true") {
                    flag = true;
                } else {
                    var av = new AlertView();
                    av.model.set("msg", "请确保节点控制器正常运行!");
                    jcfManager.dialogRegion.show(av);
                    //alert("请确保节点控制器正常运行!");
                    flag = false;
                }
            });
            return flag;
        }
    });
    return ServerUpdateView;
});

define("travsky/jcf/1.0.0/template/server/serverUpdate-debug.tpl", [], '<%\n   if(configInfo.serverCategory==3){//上下文服务器\n%>\n	<input type="hidden" id="serverId"  value="<%=configInfo.serverId%>"></input>\n	<input type="hidden" id="serverCategory" value="<%=configInfo.serverCategory%>" />\n	<input type="hidden" id="serverName"   value="<%=configInfo.serverName%>" />\n	<input type="hidden" id="rmiRegistryHost" value="<%=configInfo.serverIpShowUser%>" />\n	\n	<div class="form-group">\n	  <div class="col-sm-10">\n	     <button type="button" id = "updateContextServerInfoBtn" class="btn btn-primary">下一步</button>\n	  </div>\n	</div>\n<%\n   }else if (configInfo.serverCategory==4){//注册库\n%>\n	<br/>\n	<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n		<input type="hidden" id="serverId"  value="<%=configInfo.serverId%>"></input>\n		<div class="form-group" >\n		    <label for="groupNameShow" class="col-sm-3 control-label">服务库组名：</label>\n		    <div class="col-sm-4">\n		      	<input  type="text" id="groupNameShow" value = "<%=configInfo.groupNameShowUser%>"  class="form-control input-sm" readonly="readonly"  />\n		      	<input  type="hidden" id="groupName" value = "<%=configInfo.groupName%>" />\n		    </div>\n	    </div>\n	    \n		<div class="form-group" id = "serverNameDiv" >\n		    <label for="serverNameShow" class="col-sm-3 control-label">服务库名：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverNameShow"  value = "<%=configInfo.serverName%>" class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="serverName"  value = "<%=configInfo.serverName%>" />\n		    </div>\n	    </div>\n	    \n		<div class="form-group" id = "serverCategoryDiv" >\n		    <label for="serverCategoryShow" class="col-sm-3 control-label">服务库类型：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverCategoryShow" value = "服务库"  class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="serverCategory" value = "<%=configInfo.serverCategory%>" />\n		    </div>\n	    </div>\n	    \n		<div class="form-group" id = "rmiRegistryHostDiv" >\n		    <label for="rmiRegistryHostShow" class="col-sm-3 control-label">服务库IP：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="rmiRegistryHostShow" value = "<%=configInfo.rmiRegistryHost%>"  class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="rmiRegistryHost" value = "<%=configInfo.rmiRegistryHost%>" />\n		    </div>\n	    </div>\n	    \n	   <div class="form-group" id = "rmiRegistryPortDiv" >\n	      <label for="rmiRegistryPort" class="col-sm-3 control-label">JMX Registry端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="rmiRegistryPort"  value = "<%=configInfo.rmiRegistryPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	         <input type="hidden" id="orgirmiRegistryPort"  value = "<%=configInfo.rmiRegistryPort%>"  >\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "rmiRegistryPortTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "rmiServerPortDiv">\n	      <label for="rmiServerPort" class="col-sm-3 control-label">JMX Server端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="rmiServerPort"  value = "<%=configInfo.rmiServerPort%>" class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	         <input type="hidden" id="orgirmiServerPort"  value = "<%=configInfo.rmiServerPort%>" >\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "rmiServerPortTip" ></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "sshPortDiv" >\n	      <label for="sshPort" class="col-sm-3 control-label">OSGI Console端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="sshPort"  value = "<%=configInfo.sshPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	         <input type="hidden" id="orgisshPort"  value = "<%=configInfo.sshPort%>"  >\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "sshPortTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "java_MemoryDiv" >\n	      <label for="java_Memory" class="col-sm-3 control-label">堆内存大小：</label>\n	      <div class="col-sm-4 ">\n	         <input type="text" id="java_Memory" value = "<%=configInfo.java_Memory%>"   class="form-control input-sm" value="1536M"  placeholder="单位为kK,mM,gG">\n	      </div>\n	      <div><span>(单位:kK,mM,gG)</span><span id = "java_MemoryTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "java_Perm_MemDiv" >\n	      <label for="java_Perm_Mem" class="col-sm-3 control-label">永久代堆大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="java_Perm_Mem"  value = "<%=configInfo.java_Perm_Mem%>"  class="form-control input-sm"  placeholder="单位为kK,mM,gG">\n	      </div>\n	      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "java_Perm_MemTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "karaf_optsDiv" >\n	      <label for="karaf_opts" class="col-sm-3 control-label">JVM扩展参数：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="karaf_opts" value = "<%=configInfo.karaf_opts%>"  class="form-control input-sm"  placeholder="配置的JVM参数超过系统内存值后将导致错误">\n	      </div>\n	      <div><span id = "karaf_optsTip"></span></div>\n	   </div>\n	   \n	   \n	   \n	   \n	   \n	   \n	   <div class="form-group" id = "heapDumpPathDiv" >\n	      <label for="heapDumpPath" class="col-sm-3 control-label">堆内存快照的存储文件路径：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="heapDumpPath"  value = "<%=configInfo.heapDumpPath%>"  class="form-control input-sm"  placeholder="">\n	      </div>\n	      <div><span id = "heapDumpPathTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "gcFileDiv" >\n	      <label for="gcFile" class="col-sm-3 control-label">GC日志的文件名和路径：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFile" value = "<%=configInfo.gcFile%>"   class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n	      </div>\n	      <div><span id = "gcFileTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "gcRotationDiv" >\n	      <label for="gcRotation" class="col-sm-3 control-label">GC日志自动转储：</label>\n	      <div class="col-sm-4">\n	      	 <select id="gcRotation"  class="form-control input-sm" placeholder="JDK 7版本开始兼容">\n				<%\n	      	 	 if(configInfo.gcRotation=="-XX:+UseGCLogFileRotation"){\n	      	 	 %>\n	      	 	 	<option selected = "selected"  value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option value="" >false</option>\n	      	 	 <%\n	      	 	 }else if(""==configInfo.gcRotation) {\n	      	 	 %>\n	      	 	 	<option value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option selected = "selected" value="" selected="selected">false</option>\n	      	 	 <%\n	      	 	 }\n	      	 	%>\n			 </select>\n	      </div>\n	       <div><span id = "gcRotationTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "gcFileNumDiv" >\n	      <label for="gcFileNum" class="col-sm-3 control-label">GC日志绕接数目：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFileNum"  value = "<%=configInfo.gcFileNum%>"  class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n	      </div>\n	      <div><span id = "gcFileNumTip"></span></div>\n	   </div>\n	    \n	   <div class="form-group" id = "gcFileSizeDiv" >\n	      <label for="gcFileSize" class="col-sm-3 control-label">GC日志大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFileSize"  value = "<%=configInfo.gcFileSize%>"  class="form-control input-sm"  placeholder="单位为k,K,m,M,g,G">\n	      </div>\n	      <div><span>(单位:k,K,m,M,g,G)&nbsp;</span><span id = "gcFileSizeTip"></span></div>\n	   </div> \n	   \n	   <div class="form-group" id = "bindPortDiv" >\n	      <label for="bindPort" class="col-sm-3 control-label">监听端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="bindPort"  value = "<%=configInfo.bindPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字" />\n	         <input type="hidden" id="orgibindPort"  value = "<%=configInfo.bindPort%>" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "bindPortTip"></span></div>\n	   </div>\n	   \n	   \n	   \n	   \n	   \n	   \n	     \n	   <div class="form-group" id = "synchTimeDiv" >\n	      <label for="synchTime" class="col-sm-3 control-label">注册库同步间隔：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="synchTime" value = "<%=configInfo.synchTime%>"   class="form-control input-sm" value="5" placeholder="必填项，单位：秒（s）" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span>(单位：秒(s))&nbsp;</span><span id = "synchTimeTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "maxIdleTimeDiv" >\n	      <label for="maxIdleTime" class="col-sm-3 control-label">JCF服务器失效超时：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="maxIdleTime" value = "<%=configInfo.maxIdleTime%>"   class="form-control input-sm" value="180" placeholder="必填项，单位：秒（s）" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span>(单位：秒(s))&nbsp;</span><span  id = "maxIdleTimeTip" ></span></div>\n	   </div>\n	   \n	   \n	   \n	   \n	   <div class="form-group" id = "serverLogLevelDiv" >\n	      <label for="serverLogLevel" class="col-sm-3 control-label">服务日志级别：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogLevel" class="form-control input-sm" >\n	         	 <%\n	         	  for(var i = 0 ; i < serverLogLevels.length ;i ++){\n	         	    var curll = serverLogLevels[i] ;\n	         		if(curll==configInfo.serverLogLevel){\n	         		%>\n	         			<option selected = "selected" value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}else {\n	         		%>\n	         			<option  value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}\n	         	  }\n	         	%>\n	         </select>\n	      </div>\n	   </div>\n	   \n	   <div class="form-group" id = "serverLogTypeDiv" >\n	      <label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogType" class="form-control input-sm" >\n	         	<%\n	         	  for(var i = 0 ; i < serverLogTypeList.length ;i ++){\n	         	  	var curlt = serverLogTypeList[i] ;\n	         		if(curlt.key==configInfo.serverLogType){\n	         		%>\n	         			<option selected = "selected"  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n	         		<%\n	         		}else {\n	         		%>\n	         			<option  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n	         		<%\n	         		}\n	         	  }\n	         	%>\n	         </select>\n	      </div>\n	   </div>\n	   \n	   \n	</form>\n	\n	<div class="form-group">\n	  <div class="col-sm-offset-2 col-sm-10">\n	     <button type="button" id = "updateRegistryServerInfoBtn"  class="btn btn-primary"><%=submitBtnInfo%></button>\n	  </div>\n	</div>\n<%   \n   }else if(configInfo.serverCategory==7){\n   	%>\n   	 <form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n   	 	<input type = "hidden" id = "jvmMemory4Cache" value = "<%=configInfo.jvmMemory4Cache%>"/>\n		<input id="serverId" type="hidden" value="<%=configInfo.serverId%>"></input>\n		<input id="groupNameText" type="hidden" value="<%=configInfo.groupNameShowUser%>"></input>\n		 <div class="form-group" >\n		    <label for="groupNameShow" class="col-sm-3 control-label">JCF服务器组名：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="groupNameShow" value = "<%=configInfo.groupNameShowUser%>"  class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="groupName" value = "<%=configInfo.groupName%>"  />\n		    </div>\n	    </div>\n	    \n		<div class="form-group"  >\n		    <label for="serverNameShow" class="col-sm-3 control-label">JCF服务器名：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverNameShow" value = "<%=configInfo.serverName%>" class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="serverName" value = "<%=configInfo.serverName%>"  />\n		    </div>\n	    </div>\n	    \n		<div class="form-group" >\n		    <label for="serverCategoryShow" class="col-sm-3 control-label">JCF服务器类型：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverCategoryShow" value = "JCF服务器" class="form-control input-sm" readonly="readonly"  />\n		   	  <input  type="hidden" id="serverCategory" value = "<%=configInfo.serverCategory%>"  />\n		    </div>\n	    </div>\n	    \n	    <div class="form-group" id = "rmiRegistryHostDiv" >\n		    <label for="rmiRegistryHostShow" class="col-sm-3 control-label">JCF服务器IP：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="rmiRegistryHostShow" value = "<%=configInfo.rmiRegistryHost%>" class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="rmiRegistryHost" value = "<%=configInfo.rmiRegistryHost%>"  />\n		    </div>\n	    </div>\n	    \n	    <div class="form-group" id = "serverLogLevelDiv" >\n	      <label for="serverLogLevel" class="col-sm-3 control-label">服务日志级别：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogLevel" class="form-control input-sm" >\n	         	<%\n	         	  for(var i = 0 ; i < serverLogLevels.length ;i ++){\n	         	    var curll = serverLogLevels[i] ;\n	         		if(curll==configInfo.serverLogLevel){\n	         		%>\n	         			<option selected = "selected" value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}else {\n	         		%>\n	         			<option  value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}\n	         	  }\n	         	%>\n	         </select>\n	      </div>\n	     </div>\n	     \n	     <div class="form-group" id = "serverLogTypeDiv" >\n	      <label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogType" class="form-control input-sm" >\n	         	<option value="daily" <%if(configInfo.serverLogType==\'daily\'){%>selected="selected"<%}%>>按天记录</option>\n				<option value="roll" <%if(configInfo.serverLogType==\'roll\'){%>selected="selected"<%}%>>按大小记录</option>\n	         </select>\n	      </div>\n	    </div>\n	    \n	   <div class="form-group" id = "statisticsSyncTimeDiv" >\n	      <label for="statisticsSyncTime" class="col-sm-3 control-label">统计数据同步时间：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="statisticsSyncTime" value = "<%=configInfo.statisticsSyncTime%>"  class="form-control input-sm" value="60"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span class= "text-info">(单位:秒(s))</span><span id = "statisticsSyncTimeTip"></span></div>\n	   </div>\n	   \n	   <!--监控文件目标路径隐藏-->\n	   <input type="hidden" id="statisticsPath" value = "<%=configInfo.statisticsPath%>"  class="form-control input-sm" value="../monitor/"  placeholder="">\n	   <!--监控文件目标路径隐藏-->\n	   \n	   \n	   <div class="form-group" id = "jvmHeapAlertDiv" >\n	      <label for="jvmHeapAlert" class="col-sm-3 control-label">JVM内存报警阈值(百分比)：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="jvmHeapAlert" value = "<%=configInfo.jvmHeapAlert%>"  class="form-control input-sm" value="60"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "jvmHeapAlertTip"></span></div>\n	   </div>\n	   \n	   \n	   <div class="form-group" id = "jvmHeapBlockDiv" >\n	      <label for="jvmHeapBlock" class="col-sm-3 control-label">JVM内存阻塞阈值(百分比)：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="jvmHeapBlock" value = "<%=configInfo.jvmHeapBlock%>"  class="form-control input-sm" value="85"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "jvmHeapBlockTip"></span></div>\n	   </div>\n	   \n	   \n	   <div class="form-group" id = "maxSize4StoreDiv" >\n	      <label for="maxSize4Store" class="col-sm-3 control-label">存储最大个数：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="maxSize4Store" value = "<%=configInfo.maxSize4Store%>"  class="form-control input-sm" value="1000"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "maxSize4StoreTip"></span></div>\n	   </div>\n	   \n	   <div class="form-group" id = "cacheNodeAlertDiv" >\n	      <label for="cacheNodeAlert" class="col-sm-3 control-label">存储报警阈值(个)：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="cacheNodeAlert"  value = "<%=configInfo.cacheNodeAlert%>" class="form-control input-sm" value="600"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "cacheNodeAlertTip"></span></div>\n	   </div>\n	    \n	  </form>  \n	<div class="form-group">\n	  <div class="col-sm-offset-2 col-sm-10">\n	     <button type="button" id = "updateJCFCacheServerInfoBtn" class="btn btn-primary"><%=submitBtnInfo%></button>\n	  </div>\n	</div>\n		\n   	<%\n   }else if(configInfo.serverCategory==1||configInfo.serverCategory==2){\n%>\n	<br/>\n	<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n		<input id="serverId" type="hidden" value="<%=configInfo.serverId%>"></input>\n		 <div class="form-group" >\n		    <label for="groupNameShow" class="col-sm-3 control-label">JCF服务器组名：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="groupNameShow" value = "<%=configInfo.groupNameShowUser%>"  class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="groupName" value = "<%=configInfo.groupName%>"  />\n		    </div>\n	    </div>\n	    \n		<div class="form-group"  >\n		    <label for="serverNameShow" class="col-sm-3 control-label">JCF服务器名：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverNameShow" value = "<%=configInfo.serverName%>" class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="serverName" value = "<%=configInfo.serverName%>"  />\n		    </div>\n	    </div>\n	    \n		<div class="form-group" >\n		    <label for="serverCategoryShow" class="col-sm-3 control-label">JCF服务器类型：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="serverCategoryShow" value = "JCF服务器" class="form-control input-sm" readonly="readonly"  />\n		   	  <input  type="hidden" id="serverCategory" value = "<%=configInfo.serverCategory%>"  />\n		    </div>\n	    </div>\n	    \n	    <div class="form-group" id = "rmiRegistryHostDiv" >\n		    <label for="rmiRegistryHostShow" class="col-sm-3 control-label">JCF服务器IP：</label>\n		    <div class="col-sm-4">\n		      <input  type="text" id="rmiRegistryHostShow" value = "<%=configInfo.rmiRegistryHost%>" class="form-control input-sm" readonly="readonly"  />\n		      <input  type="hidden" id="rmiRegistryHost" value = "<%=configInfo.rmiRegistryHost%>"  />\n		    </div>\n	    </div>\n	    \n	    \n	    <div class="form-group" id = "rmiRegistryPortDiv" >\n	       <label for="rmiRegistryPort" class="col-sm-3 control-label">JMX Registry端口：</label>\n	       <div class="col-sm-4">\n	         <input type="text" id="rmiRegistryPort" value = "<%=configInfo.rmiRegistryPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	         <input type="hidden" id="orgirmiRegistryPort" value = "<%=configInfo.rmiRegistryPort%>" >\n	       </div>\n	       <div><span class = "text-danger">*</span><span id = "rmiRegistryPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "rmiServerPortDiv">\n	      <label for="rmiServerPort" class="col-sm-3 control-label">JMX Server端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="rmiServerPort" value = "<%=configInfo.rmiServerPort%>" class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	      	 <input type="hidden" id="orgirmiServerPort" value = "<%=configInfo.rmiServerPort%>" >\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "rmiServerPortTip" ></span></div>\n	    </div>\n	    \n	    <div class="form-group" id= "httpPortDiv" >\n	       <label for="httpPort" class="col-sm-3 control-label">HTTP端口：</label>\n	       <div class="col-sm-4">\n	          <input type="text" id="httpPort"  value = "<%=configInfo.httpPort%>" class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	       	  <input type="hidden" id="orgihttpPort" value = "<%=configInfo.httpPort%>" >\n	       </div>\n	       <div><span class = "text-danger">*</span><span id = "httpPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "sshPortDiv" >\n	      <label for="sshPort" class="col-sm-3 control-label">OSGI Console端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="sshPort"  value = "<%=configInfo.sshPort%>" class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	      	 <input type="hidden" id="orgisshPort" value = "<%=configInfo.sshPort%>" >\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "sshPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "java_MemoryDiv" >\n	      <label for="java_Memory" class="col-sm-3 control-label">堆内存大小：</label>\n	      <div class="col-sm-4 ">\n	         <input type="text" id="java_Memory"  value = "<%=configInfo.java_Memory%>" class="form-control input-sm" value="1536M"  placeholder="单位为kK,mM,gG">\n	      </div>\n	      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "java_MemoryTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "java_Max_Perm_MemDiv" >\n	      <label for="java_Max_Perm_Mem" class="col-sm-3 control-label">永久代堆大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="java_Max_Perm_Mem"  value = "<%=configInfo.java_Max_Perm_Mem%>" class="form-control input-sm"  placeholder="单位为kK,mM,gG">\n	      </div>\n	      <div><span>(单位:kK,mM,gG)&nbsp;</span><span id = "java_Max_Perm_MemTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "karaf_optsDiv" >\n	      <label for="karaf_opts" class="col-sm-3 control-label">JVM扩展参数：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="karaf_opts" value = "<%=configInfo.karaf_opts%>" class="form-control input-sm"  placeholder="配置的JVM参数超过系统内存值后将导致错误">\n	      </div>\n	      <div><span id = "karaf_optsTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "direct_mem_sizeDiv" >\n	      <label for="direct_mem_size" class="col-sm-3 control-label">最大可分配系统内存：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="direct_mem_size" value = "<%=configInfo.direct_mem_size%>" class="form-control input-sm"  placeholder="不建议配置">\n	      </div>\n	      <div><span class = "text-info">(单位:kK,mM,gG)&nbsp;</span><span id = "direct_mem_sizeTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "gcoptionsDiv" >\n	      <label for="gcoptions" class="col-sm-3 control-label">GC选项：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcoptions" value = "<%=configInfo.gcoptions%>" class="form-control input-sm"  placeholder="">\n	      </div>\n	      <div><span id = "gcoptionsTip"></span></div>\n	    </div>\n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    <div class="form-group" id = "heapDumpPathDiv" >\n	      <label for="heapDumpPath" class="col-sm-3 control-label">堆内存快照的存储文件路径：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="heapDumpPath" value = "<%=configInfo.heapDumpPath%>"  class="form-control input-sm"  placeholder="">\n	      </div>\n	      <div><span id = "heapDumpPathTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "gcFileDiv" >\n	      <label for="gcFile" class="col-sm-3 control-label">GC日志的文件名和路径：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFile"  value = "<%=configInfo.gcFile%>" class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n	      </div>\n	      <div><span id = "gcFileTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "gcRotationDiv" >\n	       <label for="gcRotation" class="col-sm-3 control-label">GC日志自动转储：</label>\n	       <div class="col-sm-4">\n	      	 <select id="gcRotation"  class="form-control input-sm" placeholder="JDK 7版本开始兼容">\n	      	 	<%\n	      	 	 if(configInfo.gcRotation=="-XX:+UseGCLogFileRotation"){\n	      	 	 %>\n	      	 	 	<option selected = "selected"  value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option value="" >false</option>\n	      	 	 <%\n	      	 	 }else if(""==configInfo.gcRotation){\n	      	 	 %>\n	      	 	 	<option value="-XX:+UseGCLogFileRotation">true</option>\n	      	 	 	<option selected = "selected" value="" selected="selected">false</option>\n	      	 	 <%\n	      	 	 }\n	      	 	%>\n			 </select>\n	       </div>\n	       <div><span id = "gcRotationTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "gcFileNumDiv" >\n	      <label for="gcFileNum" class="col-sm-3 control-label">GC日志绕接数目：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFileNum"  value = "<%=configInfo.gcFileNum%>" class="form-control input-sm"  placeholder="JDK 7版本开始兼容">\n	      </div>\n	      <div><span id = "gcFileNumTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "gcFileSizeDiv" >\n	      <label for="gcFileSize" class="col-sm-3 control-label">GC日志大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="gcFileSize" value = "<%=configInfo.gcFileSize%>"  class="form-control input-sm"  placeholder="单位为k,K,m,M,g,G">\n	      </div>\n	      <div><span>(单位:kK,mM,gG)</span><span id = "gcFileSizeTip"></span></div>\n	    </div>\n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    <div class="form-group" id = "bindPortDiv" >\n	      <label for="bindPort" class="col-sm-3 control-label">监听端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="bindPort" value = "<%=configInfo.bindPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字" />\n	         <input type="hidden" id="orgibindPort" value = "<%=configInfo.bindPort%>" />\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "bindPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "loadFactorDiv">\n	      <label for="loadFactor" class="col-sm-3 control-label">负载均衡因子：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="loadFactor" value = "<%=configInfo.loadFactor%>" class="form-control input-sm" value="1"  placeholder="必填项,正整数">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "loadFactorTip"></span></div>\n	    </div>\n	   \n	    <div class="form-group" id = "memoryPoolSizeDiv" >\n	      <label for="memoryPoolSize" class="col-sm-3 control-label">系统内存池的大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="memoryPoolSize"  value = "<%=configInfo.memoryPoolSize%>" class="form-control input-sm" value="0"  placeholder="必填项目，单位：M">\n	      </div>\n	      <div><span class = "text-danger">*</span><span>(单位:M)&nbsp;</span><span  id = "memoryPoolSizeTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "blockSizeDiv" >\n	      <label for="blockSize" class="col-sm-3 control-label">系统内存块大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="blockSize" value = "<%=configInfo.blockSize%>" class="form-control input-sm"  value="8" placeholder="必填项，单位：KB">\n	      </div>\n	      <div><span class = "text-danger">*</span><span>(单位:KB)&nbsp;</span><span id = "blockSizeTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "heapMessageLimitDiv" >\n	      <label for="heapMessageLimit" class="col-sm-3 control-label">JVM内存中消息体最大值：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="heapMessageLimit" value = "<%=configInfo.heapMessageLimit%>"  class="form-control input-sm" value="-1" placeholder="必填项，单位：Byte">\n	      </div>\n	      <div><span class = "text-danger">*</span><span>(单位:Byte)&nbsp;</span><span id = "heapMessageLimitTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "channelQueueSizeDiv" >\n	      <label for="channelQueueSize" class="col-sm-3 control-label">发送队列大小：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="channelQueueSize" value = "<%=configInfo.channelQueueSize%>"  class="form-control input-sm" value="2048"  placeholder="必填项">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "channelQueueSizeTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "channelConcurrentDiv" >\n	      <label for="channelConcurrent" class="col-sm-3 control-label">连接并发数：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="channelConcurrent" value = "<%=configInfo.channelConcurrent%>"  class="form-control input-sm"  value="2" placeholder="必填项">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "channelConcurrentTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "connectionRetryDiv" >\n	      <label for="connectionRetry" class="col-sm-3 control-label">链接重试次数：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="connectionRetry"  value = "<%=configInfo.connectionRetry%>" class="form-control input-sm"  value="3" placeholder="必填项">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "connectionRetryTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "heartBeatTimeDiv" >\n	      <label for="heartBeatTime" class="col-sm-3 control-label">JCF服务器通信的心跳间隔：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="heartBeatTime"  value = "<%=configInfo.heartBeatTime%>" class="form-control input-sm" value="30"  placeholder="必填项，单位：秒（s）">\n	      </div>\n	      <div><span class = "text-danger">*</span><span>单位：秒(s)&nbsp;</span><span id = "heartBeatTimeTip"></span></div>\n	    </div>\n	    \n	    \n	    <input type="hidden" id="messageBodyLimit"  value = "<%=configInfo.messageBodyLimit%>" />\n	    \n	    \n	    <div class="form-group" id = "registryIpDiv" >\n	      <label for="registryIp" class="col-sm-3 control-label">注册库IP：</label>\n	      <div class="col-sm-4">\n	         <select id = "registryIp" class="form-control input-sm">\n	         	<%\n	         		for(var i= 0 ; i < nodeIpList.length ; i ++){\n	         			var curVo = nodeIpList[i] ;\n	         			var curIp = curVo.serverIp ;\n	         			if(curIp==configInfo.registryIp){\n	         			%>\n	         				<option selected = "selected" value = "<%=curVo.serverIp%>" ><%=curVo.serverIp%></option>\n	         			<%\n	         			}else{\n	         			%>\n	         				<option value = "<%=curVo.serverIp%>" ><%=curVo.serverIp%></option>\n	         			<%\n	         			}\n	         		}\n	         	%>\n	         </select>\n	      </div>\n	    </div>\n	    \n	    <div class="form-group" id = "registryPortDiv" >\n	      <label for="registryPort" class="col-sm-3 control-label">注册库端口：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="registryPort" value = "<%=configInfo.registryPort%>"  class="form-control input-sm"  placeholder="必填项，【1024~65535】之间数字">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "registryPortTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "synchTimeDiv" >\n	      <label for="synchTime" class="col-sm-3 control-label">注册库同步间隔：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="synchTime"  value = "<%=configInfo.synchTime%>"   class="form-control input-sm" value="5" placeholder="必填项，单位：秒（s）">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "synchTimeTip"></span></div>\n	    </div>\n	    \n	    \n	    \n	    \n	    \n	    \n	    \n	    <div class="form-group" id = "auditLevelDiv" >\n	      <label for="auditLevel" class="col-sm-3 control-label">跟踪带日志输出规则：</label>\n	      <div class="col-sm-4">\n	      	 <select id="auditLevel" class="form-control input-sm" >\n	      	 	<%for(var i = 0 ; i < tracLogKeyList.length ; i ++){\n	      	 		if(configInfo.auditLevel==""){\n	      	 			if(i==0){\n			      	 		%><option selected = "selected" value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n			      	 	}else{\n			      	 		%><option value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n			      	 	}\n	      	 		}else {\n	      	 			if(configInfo.auditLevel==tracLogKeyList[i]){\n	      	 				%><option selected = "selected" value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n	      	 			}else{\n	      	 				%><option  value="<%=tracLogKeyList[i]%>"><%=tracLogValueList[i]%></option><%\n	      	 			}\n	      	 		}\n	      	 	}%>\n			 </select>\n	      </div>\n	   </div>\n	    \n	    \n	    <div class="form-group" id = "persistQueueFullPathDiv" >\n	      <label for="persistQueueFullPath" class="col-sm-3 control-label">服务器持久化队列文件保存路径：</label>\n	      <div class="col-sm-4">\n	         <input type="text" id="persistQueueFullPath" value = "<%=configInfo.persistQueueFullPath%>"  class="form-control input-sm" value="/opt/applog/jcf/"  placeholder="">\n	      </div>\n	      <div><span class = "text-danger">*</span><span id = "persistQueueFullPathTip"></span></div>\n	    </div>\n	    \n	    <div class="form-group" id = "serverLogLevelDiv" >\n	      <label for="serverLogLevel" class="col-sm-3 control-label">服务日志级别：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogLevel" class="form-control input-sm" >\n	         	<%\n	         	  for(var i = 0 ; i < serverLogLevels.length ;i ++){\n	         	    var curll = serverLogLevels[i] ;\n	         		if(curll==configInfo.serverLogLevel){\n	         		%>\n	         			<option selected = "selected" value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}else {\n	         		%>\n	         			<option  value = "<%=curll%>" ><%=curll%></option>\n	         		<%\n	         		}\n	         	  }\n	         	%>\n	         </select>\n	      </div>\n	    </div>\n	    \n	    <div class="form-group" id = "serverLogTypeDiv" >\n	      <label for="serverLogType" class="col-sm-3 control-label">服务器日志类型：</label>\n	      <div class="col-sm-4">\n	         <select id = "serverLogType" class="form-control input-sm" >\n	         	<%\n	         	  for(var i = 0 ; i < serverLogTypeList.length ;i ++){\n	         	  	var curlt = serverLogTypeList[i] ;\n	         		if(curlt.key==configInfo.serverLogType){\n	         		%>\n	         			<option selected = "selected"  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n	         		<%\n	         		}else {\n	         		%>\n	         			<option  value = "<%=curlt.key%>" ><%=curlt.value%></option>\n	         		<%\n	         		}\n	         	  }\n	         	%>\n	         </select>\n	      </div>\n	    </div>\n	    \n	    \n	    \n	</form>\n	<div class="form-group">\n	  <div class="col-sm-offset-2 col-sm-10">\n	     <button type="button" id = "updateJCFServerInfoBtn" class="btn btn-primary"><%=submitBtnInfo%></button>\n	  </div>\n	</div>\n<%   \n   }\n%>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-27
 * Time: 上午10:28:01
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/waiting_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "bs-modal-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    require("bs-modal-debug")($);
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/waiting-debug.tpl");
    var WaitingView = Marionette.ItemView.extend({
        initialize: function() {},
        template: _.template(viewTemplateStr),
        onShow: function() {
            var alr = $("#ycj-waiting");
            alr.modal({
                backdrop: "static"
            });
            alr.modal("show");
        }
    });
    return WaitingView;
});

define("travsky/jcf/1.0.0/template/waiting-debug.tpl", [], ' <div id="ycj-waiting" class="modal">\n    <div class="modal-dialog modal-sm">\n      <div class="modal-content">\n        <div class="modal-header">\n          <h5 class="modal-title"><i class="fa fa-exclamation-circle"></i>提示:</h5>\n        </div>\n        <div class="modal-body small">\n          <p><span class = "text-info">操作进行中,请耐心等待.....</span></p>\n        </div>\n        <div class="modal-footer" >\n        </div>\n      </div>\n    </div>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-13
 * Time: 下午05:21:10
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/deployMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/deploy/deployList_view-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/deployMgrLayout-debug.tpl");
    var DeployListView = require("travsky/jcf/1.0.0/view/deploy/deployList_view-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var authUtil = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var DeployMgrLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            var uploadAppAuthFlag = authUtil.getUploadAppFlag();
            this.model.set("uploadAppAuthFlag", uploadAppAuthFlag);
            this.on("showAllAppUI", this.to_showAllAppUI);
            this.on("updateAppUI", this.to_updateAppUI);
        },
        template: _.template(layoutTmpStr),
        tagName: "div",
        regions: {
            downContentRegion: "#downContentRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #deployMgrNav li a": "clickNavItem"
        },
        clickNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var valStr = $(e.target).attr("href");
            var $curLi = $(e.target).parent();
            var $ul = $curLi.parent();
            if (!$curLi.hasClass("active")) {
                $ul.find("li").removeClass("active");
                $curLi.addClass("active");
                if ("showAllAppUI" == valStr) {
                    //查看应用部署页面
                    this.queryString.selectedPageUI = "showAllAppUI";
                    this.queryString.currentPage = "1";
                    this.queryString.changePageFlag = "";
                    appRouter.navigate("deployMgr/param/selectedPageUI=showAllAppUI");
                    this.to_showAllAppUI();
                } else if ("updateAppUI" == valStr) {
                    //上传应用页面
                    this.queryString.selectedPageUI = "updateAppUI";
                    this.queryString.currentPage = "1";
                    this.queryString.changePageFlag = "";
                    appRouter.navigate("deployMgr/param/selectedPageUI=updateAppUI");
                    this.to_updateAppUI();
                }
            }
        },
        onShow: function() {
            //初始化页面
            var selectedUI = this.queryString.selectedPageUI;
            this.trigger("" + selectedUI);
        },
        to_updateAppUI: function() {
            var DeployUploadLayout = require("travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug");
            var deployUploadLayout = new DeployUploadLayout({
                queryString: this.queryString
            });
            this.pagebarRegion.empty();
            this.downContentRegion.show(deployUploadLayout);
            deployUploadLayout.trigger("showPageInfo");
        },
        to_showAllAppUI: function() {
            var currentPage = this.queryString.currentPage;
            var pageSize = this.queryString.pageSize;
            if (currentPage == undefined) {
                this.queryString.currentPage = "1";
                currentPage = 1;
                this.queryString.pageSize = jcfManager.defaultPageSize;
                pageSize = jcfManager.defaultPageSize;
            }
            var collection = new Backbone.Collection();
            var listView = new DeployListView({
                collection: collection
            });
            this.downContentRegion.show(listView);
            var jsonParam = {
                currentPage: currentPage,
                pageSize: pageSize
            };
            var serverURL = "/" + jcfManager.appName + "/deployMgr/searchAllAppInfo.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    collection.set(data.pageBean.recordList);
                    var pbModel = new Backbone.Model(data.pageBean);
                    var pbview = new PagebarView({
                        model: pbModel,
                        queryString: self.queryString
                    });
                    self.pagebarRegion.show(pbview);
                } else {
                    alert("查询出错!");
                }
            });
        }
    });
    return DeployMgrLayout;
});

define("travsky/jcf/1.0.0/template/deploy/deployMgrLayout-debug.tpl", [], '<div>\n	<ul class="nav nav-tabs" id = "deployMgrNav">\n		<li <%if(selectedPageUI=="showAllAppUI"){%>class = "active"<%} %> ><a href="showAllAppUI">查看应用部署</a></li>\n		<%if(uploadAppAuthFlag=="true"){\n			%><li <%if(selectedPageUI=="updateAppUI"){%>class = "active"<%} %> ><a href="updateAppUI" >上传应用</a></li><%\n		}%>\n	</ul>\n</div>\n<br/>\n<div id = "downContentRegion"></div>\n<div id = "pagebarRegion"></div>\n\n\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-13
 * Time: 下午05:40:22
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/deployList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var itemTemplateStr = require("travsky/jcf/1.0.0/template/deploy/deployItem-debug.tpl");
    var DeployItemView = Marionette.ItemView.extend({
        template: _.template(itemTemplateStr),
        tagName: "tr"
    });
    var listTemplateStr = require("travsky/jcf/1.0.0/template/deploy/deployList-debug.tpl");
    var DeployListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTemplateStr),
        childView: DeployItemView,
        childViewContainer: "tbody"
    });
    return DeployListView;
});

define("travsky/jcf/1.0.0/template/deploy/deployItem-debug.tpl", [], "<td><%=name%></td>\n<td><%=groupName%></td>\n<td><%=version%></td>\n<td><%=uploadDate%></td>");

define("travsky/jcf/1.0.0/template/deploy/deployList-debug.tpl", [], "<thead>\n  <tr>\n    <th>应用名称</th>\n    <th>分组名称</th>\n    <th>版本号</th>\n    <th>最后更新时间</th>\n  </tr>\n</thead>\n<tbody></tbody>\n\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-21
 * Time: 下午05:12:52
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    //------------------------------index页面开始-------------------------------------------------------
    AuthCheckUtil.getUploadAppFlag = function() {
        //是否有上传应用的权限
        var jmm = jcfManager.authModel;
        var code = "3_2_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------index页面结束-------------------------------------------------------
    //------------------------------group操作页面开始----------------------------------------------------
    AuthCheckUtil.getDeployFlag = function() {
        //是否可点击部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUndeployFlag = function() {
        //是否可点击反部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_3";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getChageVersionFlag = function() {
        //是否可点击反部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getRolebackFlag = function() {
        //是否可点击反部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_5";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------group操作页面结束----------------------------------------------------
    //------------------------------新建部署页面开始------------------------------------------------------
    AuthCheckUtil.getAppLogOperFlag = function() {
        //填写应用日志  ‘点击应用按钮’权限
        var jmm = jcfManager.authModel;
        var code = "7_2_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------新建部署页面结束------------------------------------------------------
    //------------------------------server操作页面开始------------------------------------------------------------
    AuthCheckUtil.getDeploy4ServerFlag = function() {
        //单个服务器的部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUndeploy4ServerFlag = function() {
        //单个服务器的反部署按钮
        var jmm = jcfManager.authModel;
        var code = "3_2_3";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------server操作页面结束------------------------------------------------------------
    //------------------------------组配置页面开始--------------------------------------------------------
    AuthCheckUtil.getUploadCfgFlag = function() {
        //上传配置文件
        var jmm = jcfManager.authModel;
        var code = "3_2_7";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getDownloadCfgFlag = function() {
        //下载配置文件
        var jmm = jcfManager.authModel;
        var code = "3_2_8";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------组配置页面结束--------------------------------------------------------
    //------------------------------tab页开始-------------------------------------------
    AuthCheckUtil.getCreateNewDeployFlag = function() {
        var jmm = jcfManager.authModel;
        var code = "3_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------tab页结束-------------------------------------------
    return AuthCheckUtil;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-13
 * Time: 下午08:24:30
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layouTmpStr = require("travsky/jcf/1.0.0/template/deploy/deployUploadLayout-debug.tpl");
    //待上传应用itemview模版
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/uploadItem-debug.tpl");
    //待上传应用listview模版
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/uploadList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var curPathTmpStr = "<%=currentPath%>";
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    //当前目录
    var CurrentPathView = Marionette.ItemView.extend({
        tagName: "span",
        template: _.template(curPathTmpStr)
    });
    //待上传应用itemview
    var AppItemView = Marionette.ItemView.extend({
        tagName: "tr",
        className: "listPageTr",
        template: _.template(itemTmpStr)
    });
    //待上传应用listview
    var AppListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTmpStr),
        childView: AppItemView,
        childViewContainer: "tbody"
    });
    //已上传应用itemview模版
    var item4AlreadyUploadTmpStr = require("travsky/jcf/1.0.0/template/deploy/upload4AlreadyUploadItem-debug.tpl");
    //已上传应用listview模版
    var list4AlreadyUploadTmpStr = require("travsky/jcf/1.0.0/template/deploy/upload4AlreadyUploadList-debug.tpl");
    //已上传应用itemview
    var App4AlreadyUploadItemView = Marionette.ItemView.extend({
        tagName: "tr",
        template: _.template(item4AlreadyUploadTmpStr),
        events: {
            click: "highlightName"
        },
        highlightName: function(e) {
            this.$el.toggleClass("warning");
        }
    });
    //已上传应用listview
    var App4AlreadyUploadListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(list4AlreadyUploadTmpStr),
        tagName: "table",
        className: "table table-bordered list",
        childView: App4AlreadyUploadItemView,
        childViewContainer: "tbody"
    });
    var DeployUploadLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            this.on("showPageInfo", this.showPageInfo);
        },
        template: _.template(layouTmpStr),
        regions: {
            currentFilePathRegion: "#currentFilePathRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion",
            alreadyUploadAppRegion: "#alreadyUploadAppRegion",
            showTipInfoRegion: "#showTipInfoRegion"
        },
        events: {
            "click #backParentFilePathBtn": "backParentFilePath",
            "click #uploadAppBtn": "uploadApp",
            "click .listPageTr td span.file_dir_icon": "goToChildFilePath",
            "click .listPageTr td input:radio[name='selectedAppName']": "clickAppRadio",
            "click .alreadyUploadAppClearTd a": "clearApp"
        },
        clearApp: function(e) {
            if (confirm("确定清除?")) {
                var $a = $(e.target);
                var appId = $a.attr("appId");
                var appStatus = $a.attr("appStatus");
                var serverURL = "/" + jcfManager.appName + "/deployMgr/clearApp.action";
                var jsonParam = {
                    appId: appId,
                    appStatus: appStatus
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var self = this;
                var tipModel = new ListTipModel();
                $.when(ajaxing).done(function(data) {
                    if (data.flag) {
                        tipModel.set("succList", [ "清除成功!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                        var cc = null;
                        self.uploadedAppCollection.each(function(m) {
                            var str = m.get("id");
                            if (str == appId) {
                                self.uploadedAppCollection.remove(m);
                                return;
                            }
                        });
                    } else {
                        tipModel.set("errList", [ "清除应用失败!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    }
                });
            }
        },
        clickAppRadio: function(e) {
            //点击文件前面的radio时
            e.stopPropagation();
            var $curRadio = $(e.target);
            $("#uploadAppName").val($curRadio.val());
            $("#uploadAppName").attr("title", $curRadio.attr("title"));
            this.showTipInfoRegion.empty();
            this.findUploadedApp($(e.target).val());
        },
        findUploadedApp: function(path) {
            var serverURL = "/" + jcfManager.appName + "/deployMgr/ajaxSearchUploadedApp.action";
            var jsonParam = {
                appPath: path
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                var collection = new Backbone.Collection(data.appInfoList);
                //将已上传的app保存到当前当前layout中
                self.uploadedAppCollection = collection;
                self.alreadyUploadAppRegion.show(new App4AlreadyUploadListView({
                    collection: collection
                }));
            });
        },
        uploadApp: function() {
            //点击上传应用button
            var path = $("#uploadAppName").val();
            var title = $("#uploadAppName").attr("title");
            var self = this;
            var tipModel = new ListTipModel();
            if (path == null || path == "") {
                tipModel.set("errList", [ "请选择应用包！" ]);
                var tipView = new ListTipView({
                    model: tipModel
                });
                self.showTipInfoRegion.show(tipView);
            } else {
                var curCollection = this.uploadedAppCollection;
                var count = 0;
                var continueFlag = true;
                curCollection.each(function(c) {
                    //遍历已上传的所有应用
                    count++;
                    //bar包全名称
                    var var_tmp = c.get("name") + "_" + c.get("version") + ".bar";
                    var appStatus = c.get("appStatus");
                    if (title == var_tmp) {
                        //如果应用名称相同
                        if (appStatus == 2 || appStatus == 3 || appStatus == 10) {
                            //如果包为部署失败的bar这可覆盖
                            if (!confirm("同名同版本的bar包已上传，是否要覆盖?")) {
                                continueFlag = false;
                            }
                        } else {
                            continueFlag = false;
                            tipModel.set("errList", [ "该包已部署，不能上传覆盖!" ]);
                            var tipView = new ListTipView({
                                model: tipModel
                            });
                            self.showTipInfoRegion.show(tipView);
                        }
                    }
                });
                if (continueFlag) {
                    if (count >= 3) {
                        tipModel.set("errList", [ "该应用包已上传三个版，不能再上传，请先进行清除！" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    }
                    if (!confirm("确定上传应用包" + path + "?")) {
                        return;
                    }
                } else {
                    return;
                }
                var serverURL = "/" + jcfManager.appName + "/deployMgr/mUploadFile.action";
                var jsonParam = {
                    appPath: path
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        tipModel.set("succList", [ "上传成功!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                        self.findUploadedApp(path);
                    } else {
                        //上传成功的话
                        tipModel.set("errList", [ "上传失败!" + data.msg ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    }
                });
            }
        },
        backParentFilePath: function() {
            //点击返回上层目录按钮
            var operPathCode = "parentPath";
            this.queryString.changePageFlag = "false";
            this.queryString.currentPage = "1";
            appRouter.navigate("deployMgr/param/" + QueryString.stringify(this.queryString));
            this.showDirList(operPathCode);
        },
        goToChildFilePath: function(e) {
            //点击文件夹，进入子目录//通过点进入
            e.stopPropagation();
            e.preventDefault();
            var $curDir = $(e.target);
            var pathCode = $curDir.attr("pathCode");
            this.queryString.changePageFlag = "false";
            this.queryString.currentPage = "1";
            this.showDirList(pathCode);
        },
        showPageInfo: function() {
            //首次进入初始化默认目录
            var operPathCode = "defaultPath";
            if (this.queryString.currentPage == undefined || this.queryStringcurrentPage == "") {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            this.showDirList(operPathCode);
        },
        showDirList: function(operPathCode) {
            //清空应用路径文本框
            this.alreadyUploadAppRegion.empty();
            $("#uploadAppName").val("");
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mAccessDir.action";
            var jsonParam = {
                operPathCode: operPathCode,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize,
                changePageFlag: this.queryString.changePageFlag
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                //显示当前目录...
                var model01 = new Backbone.Model({
                    currentPath: data.currentPath
                });
                var curPathView = new CurrentPathView({
                    model: model01
                });
                self.currentFilePathRegion.show(curPathView);
                //显示所有文件列表...
                var collection = new Backbone.Collection(data.pageBean.recordList);
                self.listRegion.show(new AppListView({
                    collection: collection
                }));
                //显示分页栏条...
                var model = new Backbone.Model(data.pageBean);
                self.queryString.selectedPageUI = "updateAppUI";
                //应用上传
                self.queryString.changePageFlag = "true";
                appRouter.navigate("deployMgr/param/" + QueryString.stringify(self.queryString));
                self.pagebarRegion.show(new PagebarView({
                    model: model,
                    queryString: self.queryString
                }));
            }).fail(function() {
                alert("根目录");
            });
        }
    });
    return DeployUploadLayout;
});

define("travsky/jcf/1.0.0/template/deploy/deployUploadLayout-debug.tpl", [], '<div id = "showTipInfoRegion"></div>\n<div class = "row">\n		<div class = "col-sm-2 text-right"><label class="control-label">应用路径:</label></div>\n		<div class = "col-sm-3"><input type="text" id="uploadAppName"  readonly="readonly" class="form-control"  placeholder="必填项" /></div>\n		<div class = "col-sm-1"><button type="submit" id = "uploadAppBtn"  class="btn btn-default">上传</button></div>\n</div>\n\n<hr/>\n<div class = "row">\n   <div class = "col-sm-2 text-right"><button type="button" id = "backParentFilePathBtn" class="btn btn-default">上层目录</button></div>\n   <div class = "col-sm-2 text-right"><label class="control-label">当前目录:</label></div>\n   <div class = "col-sm-6"><div id = "currentFilePathRegion"></div></div>\n</div>\n\n<br/>\n<div id = "listRegion" ></div><!--显示列表区域-->\n<div id = "pagebarRegion" ></div><!--显示分页栏条区域-->\n<div id = "alreadyUploadAppRegion" ></div><!--显示已上传引用区域-->\n<br/>');

define("travsky/jcf/1.0.0/template/deploy/uploadItem-debug.tpl", [], '<td>\n	<%\n	 if("文件"==category){\n	%>\n		<input type="radio" name = "selectedAppName" title = "<%=name%>"  value = "<%=path%>" >\n	<%\n	 }\n	%>\n</td>\n<td><%if("文件夹"==category){\n		%>\n			<span class = "file_dir_icon myhand" pathCode = "<%=pathCode%>"><%=name%><span>\n		<%\n	 }else if ("文件"==category){\n	 	%>\n			<span class = "file_file_icon"><%=name%><span>\n		<%\n	 }%>\n</td>\n<td><%=category%></td>');

define("travsky/jcf/1.0.0/template/deploy/uploadList-debug.tpl", [], "<thead>\n	<tr>\n		<th></th>\n		<th>名称</th>\n		<th>类型</th>\n	</tr>\n</thead>\n<tbody>	\n</tbody>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-29
 * Time: 下午03:53:20
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/listTip_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ListTipModel = Backbone.Model.extend({
        defaults: function() {
            return {
                succList: [],
                errList: []
            };
        },
        urlRoot: ""
    });
    return ListTipModel;
});

define("travsky/jcf/1.0.0/template/deploy/upload4AlreadyUploadItem-debug.tpl", [], '<td><%=name%></td>\n<td><%=groupName%></td>\n<td><%=version%></td>\n<td><%=userName%></td>\n<td><%=uploadDate%></td>\n<td>\n	<%\n		if(appStatus==1){\n		%>已部署<%\n		}else if (appStatus=="2"){\n		%>部署失败<%\n		}else if (appStatus=="3"){\n		%>已反部署<%\n		}else if (appStatus=="4"){\n		%>反部署失败<%\n		}else if (appStatus=="5"){\n		%>已回滚<%\n		}else if(appStatus=="6"){\n		%>回滚失败<%\n		}else if (appStatus=="7"){\n		%>正在部署<%\n		}else if (appStatus=="8"){\n		%>正在反部署<%\n		}else if (appStatus=="8"){\n		%>正在回滚<%\n		}else if(appStatus=="10"){\n		%>未部署<%\n		}else{\n		%>状态不一致<%\n		}\n	%>\n</td>\n<td>\n	<%if(isDefaultVersion=="TRUE"){\n	%><span class = "text-success">是</span><%\n	}else if (isDefaultVersion=="FALSE"){\n	%><span class = "text-warning">否</span><%\n	}else{\n	%><span class = "text-danger">状态不一致</span><%\n	}%>\n</td>\n<td class = "alreadyUploadAppClearTd">	\n	<%\n		if(appStatus=="2"||appStatus=="3"||appStatus=="10"){\n		%><a class = "clearAppBtn myhand" appId = "<%=id%>" appStatus ="<%=appStatus%>" >清除应用</a><%\n		}else{\n		%>清除应用<%\n		}\n	%>\n</td>');

define("travsky/jcf/1.0.0/template/deploy/upload4AlreadyUploadList-debug.tpl", [], "<caption>已上传应用版本:</caption>\n<thead>\n	<tr>\n		<th>应用名称</th>\n		<th>组名称</th>\n		<th>版本</th>\n		<th>上传用户</th>\n		<th>上传时间</th>\n		<th>部署状态</th>\n		<th>是否默认版</th>\n		<th>清除应用</th>\n	</tr>\n</thead>\n<tbody>	\n</tbody>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-16
 * Time: 下午05:37:52
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupDeployMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabAppMgr-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug", "travsky/jcf/1.0.0/view/deploy/rollback_view-debug", "travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/collection/deploy/groupApp_collection-debug", "travsky/jcf/1.0.0/model/deploy/groupApp_model-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug", "travsky/jcf/1.0.0/view/waiting_view-debug", "travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug", "travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug", "ajaxfileupload-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabCreateNewDeploy-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployTabServerDeployInfo-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployMgrLayout-debug.tpl");
    var QueryString = require("querystring-debug");
    var AppMgrTabLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployTabAppMgr-debug");
    var CreateNewDeployTabLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployTabCreateNewDeploy-debug");
    var ServerDeployInfoTabLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployTabServerDeployInfo-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var GroupDeployMgrLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            var createNewDeployAuthFlag = authCheck.getCreateNewDeployFlag();
            this.model.set("createNewDeployAuthFlag", createNewDeployAuthFlag);
            this.on("queryAndShowPageInfo", this.queryAndShowPageInfo);
        },
        template: _.template(viewTemplateStr),
        regions: {
            downContentRegion: "#downContentRegion"
        },
        events: {
            "click #groupDeployMgrNav li a": "clickNavItem"
        },
        clickNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var valStr = $(e.target).attr("href");
            var $curLi = $(e.target).parent();
            var $ul = $curLi.parent();
            if (!$curLi.hasClass("active")) {
                $ul.find("li").removeClass("active");
                $curLi.addClass("active");
                this.queryString.selectedPageUI = valStr;
                this.queryString.currentPage = "1";
                appRouter.navigate("deployMgr/group/param/" + QueryString.stringify(this.queryString));
                this.queryAndShowPageInfo();
            }
        },
        queryAndShowPageInfo: function() {
            var selectItem = this.queryString.selectedPageUI;
            var self = this;
            if (selectItem == undefined) {
                selectItem = "showAllAppUI";
                this.queryString.selectedPageUI = selectItem;
            }
            if ("showAllAppUI" == selectItem) {
                //应用管理
                var status = this.queryString.status;
                if (status == undefined || status == null || status == "") {
                    this.queryString.status = "0";
                }
                var groupId = this.queryString.groupId;
                var model = new Backbone.Model({
                    status: this.queryString.status,
                    groupId: groupId
                });
                var appMgrTabLayout = new AppMgrTabLayout({
                    model: model,
                    queryString: this.queryString
                });
                this.downContentRegion.show(appMgrTabLayout);
                appMgrTabLayout.trigger("searchListInfo");
            } else if ("createNewDeployUI" == selectItem) {
                //新建部署
                var serverUrl = "/" + jcfManager.appName + "/deployMgr/toCreateNewDeployUI.action";
                var ajaxing = util.dealAjaxRequestWithoutParam(serverUrl);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    var createNewDeployTabLayout = new CreateNewDeployTabLayout({
                        model: model,
                        queryString: self.queryString
                    });
                    self.downContentRegion.show(createNewDeployTabLayout);
                    createNewDeployTabLayout.trigger("searchListInfo");
                });
            } else if ("showServerDeployInfoUI" == selectItem) {
                //服务器部署情况
                var serverDeployInfoTabLayout = new ServerDeployInfoTabLayout({
                    queryString: this.queryString
                });
                this.downContentRegion.show(serverDeployInfoTabLayout);
                serverDeployInfoTabLayout.trigger("searchListInfo");
            }
        }
    });
    return GroupDeployMgrLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupDeployMgrLayout-debug.tpl", [], '<ul class="nav nav-tabs" id = "groupDeployMgrNav">\n	<li <%if("showAllAppUI"==selectedPageUI){%>class = "active"<%}%>><a href="showAllAppUI">应用管理</a></li>\n	<%if(createNewDeployAuthFlag=="true"){\n	   %>\n		 <li <%if("createNewDeployUI"==selectedPageUI){%>class = "active"<%}%>><a href="createNewDeployUI" >新建部署</a></li>\n	   <%\n	}%>\n	<li <%if("showServerDeployInfoUI"==selectedPageUI){%>class = "active"<%}%>><a href="showServerDeployInfoUI" >服务器部署情况</a></li>\n</ul>\n<br/>\n<div id = "downContentRegion"></div>\n<input type = "hidden" id = "groupDeploy4GroupIdHidden" value = "<%=groupId%>"/>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-20
 * Time: 下午01:19:08
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupDeployTabAppMgr-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug", "travsky/jcf/1.0.0/view/deploy/rollback_view-debug", "travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/collection/deploy/groupApp_collection-debug", "travsky/jcf/1.0.0/model/deploy/groupApp_model-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug", "travsky/jcf/1.0.0/view/waiting_view-debug", "travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug", "travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug", "ajaxfileupload-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployAppMgrItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployAppMgrList-debug.tpl");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployTabAppMgr-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    var RollBackLayout = require("travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug");
    var GroupAppCollection = require("travsky/jcf/1.0.0/collection/deploy/groupApp_collection-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    //多条错误信息显示
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ItemTipView = require("travsky/jcf/1.0.0/view/itemTip_view-debug");
    //单条错误信息显示
    var WaitingView = require("travsky/jcf/1.0.0/view/waiting_view-debug");
    //点击详细信息
    var GroupServerAppStatusLayout = require("travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug");
    var GroupAppCongfigLayout = require("travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug");
    var ItemView = Marionette.ItemView.extend({
        initialize: function() {
            var groupId = $("#groupDeploy4GroupIdHidden").val();
            this.model.set("groupId", groupId);
            var authDeployFlag = authCheck.getDeployFlag();
            var authUndeployFlag = authCheck.getUndeployFlag();
            var authChageVersionFlag = authCheck.getChageVersionFlag();
            var authRollbackFlag = authCheck.getRolebackFlag();
            this.model.set("authDeployFlag", authDeployFlag);
            this.model.set("authUndeployFlag", authUndeployFlag);
            this.model.set("authChageVersionFlag", authChageVersionFlag);
            this.model.set("authRollbackFlag", authRollbackFlag);
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(itemTmpStr),
        tagName: "tr",
        events: {
            "click button.change2Default": "change2DefaultVersion",
            "click button.change2NoDefault": "change2NoDefaultVersion",
            "click td.undeployAppTd a": "undeployApp",
            "click td.showGroupCfgInfoTd a": "showGroupCfgInfo",
            "click td.rollbackVersionTd a": "rollbackVersion",
            "click td.groupAppDetailTd a": "viewAppDetail4Group"
        },
        viewAppDetail4Group: function(e) {
            //查看详情
            e.preventDefault();
            var $a = $(e.target);
            var appId = this.model.get("appId");
            var groupId = this.model.get("groupId");
            var jsonParam = {
                groupId: groupId,
                appId: appId
            };
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/group/appDeploy/param/" + QueryString.stringify(jsonParam));
            var model = new Backbone.Model({
                groupId: groupId,
                appId: appId
            });
            var statusLayout = new GroupServerAppStatusLayout({
                model: model,
                queryString: jsonParam
            });
            jcfManager.contentRegion.show(statusLayout);
            statusLayout.trigger("showPageInfo");
        },
        rollbackVersion: function(e) {
            //回滚应用的版本
            e.preventDefault();
            var registryRunFlag = this.checkRegistryRun();
            if (registryRunFlag) {
                //当前页面选中的部署状态
                var deployStatus4Search = $("#deployStatus4Search").val();
                var groupId = this.model.get("groupId");
                var groupName = this.model.get("groupName");
                var appId = this.model.get("appId");
                var appName = this.model.get("appName");
                var prevVersion = this.model.get("prevVersion");
                //prevVersion
                var appVersion = this.model.get("appVersion");
                var jsParam = {
                    groupId: groupId,
                    groupName: groupName,
                    appId: appId,
                    appName: appName,
                    prevVersion: prevVersion,
                    appVersion: appVersion
                };
                var modelName = sidbarUtil.getModuleName();
                var currentPage = $.trim($("#currentPage").val());
                var pageSize = $.trim($("#pageSize").val());
                var model = new Backbone.Model();
                model.set("groupId", groupId);
                model.set("status", deployStatus4Search);
                model.set("currentPage", currentPage);
                model.set("pageSize", pageSize);
                appRouter.navigate(modelName + "/group/appRollback/param/" + QueryString.stringify(jsParam));
                var rollbackLayout = new RollBackLayout({
                    model: model,
                    queryString: jsParam
                });
                jcfManager.contentRegion.show(rollbackLayout);
                rollbackLayout.trigger("showPageInfo");
            }
        },
        showGroupCfgInfo: function(e) {
            //查看组配置文件
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var status = $("#deployStatus4Search").val();
            var appName = this.model.get("appName");
            var appVersion = this.model.get("appVersion");
            var groupId = this.model.get("groupId");
            var serverId = this.model.get("serverId");
            var qString = {
                groupId: groupId,
                serverId: serverId,
                appName: appName,
                appVersion: appVersion,
                status: status
            };
            appRouter.navigate(modelName + "/group/appConfig/param/" + QueryString.stringify(qString));
            var groupCfgLayout = new GroupAppCongfigLayout({
                queryString: qString
            });
            jcfManager.contentRegion.show(groupCfgLayout);
            groupCfgLayout.trigger("showPageInfo");
        },
        undeployApp: function(e) {
            //反部署时检查服务器是否正常运行
            e.preventDefault();
            var $a = $(e.target);
            var ttt = $("#freshPage4GroupAppTabFlag").val();
            window.clearInterval(ttt);
            var appId = this.model.get("appId");
            var groupId = this.model.get("groupId");
            var jsParam = {};
            jsParam.appId = appId;
            jsParam.groupId = groupId;
            jsParam.mode = "group";
            var oldStatus = this.model.get("status");
            var self = this;
            var modelName = sidbarUtil.getModuleName();
            this.model.set("status", "8");
            if (confirm("确定反部署应用?")) {
                var flag = this.checkUndeployApp(jsParam);
                if (flag) {
                    var wv = new WaitingView();
                    jcfManager.tipInfoRegion.show(wv);
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mUndeployApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            //跳转到应用管理页面
                            self.remove();
                            jcfManager.tipInfoRegion.empty();
                        } else {
                            //self.model.set("status",oldStatus) ;
                            self.model.set("status", "4");
                            var tm = new ListTipModel();
                            tm.set("errList", data.errInfoList);
                            var tv = new ListTipView({
                                model: tm
                            });
                            jcfManager.tipInfoRegion.show(tv);
                        }
                    });
                }
            }
        },
        change2DefaultVersion: function() {
            var toOperStr = "TRUE";
            this.changeDefaultVersion(toOperStr);
        },
        change2NoDefaultVersion: function() {
            var toOperStr = "FALSE";
            this.changeDefaultVersion(toOperStr);
        },
        changeDefaultVersion: function(toOperStr) {
            var self = this;
            var msg = "确定将应用";
            if (toOperStr == "TRUE") {
                msg += "切换到默认版?";
            } else {
                msg += "切换到非默认版?";
            }
            var groupId = this.model.get("groupId");
            var appId = this.model.get("appId");
            var isDefaultVersion = this.model.get("isDefaultVersion");
            //非默认版 和状态不一致可以切换到默认版
            if (isDefaultVersion == "TRUE") {
                //当前为默认版
                if (toOperStr == "TRUE") {
                    return;
                }
            } else if (isDefaultVersion == "FALSE") {
                //当期非默认版
                if (toOperStr == "FALSE") {
                    return;
                }
            } else {
                //状态不一致//可切换为任意状态
                if (toOperStr == "TRUE") {
                    //如果切换到默认版,则按当前为非默认版
                    isDefaultVersion = "FALSE";
                } else {
                    isDefaultVersion = "TRUE";
                }
            }
            var currentVersion = this.model.get("appVersion");
            var appName = this.model.get("appName");
            //检查注册库是否为启动状态,如果不启动状态则不可切换默认版本
            var registryRunFlag = this.checkRegistryRun();
            if (registryRunFlag) {
                if (confirm(msg)) {
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/changeAppDefaultVersion.action";
                    var jsParam = {};
                    //地址栏获取
                    jsParam.groupId = groupId;
                    //点击获取
                    jsParam.appId = appId;
                    jsParam.appName = appName;
                    jsParam.isDefaultVersion = isDefaultVersion;
                    jsParam.currentVersion = currentVersion;
                    //定死参数
                    //jsParam.mode = "group" ;
                    jsParam.operation = "7";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        var flag = data.flag;
                        if (flag == "success") {
                            //触发父函数执行
                            self.model.set("isDefaultVersion", toOperStr);
                            self.triggerMethod("parent:refreshPageDefaultVersion");
                        } else {
                            var tv = new ItemTipView();
                            tv.model.set("flag", "false");
                            tv.model.set("msg", "切换失败!");
                            jcfManager.tipInfoRegion.show(tv);
                        }
                    });
                }
            }
        },
        checkRegistryRun: function() {
            //检查注册库服务器是否正常运行
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/checkRegistryStatus.action";
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == "1") {
                        flag = true;
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", data.errMsg);
                        jcfManager.tipInfoRegion.show(tv);
                    }
                } else {
                    var tv = new ItemTipView();
                    tv.model.set("flag", "false");
                    tv.model.set("msg", data.errMsg);
                    jcfManager.tipInfoRegion.show(tv);
                }
            });
            return flag;
        },
        checkUndeployApp: function(jsParam) {
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mApplication.action";
            jsParam.operation = "7";
            var ajaxing = util.dealSYNCHAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    delete jsParam.operation;
                    flag = true;
                } else {
                    var tv = new ItemTipView();
                    tv.model.set("flag", "false");
                    tv.model.set("msg", data.msg);
                    jcfManager.tipInfoRegion.show(tv);
                }
            });
            return flag;
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {
            this.on("freshPage", this.freshPage);
        },
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody",
        freshPage: function() {
            var self = this;
            var cc = this.collection;
            var refreshSpace = 2e3;
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            var hash = window.location.hash;
            $("#freshPage4GroupAppTabUrl").val(hash);
            var ttt = setInterval(this.updatePageAppStatus, refreshSpace, self);
            self.autoFreshPageTTT = ttt;
            $("#freshPage4GroupAppTabFlag").val(ttt);
            setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
        },
        updatePageAppStatus: function(self) {
            var groupId = $.trim($("#hiddenGroupId").val());
            var currentPage = $.trim($("#currentPage").val());
            var pageSize = $.trim($("#pageSize").val());
            var status = "0";
            var autoFreshPageTTT = self.autoFreshPageTTT;
            var hash = window.location.hash;
            var hiddenHash = $("#freshPage4GroupAppTabUrl").val();
            if (hash == hiddenHash) {
                self.collection.fetch({
                    data: {
                        groupId: groupId,
                        status: status,
                        currentPage: currentPage,
                        pageSize: pageSize
                    },
                    success: function(collection, response) {
                        var size = collection.length;
                        var count = 0;
                        collection.each(function(m) {
                            var ss = m.get("status");
                            if (ss != "7" && ss != "8" && ss != "9" && ss != "0") {
                                count++;
                            }
                        });
                        if (count == size) {
                            window.clearInterval(autoFreshPageTTT);
                        }
                    },
                    error: function(collection, response) {
                        window.clearInterval(autoFreshPageTTT);
                    }
                });
            } else {
                window.clearInterval(autoFreshPageTTT);
            }
        },
        childEvents: {
            "parent:refreshPageDefaultVersion": function(curChildView) {
                var model = curChildView.model;
                var appName = model.get("appName");
                var appVersion = model.get("appVersion");
                var isDefaultVersion = model.get("isDefaultVersion");
                this.collection.each(function(m) {
                    if (m.get("appName") == appName) {
                        if (m.get("appVersion") != appVersion) {
                            if ("TRUE" == isDefaultVersion) {
                                ////如果当前model改为默认版本则其他都为非默认版本
                                if (m.get("isDefaultVersion") != "FALSE") {
                                    //并且当前显示为默认版
                                    m.set("isDefaultVersion", "FALSE");
                                }
                            } else {
                                //切换为非默认,则所有版本都切换为非默认
                                m.set("isDefaultVersion", "FALSE");
                            }
                        }
                    }
                });
            },
            "parent:fresh4UndeployApp": function(curChildView) {
                var self = this;
                var refreshSpace = 2e3;
                var refreshNum = util.getFefreshPageNum();
                //刷新次数
                var refreshTime = refreshSpace * refreshNum;
                //多少秒后执行清除刷新函数
                var hash = window.location.hash;
                $("#freshPage4GroupAppTabUrl").val(hash);
                var myparam = {};
                self.curChildView = curChildView;
                var ttt = setInterval(this.fresh4UndeployApp, refreshSpace, self);
                self.autoFreshPageTTT = ttt;
                $("#freshPage4GroupAppTabFlag").val(ttt);
                setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
            }
        },
        fresh4UndeployApp: function(self) {
            //反部署的时候需要刷新页面
            var curChildView = self.curChildView;
            var collection = self.collection;
            var mm = curChildView.model;
            var autoFreshPageTTT = self.autoFreshPageTTT;
            var hash = window.location.hash;
            var hiddenHash = $("#freshPage4GroupAppTabUrl").val();
            if (hash == hiddenHash) {
                var appId = mm.get("appId");
                var groupId = mm.get("groupId");
                var serverUrl = "/" + jcfManager.appName + "/deployMgr/queryAppCount4Group.action";
                var jsonParam = {
                    appId: appId,
                    groupId: groupId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverUrl, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        var recordCount = data.recordCount;
                        if (recordCount == 0) {
                            collection.remove(mm);
                            window.clearInterval(autoFreshPageTTT);
                        }
                    } else {
                        window.clearInterval(autoFreshPageTTT);
                    }
                });
            } else {
                window.clearInterval(autoFreshPageTTT);
            }
        }
    });
    //部署管理
    //---群组管理
    //------应用管理	
    var AppMgrTabLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.on("searchListInfo", this.searchListInfo);
            this.queryString = options.queryString;
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        template: _.template(layoutTmpStr),
        events: {
            "change #deployStatus4Search": "changeDeployStatus4Search",
            "click #groupAppMgrSearchBtn": "groupAppMgrSearch"
        },
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        groupAppMgrSearch: function() {
            this.queryString.currentPage = "1";
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(this.queryString));
            this.trigger("searchListInfo");
        },
        changeDeployStatus4Search: function() {
            var status = this.$el.find("#deployStatus4Search").val();
            this.queryString.status = status;
            appRouter.navigate("deployMgr/group/param/" + QueryString.stringify(this.queryString));
        },
        searchListInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mSearchGroupApp.action";
            var status = this.$el.find("#deployStatus4Search").val();
            var jsonParam = {
                groupId: this.queryString.groupId,
                status: status,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                var model = new Backbone.Model(data.pageBean);
                //var collection = new Backbone.Collection(data.pageBean.recordList) ;
                var collection = new GroupAppCollection(data.pageBean.recordList);
                //显示列表区
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                listView.trigger("freshPage");
                //显示分页栏区
                model.set("uriSection", "group");
                var pb = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pb);
                //也要刷新页面
                var freshPage = self.queryString.freshPage;
                if (freshPage == "true") {
                    // 如果是从反部署页面过来的的则需要刷新页面
                    listView.trigger("freshPage");
                }
            });
        }
    });
    return AppMgrTabLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupDeployAppMgrItem-debug.tpl", [], '<td><%=appName%></td>\n<td><%=appVersion%></td>\n<td>\n	<%if(status=="1"){\n		%><span class = "text-success">已部署</span><%\n	}else if (status=="2"){\n	    %><span class = "text-danger">部署失败</span><%\n	}else if (status=="3"){\n	    %><span class = "text-success">已反部署</span><%\n	}else if (status=="4"){\n	    %><span class = "text-danger">反部署失败</span><%\n	}else if (status=="5"){\n	    %><span class = "text-success">已回滚</span><%\n	}else if (status=="6"){\n	    %><span class = "text-danger">回滚失败</span><%\n	}else if(status=="7"){\n	    %>正在部署..<%\n	}else if (status=="8"){\n	    %>正在反部署..<%\n	}else if(status=="9"){\n	    %>正在回滚..<%\n	}else if(status=="0"){\n	    %><span class = "text-danger">状态不一致</span><%\n	}else{\n	    %><%=status%><%\n	}%>\n</td>\n<td><%=updateDate%></td>\n<td class = "groupAppDetailTd">\n	<a href = "<%=appId%>" >查看详情</a>\n</td>\n<td>\n	<%\n	   if(isDefaultVersion=="TRUE"){\n		   %><span class = "text-success">默认版</span><%\n	   }else if(isDefaultVersion=="FALSE"){\n		   %><span class = "text-warning">非默认版</span><%\n	   }else{\n		  %><span class = "text-danger">状态不一致</span><%\n	   }\n	%>\n</td>\n<td>\n	<%\n		if(status==1){//已部署\n		  if(containSihService=="true"){\n		  	%><span class = "text-info">不支持切换</span><%\n		  }else{\n		  	%>\n		  	<div class="btn-group" data-toggle="buttons">\n			    <button type="button"  class="btn btn-success btn-xs change2Default  <%if(authChageVersionFlag!=\'true\'){%>disabled<%}%>"  name = "toTRUE" >默认</button>\n				<button type="button" class="btn btn-warning btn-xs change2NoDefault <%if(authChageVersionFlag!=\'true\'){%>disabled<%}%>"   name = "toFALSE">非默认</button>\n			</div>\n		  	<%\n		  }\n		}else{//处于未部署状态\n		  %><span class = "text-info">不可切换</span><%\n		}\n	%>\n</td>\n<td class = "undeployAppTd">\n	<%\n		if((status=="1"||status=="4")&&authUndeployFlag=="true"){\n			%><a href = "#" appId = "<%=appId%>" appName = "<%=appName%>" >反部署</a><%\n		}else{\n			%>反部署<%\n		}\n	%>\n</td>\n\n<td class = "rollbackVersionTd" >\n	<%if(rollbackLinkShow=="1"&&isDefaultVersion=="TRUE"&&authRollbackFlag=="true"&&containSihService!="true"){\n		%><a href = "" class = "myhand">回滚</a><%\n	}else{\n		%>回滚<%\n	}%>	\n</td>\n\n<td class = "showGroupCfgInfoTd">\n	<%\n	if(status==1||status==4||status==6){//已部署\n		%><a href = "" class = "myhand">查看</a><%\n	}else{\n		%>查看<%\n	}%>\n</td>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployAppMgrList-debug.tpl", [], "<thead>\n  <tr>\n    <th>应用名</th>\n    <th>版本号</th>\n    <th>部署状态</th>\n    <th>最后更新时间</th>\n    <th>详情</th>\n    <th>当前版本</th>\n    <th>切换版本</th>\n    <th>反部署操作</th>\n    <th>回滚操作</th>\n    <th>配置文件</th>\n  </tr>\n</thead>\n<tbody></tbody>");

define("travsky/jcf/1.0.0/template/deploy/groupDeployTabAppMgr-debug.tpl", [], '<div class = "row">\n	<div class = "col-sm-2 text-right" ><label for="groupName" class="control-label">部署状态：</label></div>\n	<div class = "col-sm-4" >\n		<select  id = "deployStatus4Search" class = "form-control input-sm">\n			<option <%if(status=="0"){%>selected="selected"<%} %>  value="0">全部</option>\n			<option <%if(status=="1"){%>selected="selected"<%} %> value="1">已部署</option>\n			<option <%if(status=="2"){%>selected="selected"<%}%>  value="2">部署失败</option>\n			<option <%if(status=="4"){%>selected="selected"<%} %>  value="4">反部署失败</option>\n		</select>\n	</div>\n	<div class = "col-sm-2" ><button  id = "groupAppMgrSearchBtn" type="button"  class="btn">查询</button></div>\n</div>\n<br/>\n<div id = "tipInfoRegion"></div>\n<div id = "listRegion" ></div>\n<div id = "pagebarRegion"></div>\n<input type = "hidden" id = "hiddenGroupId" value = "<%=groupId%>"/>\n<input type = "hidden" id = "freshPage4GroupAppTabUrl"/>\n<input type = "hidden" id = "freshPage4GroupAppTabFlag"/>\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-24
 * Time: 下午03:35:36
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/rollbackLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/deploy/rollback_view-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/deploy/rollbackLayout-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var RollbackView = require("travsky/jcf/1.0.0/view/deploy/rollback_view-debug");
    var RollbackUploadLayout = require("travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug");
    var QueryString = require("querystring-debug");
    var RollbackLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.on("showPageInfo", this.showPageInfo);
            this.queryString = options.queryString;
            this.on("refreshBaseInfo", this.refreshBaseInfo);
        },
        template: _.template(viewTemplateStr),
        regions: {
            baseInfoRegion: "#baseInfoRegion",
            uploadAppRegion: "#uploadAppRegion"
        },
        events: {
            "click #rollbackAppBackBtn": "rollbackAppBack"
        },
        rollbackAppBack: function() {
            var groupId = this.model.get("groupId");
            var status = this.model.get("status");
            var currentPage = this.model.get("currentPage");
            var pageSize = this.model.get("pageSize");
            var jString = {
                groupId: groupId,
                status: status,
                selectedPageUI: "showAllAppUI",
                currentPage: currentPage + "",
                pageSize: pageSize + ""
            };
            appRouter.navigate("deployMgr/group/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        refreshBaseInfo: function() {
            //刷新基本信息
            var self = this;
            var appName = this.queryString.appName;
            var appVersion = this.queryString.appVersion;
            var prevVersion = this.queryString.prevVersion;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/searchAppVersionList.action";
            var queryParam = {
                appName: appName
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, queryParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data);
                    model.set("prevVersion", prevVersion);
                    model.set("appName", appName);
                    model.set("appVersion", appVersion);
                    var rollbackView = new RollbackView({
                        model: model,
                        jsParam: self.queryString
                    });
                    self.baseInfoRegion.show(rollbackView);
                } else {
                    alert("获取上传应用版本出错!");
                }
            });
        },
        showPageInfo: function() {
            var self = this;
            var appName = this.queryString.appName;
            var appVersion = this.queryString.appVersion;
            var prevVersion = this.queryString.prevVersion;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/searchAppVersionList.action";
            var queryParam = {
                appName: appName
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, queryParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    var model = new Backbone.Model(data);
                    model.set("prevVersion", prevVersion);
                    model.set("appName", appName);
                    model.set("appVersion", appVersion);
                    var rollbackView = new RollbackView({
                        model: model,
                        jsParam: self.queryString
                    });
                    self.baseInfoRegion.show(rollbackView);
                    var uploadLayout = new RollbackUploadLayout({
                        queryString: self.queryString
                    });
                    self.uploadAppRegion.show(uploadLayout);
                    uploadLayout.parent = self;
                    uploadLayout.trigger("showPageInfo");
                } else {
                    alert("获取上传应用版本出错!");
                }
            });
        }
    });
    return RollbackLayout;
});

define("travsky/jcf/1.0.0/template/deploy/rollbackLayout-debug.tpl", [], '<br/>\n<div id = "baseInfoRegion" ></div><!--基本信息显示部分-->\n<div id = "uploadAppRegion"></div><!--上传应用部分-->\n<div>\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n	<button id = "rollbackAppBackBtn" class = "btn btn-primary" >返回</button>\n</div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-24
 * Time: 下午04:53:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/rollback_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/deploy/rollbackView-debug.tpl");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var RollbackView = Marionette.ItemView.extend({
        initialize: function(options) {
            this.jsParam = options.jsParam;
        },
        template: _.template(viewTemplateStr),
        events: {
            "click #rollbackSubmitBtn": "rollbackSubmit",
            "click td.selectVersionTd :radio": "selectVersion"
        },
        rollbackSubmit: function() {
            //当前版本和将要回滚的版本不能相同
            var hiddenAppVersion = $("#hiddenAppVersion").val();
            var rollback2Version = $("#rollback2Version").val();
            if (rollback2Version == "") {
                alert("请选择回滚版本!");
            } else {
                if (confirm("确认回滚?")) {
                    var rollbackParam = {};
                    rollbackParam.groupId = this.jsParam.groupId;
                    rollbackParam.groupName = this.jsParam.groupName;
                    rollbackParam.appName = this.jsParam.appName;
                    rollbackParam.appId = this.jsParam.appId;
                    rollbackParam.prevVersion = rollback2Version;
                    //将要回滚的版本
                    rollbackParam.mode = "group";
                    //rollbackParam.operation = "8" ;
                    var modelName = sidbarUtil.getModuleName();
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mRollbackApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, rollbackParam);
                    var groupId = this.jsParam.groupId;
                    $.when(ajaxing).done(function(data) {
                        if (data.flag = "true") {
                            if (data.msg == "success") {
                                //回滚陈功后也要不断的刷新页面
                                var toPageParam = {
                                    groupId: groupId,
                                    freshPage: "true"
                                };
                                appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(toPageParam), {
                                    trigger: true
                                });
                            } else {
                                alert("回滚失败!" + data.msg);
                            }
                        } else {
                            alert("回滚失败!");
                        }
                    });
                }
            }
        },
        selectVersion: function(e) {
            var $target = $(e.target);
            var value = $target.val();
            $("#rollback2Version").val(value);
        }
    });
    return RollbackView;
});

define("travsky/jcf/1.0.0/template/deploy/rollbackView-debug.tpl", [], '<table class="table">\n   <tbody>\n      <tr>\n         <td width = "12%" class = "text-right">回滚到版本：</td>\n         <td width = "20%"><input type="text" id="rollback2Version"  readonly = "readonly"\n         	  	<%for(var i = 0 ; i < appVersionList.length ; i ++){\n         	  		if(appVersionList[i]==prevVersion){//如果和之前版本相同，则显示\n         	  			%> value = "<%=prevVersion%>"  <%\n         	  		}\n         	  	}%>\n            class="form-control input-sm"  /></td>\n         <td width = "10%"><button class = "btn primary" id = "rollbackSubmitBtn">回滚</button></td>\n         <td width = "15%">当前版本  :&nbsp;<%=appVersion%></td>\n         <td width = "30%">应用名称  :&nbsp;<%=appName%></td>\n         <td width = "*%"><input  type = "hidden" id = "hiddenAppVersion" value = "<%=appVersion%>"/></td>\n      </tr>\n      <tr>\n         <td class = "text-right">回滚版本：</td>\n         <td class = "selectVersionTd" colspan = "3">\n         	 <%\n         	 	for(var i = 0 ; i < appVersionList.length ; i ++){\n         	 	    if(appVersionList[i]!=appVersion){\n	         	 	    if(prevVersion==appVersionList[i]){\n	         	 			%>\n	         	 			<input type = "radio" name = "ccc"  checked = "checked" value = "<%=appVersionList[i]%>"/><%=appVersionList[i]%>\n	         	 			<%\n	         	 		}else{\n	         	 			%>\n	         	 			<input type = "radio" name = "ccc" value = "<%=appVersionList[i]%>"/><%=appVersionList[i]%>\n	         	 			<%\n	         	 		}\n         	 	    }\n         	 	}\n         	 %>\n		 </td>\n      </tr>\n   </tbody>\n</table>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-27
 * Time: 下午03:57:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/rollbackUploadLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var DeployUploadLayout = require("travsky/jcf/1.0.0/view/deploy/deployUploadLayout-debug");
    //待上传应用itemview模版
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/uploadItem-debug.tpl");
    //待上传应用listview模版
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/uploadList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var curPathTmpStr = "<%=currentPath%>";
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    //当前目录
    var CurrentPathView = Marionette.ItemView.extend({
        tagName: "span",
        template: _.template(curPathTmpStr)
    });
    //待上传应用itemview
    var AppItemView = Marionette.ItemView.extend({
        tagName: "tr",
        className: "listPageTr",
        template: _.template(itemTmpStr)
    });
    //待上传应用listview
    var AppListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTmpStr),
        childView: AppItemView,
        childViewContainer: "tbody"
    });
    var RollbackUploadLayout = DeployUploadLayout.extend({
        clearApp: function(e) {
            var tipModel = new ListTipModel();
            if (confirm("确定清除?")) {
                var $a = $(e.target);
                var appId = $a.attr("appId");
                var appStatus = $a.attr("appStatus");
                var serverURL = "/" + jcfManager.appName + "/deployMgr/clearApp.action";
                var jsonParam = {
                    appId: appId,
                    appStatus: appStatus
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    if (data.flag) {
                        tipModel.set("succList", [ "清除成功!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                        var cc = null;
                        self.uploadedAppCollection.each(function(m) {
                            var str = m.get("id");
                            if (str == appId) {
                                self.uploadedAppCollection.remove(m);
                                self.parent.trigger("refreshBaseInfo");
                                return;
                            }
                        });
                    } else {
                        tipModel.set("errList", [ "清除应用失败!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    }
                });
            }
        },
        uploadApp: function() {
            //点击上传应用button
            var path = $("#uploadAppName").val();
            var title = $("#uploadAppName").attr("title");
            var self = this;
            var tipModel = new ListTipModel();
            if (path == null || path == "") {
                tipModel.set("errList", [ "请选择应用包！" ]);
                var tipView = new ListTipView({
                    model: tipModel
                });
                self.showTipInfoRegion.show(tipView);
            } else {
                var curCollection = this.uploadedAppCollection;
                var count = 0;
                var continueFlag = true;
                curCollection.each(function(c) {
                    //遍历已上传的所有应用
                    count++;
                    //bar包全名称
                    var var_tmp = c.get("name") + "_" + c.get("version") + ".bar";
                    var appStatus = c.get("appStatus");
                    if (title == var_tmp) {
                        //如果应用名称相同
                        if (appStatus == 2 || appStatus == 3 || appStatus == 10) {
                            //如果包为部署失败的bar这可覆盖
                            if (!confirm("同名同版本的bar包已上传，是否要覆盖?")) {
                                continueFlag = false;
                            }
                        } else {
                            continueFlag = false;
                            tipModel.set("errList", [ "该包已部署，不能上传覆盖!" ]);
                            var tipView = new ListTipView({
                                model: tipModel
                            });
                            self.showTipInfoRegion.show(tipView);
                        }
                    }
                });
                if (continueFlag) {
                    if (count >= 3) {
                        tipModel.set("errList", [ "该应用包已上传三个版，不能再上传，请先进行清除！" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    } else {
                        if (!confirm("确定上传应用包" + path + "?")) {
                            return;
                        }
                    }
                } else {
                    return;
                }
                var serverURL = "/" + jcfManager.appName + "/deployMgr/mUploadFile.action";
                var jsonParam = {
                    appPath: path
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        tipModel.set("succList", [ "上传成功!" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                        self.findUploadedApp(path);
                        self.parent.trigger("refreshBaseInfo");
                    } else {
                        //上传成功的话
                        tipModel.set("errList", [ "上传失败!" + data.msg ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        self.showTipInfoRegion.show(tipView);
                    }
                });
            }
        },
        backParentFilePath: function() {
            //点击返回上层目录按钮
            var operPathCode = "parentPath";
            this.queryString.changePageFlag = "false";
            this.queryString.currentPage = "1";
            appRouter.navigate("deployMgr/group/appRollback/param/" + QueryString.stringify(this.queryString));
            this.showDirList(operPathCode);
        },
        showDirList: function(operPathCode) {
            //清空应用路径文本框
            this.alreadyUploadAppRegion.empty();
            $("#uploadAppName").val("");
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mAccessDir.action";
            var jsonParam = {
                operPathCode: operPathCode,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize,
                changePageFlag: this.queryString.changePageFlag
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                //显示当前目录...
                var model01 = new Backbone.Model({
                    currentPath: data.currentPath
                });
                var curPathView = new CurrentPathView({
                    model: model01
                });
                self.currentFilePathRegion.show(curPathView);
                //显示所有文件列表...
                var collection = new Backbone.Collection(data.pageBean.recordList);
                self.listRegion.show(new AppListView({
                    collection: collection
                }));
                //显示分页栏条...
                var model = new Backbone.Model(data.pageBean);
                model.set("uriSection", "group/appRollback");
                //self.queryString.selectedPageUI = "updateAppUI" ;//应用上传
                self.queryString.changePageFlag = "true";
                appRouter.navigate("deployMgr/group/appRollback/param/" + QueryString.stringify(self.queryString));
                self.pagebarRegion.show(new PagebarView({
                    model: model,
                    queryString: self.queryString
                }));
            }).fail(function() {
                alert("根目录");
            });
        }
    });
    return RollbackUploadLayout;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-31
 * Time: 上午09:33:48
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/collection/deploy/groupApp_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/model/deploy/groupApp_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupAppModel = require("travsky/jcf/1.0.0/model/deploy/groupApp_model-debug");
    var GroupAppCollection = Backbone.Collection.extend({
        model: GroupAppModel,
        url: "/" + jcfManager.appName + "/deployMgr/mSearchGroupApp.action",
        parse: function(response) {
            return _.extend(response.pageBean.recordList);
        }
    });
    return GroupAppCollection;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-31
 * Time: 上午09:34:34
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/deploy/groupApp_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupAppModel = Backbone.Model.extend({
        defaults: {
            groupName: "",
            appId: "",
            appName: "",
            appVersion: "",
            appStatus: "",
            serverId: "",
            updateDate: "",
            status: "",
            undeployLinkShow: "",
            rollbackLinkShow: "",
            isDefaultVersion: "",
            prevVersion: ""
        },
        parse: function(response) {
            return _.extend(response);
        }
    });
    return GroupAppModel;
});

define("travsky/jcf/1.0.0/view/itemTip_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "bs-alert-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    require("bs-alert-debug")($);
    var globalViewTemplate = require("travsky/jcf/1.0.0/template/itemTip-debug.tpl");
    var ItemTipModel = require("travsky/jcf/1.0.0/model/itemTip_model-debug");
    var ItemTipView = Marionette.ItemView.extend({
        initialize: function(options) {
            var msg = "";
            if (options != null && options.msg != null) {
                msg = options.msg;
            }
            this.model = this.model || new ItemTipModel();
            if (msg.length > 0) {
                this.model.set("msg", msg);
            }
        },
        template: _.template(globalViewTemplate)
    });
    return ItemTipView;
});

define("travsky/jcf/1.0.0/template/itemTip-debug.tpl", [], '<div <%if(flag=="true"){%>class="alert alert-success"<%}else{%>class="alert alert-danger"<%}%> >\n	<button type="button" class="close" data-dismiss="alert" aria-hidden="true"> &times;</button>\n    <%=msg%>\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-13
 * Time: 下午02:59:55
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/model/itemTip_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ItemTipModel = Backbone.Model.extend({
        defaults: {
            flag: "true",
            msg: "提示内容"
        }
    });
    return ItemTipModel;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-23
 * Time: 下午03:04:21
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupServerAppStautsLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    //layout视图
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupServerAppStautsLayout-debug.tpl");
    //基本信息视图
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupServerAppBaseInfo-debug.tpl");
    //列表项视图
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupServerAppStatusItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupServerAppStatusList-debug.tpl");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    //整个列表视图
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    //基本信息部分视图
    var BaseInfoView = Marionette.ItemView.extend({
        template: _.template(baseInfoTmpStr),
        tagName: "table",
        className: "table list"
    });
    //列表每一项视图
    var ItemsView = Marionette.ItemView.extend({
        initialize: function() {
            var groupId = $("#groupIdHiddenOnPage").val();
            this.model.set("groupId", groupId);
            var deployAuthFlag = authCheck.getDeployFlag();
            var undeployAuthFlag = authCheck.getUndeployFlag();
            this.model.set("deployAuthFlag", deployAuthFlag);
            this.model.set("undeployAuthFlag", undeployAuthFlag);
            this.model.view = this;
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(itemTmpStr),
        tagName: "tr",
        events: {
            "click td.deployOrNotTd a": "deployOrNotOper",
            "click .serverIds": "singleChecked"
        },
        singleChecked: function(e) {
            //点击单checkbox
            var len1 = $("input:checkbox[name='serverIds']").length;
            var len2 = $("input:checkbox[name='serverIds']:checked").length;
            if (len1 == len2) {
                $("#selectAll").prop("checked", true);
            } else {
                $("#selectAll").prop("checked", false);
            }
        },
        deployOrNotOper: function(e) {
            //部署列操作
            e.preventDefault();
            jcfManager.tipInfoRegion.empty();
            var href = $(e.target).attr("href");
            var appId = this.model.get("appId") + "";
            var serverId = this.model.get("serverId") + "";
            var groupId = this.model.get("groupId") + "";
            var jsParam = {};
            jsParam.appId = appId;
            jsParam.serverId = serverId;
            jsParam.groupId = groupId;
            if ("reDeploy" == href) {
                jsParam.operation = "6";
                this.deployApp(jsParam);
            } else if ("undeploy" == href || "reUndeploy" == href) {
                jsParam.operation = "7";
                jsParam.mode = "single";
                //这个必须填写，否则报错//只有在反部署的时候需要该字段
                this.undeployApp(jsParam);
            }
        },
        deployApp: function(jsParam) {
            //部署
            var modelName = sidbarUtil.getModuleName();
            var flag = this.check4DeployOrNot(jsParam);
            var self = this;
            if (flag) {
                delete jsParam.operation;
                var serverURL = "/" + jcfManager.appName + "/deployMgr/mDeployApp.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        //跳转到应用管理页面
                        self.model.set("appStatus", "7");
                        //正在部署中,后面会重新刷新页面
                        //一直刷新本条记录
                        self.triggerMethod("parent:refreshSingleModel");
                    } else {
                        alert("部署失败!");
                    }
                });
            }
        },
        undeployApp: function(jsParam) {
            //反部署
            if (confirm("确认反部署?")) {
                var flag = this.check4DeployOrNot(jsParam);
                var modelName = sidbarUtil.getModuleName();
                var self = this;
                if (flag) {
                    delete jsParam.operation;
                    //operation
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mUndeployApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        if (data.flag == "true") {
                            //跳转到应用管理页面
                            self.model.set("appStatus", "8");
                            //正在部署中,后面会重新刷新页面
                            //一直刷新本条记录
                            self.triggerMethod("parent:refreshSingleModel");
                        } else {
                            alert("反部署失败!");
                        }
                    });
                }
            }
        },
        check4DeployOrNot: function(jsParam) {
            //检查是否能部署或反部署
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mApplication.action";
            var ajaxing = util.dealSYNCHAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    delete jsParam.operation;
                    flag = true;
                } else {
                    alert(data.msg);
                }
            });
            return flag;
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    //整个列表视图
    var ListView = Marionette.CompositeView.extend({
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTmpStr),
        childView: ItemsView,
        childViewContainer: "tbody",
        events: {
            "click #selectAll": "selectAll"
        },
        selectAll: function(e) {
            var checkFlag = $("#selectAll").prop("checked");
            $(e.target).parents("thead").siblings("tbody").find(":checkbox[name='serverIds']").prop("checked", checkFlag);
        },
        childEvents: {
            "parent:refreshSingleModel": function(curChildView) {
                var currentModel = curChildView.model;
                var refreshSpace = 2e3;
                var refreshNum = util.getFefreshPageNum();
                //刷新次数
                var refreshTime = refreshSpace * refreshNum;
                //多少秒后执行清除刷新函数
                var curHash = window.location.hash;
                $("#freshPage4GroupAppUrl").val(curHash);
                var ttt = setInterval(this.refreshSingleStatus, refreshSpace, currentModel);
                $("#freshPage4GroupAppFlag").val(ttt);
                setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
            }
        },
        refreshSingleStatus: function(curModel) {
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4GroupAppUrl").val();
            var autoFreshFlag = $("#freshPage4GroupAppFlag").val();
            if (oldUrl == curHash) {
                //刷新页面
                var serverId = curModel.get("serverId");
                var appId = curModel.get("appId");
                var serverURL = "/" + jcfManager.appName + "/deployMgr/freshAppStatus4Server.action";
                var groupId = curModel.get("groupId");
                var jsonParam = {
                    groupId: groupId,
                    serverId: serverId,
                    appId: appId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.continueFreshFlag != "true") {
                        var cStatus = data.appStatus;
                        if (cStatus != "7" && cStatus != "8" && cStatus != "9") {
                            if (cStatus == 3) {
                                //已反部署，则删除此条记录
                                curModel.view.destroy();
                            } else {
                                curModel.set("appStatus", cStatus);
                            }
                            window.clearInterval(autoFreshFlag);
                        }
                    } else {
                        window.clearInterval(autoFreshFlag);
                    }
                });
            } else {
                window.clearInterval(autoFreshFlag);
            }
        }
    });
    var GroupServerAppStatusLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            var deployAuthFlag = authCheck.getDeployFlag();
            var undeployAuthFlag = authCheck.getUndeployFlag();
            this.model.set("deployAuthFlag", deployAuthFlag);
            this.model.set("undeployAuthFlag", undeployAuthFlag);
            this.on("showPageInfo", this.showPageInfo);
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        template: _.template(layoutTmpStr),
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            baseInfoRegion: "#baseInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #batchReDeployBtn": "batchReDeploy",
            "click #batchReundeployBtn": "batchReundeploy"
        },
        showPageInfo: function() {
            var self = this;
            var groupId = this.queryString.groupId;
            var appId = this.queryString.appId;
            var currentPage = this.queryString.currentPage;
            if (currentPage == null) {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var serverURL = "/" + jcfManager.appName + "/deployMgr/viewAppStatus4Group.action";
            var jsonParam = {
                groupId: groupId,
                appId: appId,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var refreshSpace = 2e3;
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            //保存当前url
            var curHash = window.location.hash;
            $("#freshPage4GroupAppUrl").val(curHash);
            var deployFlag = this.queryString.deployFlag;
            $.when(ajaxing).done(function(data) {
                //基本信息部分
                var model = new Backbone.Model(data.appInfo);
                var baseView = new BaseInfoView({
                    model: model
                });
                self.baseInfoRegion.show(baseView);
                //显示列表信息
                var collection = new Backbone.Collection(data.pageBean.recordList);
                //将数据保存到layout中
                self.collection = collection;
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //显示分页栏
                var pbModel = new Backbone.Model(data.pageBean);
                pbModel.set("uriSection", "group/appDeploy");
                var pbView = new PagebarView({
                    model: pbModel,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
                if (deployFlag == "true") {
                    //从部署页面过来的需要刷新页面，其他地方过来的不需要刷新页面
                    $("#serverId4deployApp").val(self.queryString.serverId);
                    $("#appId4deployApp").val(self.queryString.appId);
                    if (collection.length > 0) {
                        //定时刷新页面
                        var ttt = setInterval(self.updatePageAppStatus4AllUpdate, refreshSpace, collection);
                        $("#freshPage4GroupAppFlag").val(ttt);
                        setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                    }
                }
            });
        },
        checkboxAllNotUnCheck: function() {
            $(":checkbox").prop("checked", false);
        },
        batchReDeploy: function() {
            //批量重新部署
            var checkFlag = $("#selectAll").prop("checked", false);
            var serverIds = "";
            var infos = $("input:checkbox[name='serverIds']:checked");
            var len = infos.length;
            var self = this;
            var ids = new Array();
            infos.each(function(index) {
                var serverId = $(this).val();
                var appStatus = $(this).attr("appStatus");
                if (appStatus == "2") {
                    //只有部署失败的应用才能重新部署
                    serverIds += serverId;
                    ids.push(serverId);
                    if (index + 1 < len) {
                        serverIds += ",";
                    }
                }
            });
            if (ids.length > 0) {
                var jsParam = {};
                jsParam.serverId = serverIds;
                jsParam.groupId = this.queryString.groupId;
                jsParam.appId = this.queryString.appId;
                jsParam.mode = "more";
                jsParam.operation = "6";
                $("#serverId4deployApp").val(jsParam.serverId);
                $("#appId4deployApp").val(jsParam.appId);
                //检查是否符合重部署条件
                var flag = this.check4DeployOrNot(jsParam);
                if (flag) {
                    delete jsParam.operation;
                    delete jsParam.mode;
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mDeployApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        self.checkboxAllNotUnCheck();
                        if (data.flag == "true") {
                            //跳转到应用管理页面
                            for (var i = 0; i < ids.length; i++) {
                                var curId = ids[i];
                                self.collection.each(function(m) {
                                    if (m.get("serverId") == "" + curId) {
                                        m.set("appStatus", "7");
                                    }
                                });
                            }
                            var refreshSpace = 2e3;
                            var refreshNum = util.getFefreshPageNum();
                            //刷新次数
                            var refreshTime = refreshSpace * refreshNum;
                            //多少秒后执行清除刷新函数
                            var curHash = window.location.hash;
                            $("#freshPage4GroupAppUrl").val(curHash);
                            var ttt = setInterval(self.updatePageAppStatus4PartUpdate, refreshSpace, self.collection);
                            $("#freshPage4GroupAppFlag").val(ttt);
                            setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                        } else {
                            alert("部署失败!");
                        }
                    });
                }
            } else {
                $("input:checkbox[name='serverIds']:checked").prop("checked", false);
                var listTipModel = new ListTipModel();
                listTipModel.set("errList", [ "应用状态必须满足:[‘部署失败’]" ]);
                var listTipView = new ListTipView({
                    model: listTipModel
                });
                this.tipInfoRegion.show(listTipView);
            }
        },
        batchReundeploy: function() {
            //批量重新反部署
            var checkFlag = $("#selectAll").prop("checked", false);
            var serverIds = "";
            var self = this;
            var infos = $("input:checkbox[name='serverIds']:checked");
            var len = infos.length;
            var ids = new Array();
            infos.each(function(index) {
                var serverId = $(this).val();
                //如果不是部署失败则可反部署
                var appStatus = $(this).attr("appStatus");
                if (appStatus == "1" || appStatus == "4") {
                    //已部署，反部署失败
                    ids.push(serverId);
                    serverIds += serverId;
                    if (index + 1 < len) {
                        serverIds += ",";
                    }
                }
            });
            if (ids.length > 0) {
                var jsParam = {};
                jsParam.serverId = serverIds;
                jsParam.groupId = this.queryString.groupId;
                jsParam.appId = this.queryString.appId;
                jsParam.mode = "more";
                jsParam.operation = "7";
                $("#serverId4deployApp").val(jsParam.serverId);
                $("#appId4deployApp").val(jsParam.appId);
                var flag = this.check4DeployOrNot(jsParam);
                if (flag) {
                    delete jsParam.operation;
                    //operation
                    delete jsParam.mode;
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mUndeployApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        self.checkboxAllNotUnCheck();
                        if (data.flag == "true") {
                            //跳转到应用管理页面
                            //self.remove() ; //移除该视图
                            for (var i = 0; i < ids.length; i++) {
                                var curId = ids[i];
                                self.collection.each(function(m) {
                                    var curServerId = m.get("serverId");
                                    if (curServerId == curId) {
                                        m.set("appStatus", "8");
                                    }
                                });
                            }
                            var refreshSpace = 2e3;
                            var refreshNum = util.getFefreshPageNum();
                            //刷新次数
                            var refreshTime = refreshSpace * refreshNum;
                            //多少秒后执行清除刷新函数
                            var curHash = window.location.hash;
                            $("#freshPage4GroupAppUrl").val(curHash);
                            var ttt = setInterval(self.updatePageAppStatus4PartUpdate, refreshSpace, self.collection);
                            $("#freshPage4GroupAppFlag").val(ttt);
                            setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                        } else {
                            alert("反部署失败!");
                        }
                    });
                }
            } else {
                $("input:checkbox[name='serverIds']:checked").prop("checked", false);
                var listTipModel = new ListTipModel();
                listTipModel.set("errList", [ "应用状态必须满足:[‘已部署’，‘反部署失败’]" ]);
                var listTipView = new ListTipView({
                    model: listTipModel
                });
                this.tipInfoRegion.show(listTipView);
            }
        },
        check4DeployOrNot: function(jsParam) {
            //检查是否能部署或反部署
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mApplication.action";
            var ajaxing = util.dealSYNCHAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    delete jsParam.operation;
                    flag = true;
                } else {
                    alert(data.msg);
                }
            });
            return flag;
        },
        arrayContainElement: function(arr, element) {
            var i = arr.length;
            while (i--) {
                if (a[i] == element) {
                    return true;
                }
            }
            return false;
        },
        updatePageAppStatus4AllUpdate: function(collection) {
            var serverId = "";
            collection.each(function(m) {
                var cid = m.get("serverId");
                serverId += cid;
                serverId += ",";
            });
            var len = serverId.length;
            if (collection.length > 0) {
                serverId = serverId.substring(0, len - 1);
            }
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4GroupAppUrl").val();
            var autoFreshFlag = $("#freshPage4GroupAppFlag").val();
            if (oldUrl == curHash) {
                //刷新页面
                var appId = $("#appId4deployApp").val();
                //var serverId = $("#serverId4deployApp").val() ;//这个是选中的所有的serverId
                var serverArr = serverId.split(",");
                var jsonParam = {
                    appId: appId,
                    serverId: serverId
                };
                var serverURL = "/" + jcfManager.appName + "/deployMgr/updatePageDeployStatus.action";
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    var isClose = "1";
                    var len = serverArr.length;
                    collection.each(function(m) {
                        var serverId = m.get("serverId");
                        for (var i = 0; i < len; i++) {
                            var cc = serverArr[i];
                            if (cc == serverId) {
                                var cStatus = model.get("" + serverId + "");
                                if (cStatus != undefined && cStatus != "3") {
                                    if (cStatus == "7" || cStatus == "8" || cStatus == "9") {
                                        //
                                        isClose = "0";
                                    }
                                    m.set("appStatus", cStatus);
                                } else {
                                    //如果不存在则表示已反部署
                                    //m.set("appStatus","3") ;
                                    collection.remove(m);
                                }
                            } else {
                                continue;
                            }
                        }
                    });
                    if (isClose == "1") {
                        window.clearInterval(autoFreshFlag);
                    }
                });
            } else {
                //结束自动刷新
                window.clearInterval(autoFreshFlag);
            }
        },
        updatePageAppStatus4PartUpdate: function(collection) {
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4GroupAppUrl").val();
            var autoFreshFlag = $("#freshPage4GroupAppFlag").val();
            if (oldUrl == curHash) {
                //刷新页面
                var appId = $("#appId4deployApp").val();
                var serverId = $("#serverId4deployApp").val();
                //这个是选中的所有的serverId
                var serverArr = serverId.split(",");
                var jsonParam = {
                    appId: appId,
                    serverId: serverId
                };
                var serverURL = "/" + jcfManager.appName + "/deployMgr/updatePageDeployStatus.action";
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    var isClose = "1";
                    var len = serverArr.length;
                    collection.each(function(m) {
                        var serverId = m.get("serverId");
                        for (var i = 0; i < len; i++) {
                            var cc = serverArr[i];
                            if (cc == serverId) {
                                var cStatus = model.get("" + serverId + "");
                                if (cStatus != undefined && cStatus != "3") {
                                    if (cStatus == "7" || cStatus == "8" || cStatus == "9") {
                                        //
                                        isClose = "0";
                                    }
                                    m.set("appStatus", cStatus);
                                } else {
                                    //如果不存在则表示已反部署
                                    // m.set("appStatus","3") ;
                                    collection.remove(m);
                                }
                            } else {
                                continue;
                            }
                        }
                    });
                    if (isClose == "1") {
                        window.clearInterval(autoFreshFlag);
                    }
                });
            } else {
                //结束自动刷新
                window.clearInterval(autoFreshFlag);
            }
        }
    });
    return GroupServerAppStatusLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupServerAppStautsLayout-debug.tpl", [], '<div id = "tipInfoRegion"></div>\n<div id = "baseInfoRegion"></div>\n<div  id = "listRegion"></div>\n<div>\n	<button id = "batchReDeployBtn" class = "btn btn-sm btn-primary <%if(deployAuthFlag!=\'true\'){%>disabled<%}%>">重新部署</button>\n	&nbsp;&nbsp;\n	<button id = "batchReundeployBtn" class = "btn btn-sm btn-primary <%if(undeployAuthFlag!=\'true\'){%>disabled<%}%>">重新反部署</button>\n</div>\n<div id = "pagebarRegion"></div>\n<input type = "hidden" id = "groupIdHiddenOnPage" value = "<%=groupId%>" />\n<input type = "hidden" id = "appIdHiddenOnPage" value = "<%=appId%>" />\n<input id = "freshPage4GroupAppUrl" type = "hidden" />\n<input id = "freshPage4GroupAppFlag" type = "hidden" />\n<input id = "serverId4deployApp" type = "hidden" />\n<input id = "appId4deployApp" type = "hidden" />\n');

define("travsky/jcf/1.0.0/template/deploy/groupServerAppBaseInfo-debug.tpl", [], '<caption>应用基本信息</caption>\n<tbody>\n	<tr>\n		<td width = "10%">应用部署包:</td>\n		<td width  = "20%"><%=appName%></td>\n		<td width = "10%">当前版本号:</td>\n		<td width  = "20%"><%=appVersion%></td>\n		<td width = "*%"></td>\n	</tr>\n</tbody>');

define("travsky/jcf/1.0.0/template/deploy/groupServerAppStatusItem-debug.tpl", [], '<td><input type = "checkbox" class = "serverIds" appStatus = "<%=appStatus%>" name = "serverIds" value = "<%=serverId%>"></td>\n<td><%=serverName%></td>\n<td><%=appName%></td>\n<td>\n	<%\n		if(appStatus=="1"){\n			%>已部署<%\n		}else if (appStatus=="2"){\n			%>部署失败<%\n		}else if (appStatus=="3"){\n			%>已反部署<%\n		}else if (appStatus=="4"){\n			%>反部署失败<%\n		}else if (appStatus=="5"){\n			%>已回滚<%\n		}else if (appStatus=="6"){\n			%>回滚失败<%\n		}else if (appStatus=="7"){\n			%>正在部署<%\n		}else if (appStatus=="8"){\n			%>正在反部署<%\n		}else if (appStatus=="9"){\n			%>正在回滚<%\n		}else{\n			%><%=appStatus%><%\n		}\n	%>\n</td>\n<td><%=uploadDate%></td>\n<td class = "deployOrNotTd">\n	<%\n		if(appStatus=="2"){\n		%>\n			<%if(deployAuthFlag=="true"){\n			%><a href = "reDeploy" class ="myhand">重新部署</a><%\n			} else{\n			%><span class = "text-info">重新部署</span><%\n			}%>\n		<%\n		}else if (appStatus=="1"){\n		%>\n			<%if(undeployAuthFlag=="true"){\n			%><a href = "undeploy" class ="myhand">反部署</a><%\n			} else{\n			%><span class = "text-info">反部署</span><%\n			}%>\n		<%\n		}else if (appStatus=="4"){\n		%>\n			<%if(undeployAuthFlag=="true"){\n			%><a href = "reUndeploy" class ="myhand">重新反部署</a><%\n			} else{\n			%><span class = "text-info">重新反部署</span><%\n			}%>\n		<%\n		}\n	%>\n</td>\n');

define("travsky/jcf/1.0.0/template/deploy/groupServerAppStatusList-debug.tpl", [], '<thead>\n  <tr>\n    <th><input type = "checkbox" id = "selectAll"/></th>\n    <th>服务器名称</th>\n    <th>部署包</th>\n    <th>部署状态</th>\n    <th>上传时间</th>\n    <th>操作</th>\n  </tr>\n</thead>\n<tbody></tbody>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-15
 * Time: 下午03:25:28
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupAppConfigLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "ajaxfileupload-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppConfigLayout-debug.tpl");
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupAppCfgBaseInfo-debug.tpl");
    var currentPathTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgCurPath-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgList-debug.tpl");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var QueryString = require("querystring-debug");
    //ajax文件上传组件
    require("ajaxfileupload-debug");
    var ItemTipView = require("travsky/jcf/1.0.0/view/itemTip_view-debug");
    //基本信息视图
    var ServerBaseInfoView = Marionette.ItemView.extend({
        template: _.template(baseInfoTmpStr),
        tagName: "table",
        className: "table"
    });
    //当前目录视图
    var CurrentPathView = Marionette.ItemView.extend({
        template: _.template(currentPathTmpStr),
        tagName: "table",
        className: "table"
    });
    //列表每一项视图
    var AppCfgItemView = Marionette.ItemView.extend({
        initialize: function() {
            var downloadCfgAuthFlag = authCheck.getDownloadCfgFlag();
            this.model.set("downloadCfgAuthFlag", downloadCfgAuthFlag);
        },
        tagName: "tr",
        template: _.template(itemTmpStr)
    });
    //列表视图
    var AppCfgListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table",
        template: _.template(listTmpStr),
        childView: AppCfgItemView,
        childViewContainer: "tbody"
    });
    var GroupAppCongfigLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            this.on("showPageInfo", this.showPageInfo);
            var uploadCfgAuthFlag = authCheck.getUploadCfgFlag();
            this.model = new Backbone.Model();
            this.model.set("uploadCfgAuthFlag", uploadCfgAuthFlag);
        },
        template: _.template(layoutTmpStr),
        regions: {
            baseInfoRegion: "#baseInfoRegion",
            tipInfoRegion: "#tipInfoRegion",
            currentDirRegion: "#currentDirRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click td.fileNameTd span.file_dir_icon": "goToChildPath",
            "click #appCfgBackParentPathBtn": "backParentPath",
            "click td.downloadAppCfgTd a": "downloadAppCfg",
            "click #uploadAppCfgBtn": "uploadAppCfg",
            "click #toLastPageBtn": "toLastPage"
        },
        toLastPage: function() {
            var groupId = this.queryString.groupId;
            var status = this.queryString.status;
            var jString = {
                groupId: groupId,
                status: status
            };
            appRouter.navigate("deployMgr/group/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        showPageInfo: function() {
            //显示信息
            var appName = this.queryString.appName;
            var appVersion = this.queryString.appVersion;
            var groupId = this.queryString.groupId;
            var serverId = this.queryString.serverId;
            var currentPage = this.queryString.currentPage;
            var pageSize = this.queryString.pageSize;
            if (currentPage == undefined || currentPage == "") {
                currentPage = 1;
                pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.appName = appName;
            jsParam.appVersion = appVersion;
            jsParam.groupId = groupId;
            jsParam.serverId = serverId;
            jsParam.currentPage = currentPage;
            jsParam.pageSize = pageSize;
            //当前配置文件所在的目录
            var tempStr = this.queryString.currentCfgPath;
            var dd = "";
            if (tempStr == undefined || tempStr == null || $.trim(tempStr).length == 0) {
                dd = "";
            } else {
                dd = decodeURIComponent(tempStr);
            }
            jsParam.currentCfgPath = dd;
            this.showPageInfo4Private(jsParam);
        },
        showPageInfo4Private: function(jsParam) {
            //内部使用方法
            delete jsParam.status;
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/getConfigFileList4Group.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                var tempStr = data.curFilepPath;
                var ee = encodeURIComponent(tempStr);
                self.queryString.currentCfgPath = ee;
                self.queryString.backOrSubstrateDirFlag = "";
                appRouter.navigate("deployMgr/group/appConfig/param/" + QueryString.stringify(self.queryString));
                //显示基本信息
                var baseModel = new Backbone.Model(data.baseInfo);
                baseModel.set("appName", data.appName);
                baseModel.set("appVersion", data.appVersion);
                baseModel.set("serverName", data.serverName);
                var baseView = new ServerBaseInfoView({
                    model: baseModel
                });
                self.baseInfoRegion.show(baseView);
                //当前目录视图
                var curPathModel = new Backbone.Model({
                    curFilepPath: data.curFilepPath
                });
                var curPathView = new CurrentPathView({
                    model: curPathModel
                });
                self.currentDirRegion.show(curPathView);
                //分页列表视图
                var collection = new Backbone.Collection(data.pageBean.recordList);
                var listView = new AppCfgListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //分页栏视图
                var model = new Backbone.Model(data.pageBean);
                model.set("uriSection", "group/appConfig");
                delete self.queryString.backOrSubstrateDirFlag;
                delete self.queryString.clickPathName;
                var pb = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pb);
            });
        },
        checkUploadCfg: function() {
            var flag = false;
            var $inputfile = $("#inputfile");
            var fileName = $.trim($inputfile.val());
            var len = fileName.length;
            var ind = fileName.lastIndexOf(".");
            var fileExt = fileName.substring(ind + 1, len);
            if (len > 0 && ind > 0) {
                if (fileExt == "properties" || fileExt == "txt" || fileExt == "xml" || fileExt == "cfg" || fileExt == "drl") {
                    flag = true;
                }
            }
            if (!flag) {
                var tv = new ItemTipView();
                tv.model.set("flag", "false");
                tv.model.set("msg", "上传文件格式有误!");
                this.tipInfoRegion.show(tv);
            } else {
                var target = $inputfile[0];
                flag = util.checkFileSize(target, 1);
            }
            return flag;
        },
        uploadAppCfg: function() {
            //组上传配置文件
            var flag = this.checkUploadCfg();
            if (flag) {
                flag = this.checkRegistryRun();
            }
            if (flag) {
                this.ajaxFileUpload();
            }
        },
        checkRegistryRun: function() {
            //检查注册库服务器是否正常运行
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/checkRegistryStatus.action";
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            var self = this;
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == "1") {
                        flag = true;
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", data.errMsg);
                        self.tipInfoRegion.show(tv);
                    }
                } else {
                    var tv = new ItemTipView();
                    tv.model.set("flag", "false");
                    tv.model.set("msg", data.errMsg);
                    self.tipInfoRegion.show(tv);
                }
            });
            return flag;
        },
        ajaxFileUpload: function() {
            var self = this;
            var hiddenCurrentCfgPath = $("#hiddenCurrentCfgPath").val();
            var groupId = this.queryString.groupId;
            $.ajaxFileUpload({
                url: "/" + jcfManager.appName + "/deployMgr/uploadAppConfigFile4Group.action",
                //用于文件上传的服务器端请求地址
                type: "post",
                data: {
                    groupId: "" + groupId,
                    currentCfgPath: hiddenCurrentCfgPath
                },
                //此参数非常严谨，写错一个引号都不行
                secureuri: false,
                //一般设置为false
                fileElementId: "inputfile",
                //文件上传空间的id属性  <input type="file" id="file" name="file" />
                dataType: "JSON",
                //返回值类型 一般设置为json
                success: function(data, status) {
                    //服务器成功响应处理函数
                    var result = $.parseJSON($(data).text());
                    if (result.flag == "true") {
                        self.showPageInfo();
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", "" + result.errMsg);
                        self.tipInfoRegion.show(tv);
                    }
                },
                error: function(data, status, e) {
                    //服务器响应失败处理函数
                    alert(e);
                }
            });
        },
        showDirList: function(backOrSubstrateDirFlag, clickPathName) {
            //返回上层目录或则，进入下层目录
            var jsParam = this.queryString;
            jsParam.backOrSubstrateDirFlag = backOrSubstrateDirFlag;
            jsParam.clickPathName = clickPathName;
            var hiddenCurrentCfgPath = $("#hiddenCurrentCfgPath").val();
            //var currentCfgPath = encodeURIComponent (hiddenCurrentCfgPath) ;
            var currentCfgPath = hiddenCurrentCfgPath;
            jsParam.currentCfgPath = currentCfgPath;
            this.showPageInfo4Private(jsParam);
        },
        goToChildPath: function(e) {
            //进入子目录
            var $span = $(e.target);
            var clickPathName = $.trim($span.text());
            var backOrSubstrateDirFlag = "next";
            this.showDirList(backOrSubstrateDirFlag, clickPathName);
        },
        backParentPath: function() {
            var backOrSubstrateDirFlag = "back";
            var clickPathName = "parent";
            this.showDirList(backOrSubstrateDirFlag, clickPathName);
        },
        downloadAppCfg: function(e) {
            e.preventDefault();
            var $a = $(e.target);
            var downloadFileName = $a.attr("href");
            var serverName = $("#hiddenServerId").val();
            var currentDirPath4AppCfg = $.trim($("#hiddenCurrentCfgPath").val());
            var serverURL = "/" + jcfManager.appName + "/deployMgr/downloadAppConfigFile.action";
            var form = $("<form>");
            //定义一个form表单
            form.attr("style", "display:none");
            form.attr("target", "");
            form.attr("method", "post");
            form.attr("action", serverURL);
            var input1 = $("<input>");
            input1.attr("type", "hidden");
            input1.attr("name", "exportData");
            input1.attr("value", new Date().getMilliseconds());
            var input2 = $("<input type = 'hidden' name = 'serverName' value = '" + serverName + "' />");
            var input3 = $("<input type = 'hidden' name = 'downloadFileName' value = '" + downloadFileName + "' />");
            var input4 = $("<input type = 'hidden' name = 'currentDirPath4AppCfg' value = '" + currentDirPath4AppCfg + "' />");
            $("body").append(form);
            //将表单放置在web中
            form.append(input1);
            form.append(input2);
            form.append(input3);
            form.append(input4);
            form.submit();
        }
    });
    return GroupAppCongfigLayout;
});

define("travsky/jcf/1.0.0/template/deploy/serverAppConfigLayout-debug.tpl", [], '<div  id = "baseInfoRegion" ></div>\n<div id = "tipInfoRegion"></div>\n<div>\n	<form id = "uploadAppCfgForm"   method="post" enctype="multipart/form-data" target="hidden_frame">\n		<table class="table">\n	   		<caption>上传配置文件</caption>\n	   		 <tbody>\n	   			<tr>\n	   				<td width = "20%"><input type="file" id="inputfile" name = "inputfile" /></td>\n	   				<td width  = "10%">\n	   					<button id = "uploadAppCfgBtn" type="button" class="btn input-sm  <%if(uploadCfgAuthFlag!=\'true\'){%>disabled<%}%>">提交</button>\n	   				</td>\n	   				<td><span class = "text-info">(文件后缀满足:properties,txt,xml,cfg,drl,且文件大小不超过1MB)</span></td>\n	   				<td width = "*%"></td>\n	   			</tr>\n	   		 </tbody>\n	   	</table>\n   	</form>\n</div>\n\n<iframe name="hidden_frame" style="display:none;"></iframe>\n    \n<div  id = "currentDirRegion" ></div>\n<br>\n<div id = "listRegion" ></div>\n<div id = "pagebarRegion" ></div>\n\n<button id = "toLastPageBtn" class = "btn btn-primary" >返回</button>\n');

define("travsky/jcf/1.0.0/template/deploy/groupAppCfgBaseInfo-debug.tpl", [], '<caption>上传配置文件</caption>\n<tbody>\n	<tr>\n		<td width = "9%">应用名称:</td>\n		<td width  = "10%"><%=appName%></td>\n		<td width = "9%">应用版本:</td>\n		<td width  = "10%"><%=appVersion%></td>\n		<td width = "9%">所属分组:</td>\n		<td width  = "10%"><%=groupName%></td>\n		<td width = "9%">服务器:</td>\n		<td width  = "10%"><%=serverName%></td>\n		\n		<td><input type = "hidden" id = "hiddenServerId" value = "<%=serverName%>"/></td>\n	</tr>\n</tbody>');

define("travsky/jcf/1.0.0/template/deploy/serverAppCfgCurPath-debug.tpl", [], '<tr>\n	<td width = "10%"><button type="button" id = "appCfgBackParentPathBtn"  class="btn input-sm">返回上层目录</button></td>\n	<td width = "10%" align ="right">当前目录:</td>\n	<td width = "30%"><%=curFilepPath%></td>\n	<td width = "*%"><input type = "hidden" id = "hiddenCurrentCfgPath" value = "<%=curFilepPath%>"/></td>\n</tr>\n');

define("travsky/jcf/1.0.0/template/deploy/serverAppCfgItem-debug.tpl", [], '<td class = "fileNameTd">\n<%if("文件夹"==category){\n		%>\n			<span class = "file_dir_icon myhand" ><%=name%><span>\n		<%\n	 }else if ("文件"==category){\n	 	%>\n			<span class = "file_file_icon"><%=name%><span>\n		<%\n}%>\n</td>\n<td><%=category%></td>\n<td class = "downloadAppCfgTd" >\n<%if("文件夹"==category||downloadCfgAuthFlag!="true"){\n   %>下载<%\n}else if ("文件"==category){\n   %><a href = "<%=name%>" >下载</a><%\n}%>\n</td>');

define("travsky/jcf/1.0.0/template/deploy/serverAppCfgList-debug.tpl", [], "<thead>\n  <tr>\n    <th>文件名称</th>\n    <th>文件类型</th>\n    <th>下载</th>\n  </tr>\n</thead>\n<tbody></tbody>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-20
 * Time: 下午01:19:08
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupDeployTabCreateNewDeploy-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/confirm_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployList-debug.tpl");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployTabCreateNewDeploy-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    //应用配置日志列表视图
    var GroupDeployAppLogCfgLayout = require("travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug");
    var inputCheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var AlertView = require("travsky/jcf/1.0.0/view/alert_view-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    //点击下一步，选择要部署的服务器，显示页面
    //var GroupDeployNewDeployNextLayout = require("./groupDeployNewDeployNext") ;
    var ItemView = Marionette.ItemView.extend({
        template: _.template(itemTmpStr),
        tagName: "tr"
    });
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody"
    });
    //点击下一步，选择要部署的服务器，显示页面
    var serverItemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployServerSelectItem-debug.tpl");
    var serverListTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployServerSelectList-debug.tpl");
    var ServerItemView = Marionette.ItemView.extend({
        template: _.template(serverItemTmpStr),
        tagName: "tr",
        events: {
            "click input:checkbox[name='serverIds']": "selectServer"
        },
        selectServer: function(e) {
            var $tbody = $(e.target).parent("td").parent("tr").parent("tbody");
            var $allCbox = $tbody.find("input:checkbox[name='serverIds']");
            var $selCbox = $tbody.find("input:checkbox[name='serverIds']:checked");
            var len1 = $allCbox.length;
            var len2 = $selCbox.length;
            if (len1 == len2) {
                $("#allSelected4Server").prop("checked", true);
            } else {
                $("#allSelected4Server").prop("checked", false);
            }
        }
    });
    var ServerListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(serverListTmpStr),
        childView: ServerItemView,
        childViewContainer: "tbody",
        events: {
            "click #allSelected4Server": "checkedAll"
        },
        checkedAll: function(e) {
            var $checkAll = $(e.target);
            var flag = e.target.checked;
            var $tbody = $checkAll.parent("th").parent("tr").parent("thead").siblings("tbody");
            var $cbox = $tbody.find("input:checkbox[name='serverIds']");
            $cbox.each(function() {
                this.checked = flag;
            });
        }
    });
    //部署管理
    //---群组管理
    //------新建部署
    var CreateNewDeployTabLayout = Marionette.LayoutView.extend({
        template: _.template(layoutTmpStr),
        initialize: function(options) {
            this.queryString = options.queryString;
            var authAppLogOperFlag = authCheck.getAppLogOperFlag();
            this.model.set("authAppLogOperFlag", authAppLogOperFlag);
            this.on("searchListInfo", this.searchListInfo);
        },
        regions: {
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion",
            serverListRegion: "#serverListRegion"
        },
        events: {
            "click #groupServerCfgNextStepBtn": "groupServerCfgNextStep",
            "click #backStep4SelectAppBtn": "backStep4SelectApp",
            "click #nextStep4ConfigAppLogBtn": "nextStep4ConfigAppLog",
            "click #appCfgApplyBtn": "appCfgApply",
            "click #appCfgBackBtn": "appCfgBack",
            "click #appCfgNextBtn": "appCfgNext",
            "blur #groupAppName": "checkGroupAppName",
            "blur #appConfigFileName": "checkAppConfigFileName",
            "blur #logSavePath": "checkLogSavePath",
            "blur #maxLogFileSize": "checkMaxLogFileSize",
            "blur #logFileMaxBackupIndex": "checkLogFileMaxBackupIndex",
            "click #selectRunning": "checkSelectRunning",
            "blur #maxRunningLogFileSize": "checkMaxRunningLogFileSize",
            "blur #runningLogFileMaxBackupIndex": "checkRunningLogFileMaxBackupIndex",
            "blur #runningLogSavePath": "checkRunningLogSavePath"
        },
        checkSelectRunning: function() {
            var runFlag = $("#selectRunning").prop("checked");
            if (!runFlag) {
                inputCheckUtil.clearInput("maxRunningLogFileSize");
                inputCheckUtil.clearInput("runningLogFileMaxBackupIndex");
                inputCheckUtil.clearInput("runningLogSavePath");
            }
        },
        appCfgApply: function(inFlag) {
            //应用日志配置---应用按钮点击
            //名称不相同并且不为null
            var flag = this.checkLogForm();
            var runningCheckFlag = $("#selectRunning").prop("checked");
            if (runningCheckFlag) {
                if (flag) {
                    flag = this.checkRunningLogForm();
                }
            }
            if (flag) {
                //如果表单验证都通过
                $("#appCfgApplyBtn").addClass("disabled");
                this.submitCfgForm(inFlag);
            }
        },
        checkLogForm: function() {
            ////检查应用日志信息
            if (this.checkGroupAppName() && this.checkAppConfigFileName() && this.checkLogSavePath() && this.checkMaxLogFileSize() && this.checkLogFileMaxBackupIndex()) {
                return true;
            }
            return false;
        },
        checkRunningLogForm: function() {
            if (this.checkRunningLogSavePath() && this.checkMaxRunningLogFileSize() && this.checkRunningLogFileMaxBackupIndex()) {
                return true;
            }
            return false;
        },
        submitCfgForm: function(showNextFlag) {
            //保存页面填写的配置文件信息
            var serverURL = "/" + jcfManager.appName + "/log/saveAppCfgLog.action";
            var formIds = [ "groupAppName", "appConfigFileName", "logSavePath", "maxLogFileSize", "logFileMaxBackupIndex", "logLevel", "logAppenderType", "runningLogSavePath", "maxRunningLogFileSize", "runningLogFileMaxBackupIndex" ];
            //var audit = "" ;
            var running = "";
            var runFlag = $("#selectRunning").prop("checked");
            if (runFlag) {
                running = $("#selectRunning").val();
            }
            var jsParam = util.getFormInputObj(formIds);
            var groupId = this.queryString.groupId;
            jsParam.groupId = groupId;
            //jsParam.audit = audit ;
            jsParam.running = running;
            var self = this;
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $("#isSubmitFormFlag").val("true");
            var alertView = new AlertView();
            $.when(ajaxing).done(function(data) {
                var res = "";
                for (var element in data) {
                    if (data[element] === "0") {
                        res = element + "配置失败,";
                    }
                }
                if (res === "") {
                    alertView.model.set("msg", "日志配置成功!");
                    jcfManager.dialogRegion.show(alertView);
                    if (showNextFlag == true) {
                        //如果是直接点击下一步来的，则要显示下一页
                        self.showAppLogList();
                    }
                } else {
                    alertView.model.set("msg", res);
                    jcfManager.dialogRegion.show(alertView);
                }
            });
        },
        checkGroupAppName: function() {
            var id = "groupAppName";
            var maxLength = 30;
            var flag = inputCheckUtil.checkInputMatchMaxLength(id, maxLength);
            return flag;
        },
        checkAppConfigFileName: function() {
            //检查应用日志配置文件名称
            var id = "appConfigFileName";
            var groupId = this.queryString.groupId;
            var appConfigFileName = $("#" + id).val();
            var checkFlag = false;
            var flag = inputCheckUtil.checkNotNull(id);
            if (flag) {
                var serverURL = "/" + jcfManager.appName + "/log/haveSameFileName.action";
                var jsonParam = {
                    groupId: groupId,
                    appConfigFileName: appConfigFileName
                };
                var ajaxing = util.dealSYNCHAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        checkFlag = confirm("存在配置文件，是否确认覆盖");
                    } else {
                        checkFlag = true;
                    }
                });
            }
            return checkFlag;
        },
        checkLogSavePath: function() {
            //检查应用日志存放路径
            var id = "logSavePath";
            var maxLength = 200;
            var regular = /^\w+(\/\w+)*$/;
            var errTip = "存储路径设置不正确";
            var flag = inputCheckUtil.checkInputMatchRegularAndNotNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkMaxLogFileSize: function() {
            //检查应用日志文件最大大小
            var id = "maxLogFileSize";
            var maxLength = 10;
            var regular = /^[1-9]\d*[kKmMgG][bB]$/;
            var errTip = "单位为kb,KB,mb,MB,gb,GB";
            var flag = inputCheckUtil.checkInputMatchRegularAndNotNull(id, maxLength, regular, errTip);
            return flag;
        },
        checkLogFileMaxBackupIndex: function() {
            var id = "logFileMaxBackupIndex";
            var maxLength = 10;
            var flag = inputCheckUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            return flag;
        },
        checkMaxRunningLogFileSize: function() {
            var id = "maxRunningLogFileSize";
            var cflag = $("#selectRunning").prop("checked");
            var flag = true;
            if (cflag) {
                var maxLength = 10;
                var regular = /^[1-9]\d*[kKmMgG][bB]$/;
                var errTip = "单位为kb,KB,mb,MB,gb,GB";
                flag = inputCheckUtil.checkInputMatchRegularAndNotNull(id, maxLength, regular, errTip);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkRunningLogFileMaxBackupIndex: function() {
            var id = "runningLogFileMaxBackupIndex";
            var cflag = $("#selectRunning").prop("checked");
            var flag = true;
            if (cflag) {
                var maxLength = 10;
                flag = inputCheckUtil.checkInputMatchPositiveIntegerAndMaxLength(id, maxLength);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkRunningLogSavePath: function() {
            var id = "runningLogSavePath";
            var cFlag = $("#selectRunning").prop("checked");
            var flag = true;
            if (cFlag) {
                var maxLength = 200;
                var regular = /^\w+(\/\w+)*$/;
                var errTip = "存储路径设置不正确";
                flag = inputCheckUtil.checkInputMatchRegularAndNotNull(id, maxLength, regular, errTip);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        appCfgBack: function() {
            this.$el.find("#page2").removeClass("hidden");
            this.$el.find("#page3").addClass("hidden");
        },
        appCfgNext: function() {
            //显示应用配置文件列表前，将页面填写信息保存到session中
            var submitFlag = $("#isSubmitFormFlag").val();
            var confirmModel = new ConfirmModel();
            confirmModel.set({
                btnok: "保存",
                btncl: "不保存",
                msg: "是否需要保存保存信息?"
            });
            var confirmView = new ConfirmView({
                model: confirmModel
            });
            var self = this;
            if ("true" == submitFlag) {
                this.showAppLogList();
            } else {
                jcfManager.dialogRegion.show(confirmView);
                confirmView.confirm(function(retFlag) {
                    if (retFlag) {
                        //保存配置文件
                        self.appCfgApply(true);
                    } else {
                        //放弃保存
                        self.showAppLogList();
                    }
                });
            }
        },
        backStep4SelectApp: function() {
            //选择服务器页面返回上个选择应用页面
            this.$el.find("#page1").removeClass("hidden");
            this.$el.find("#page2").addClass("hidden");
        },
        nextStep4ConfigAppLog: function() {
            //下一步配置应用日志
            var $page2 = this.$el.find("#page2");
            var $servers = $page2.find("#serverListRegion").find("input:checkbox[name='serverIds']:checked");
            var alertView = new AlertView();
            if ($servers.length == 0) {
                alertView.model.set("msg", "请选择服务器!");
                jcfManager.dialogRegion.show(alertView);
            } else {
                var cfgFlag = $page2.find("input:radio[name='cfgLogFlag']:checked").val();
                if (cfgFlag == "true") {
                    this.$el.find("#page2").addClass("hidden");
                    this.$el.find("#page3").removeClass("hidden");
                } else {
                    //显示应用配置文件列表前，将页面填写信息保存到session中
                    this.showAppLogList();
                }
            }
        },
        showAppLogList: function() {
            //显示应用日志列表页面
            //第一步:获取选中的app信息
            var $listRegion = this.$el.find("#page1 #listRegion");
            var $radio = $listRegion.find("input:radio.appTagClass[name='appId']:checked");
            var appId = $.trim($radio.val());
            //第二步:获取选中的所有服务器
            var serverIds = "";
            //拼接字符串逗号','分割
            var $page2 = this.$el.find("#page2");
            var $servers = $page2.find("#serverListRegion").find("input:checkbox[name='serverIds']:checked");
            $servers.each(function() {
                var curVal = $(this).val();
                serverIds += curVal;
                serverIds += ",";
            });
            if ($servers.length > 0) {
                serverIds = serverIds.substring(0, serverIds.length - 1);
            }
            //修改地址栏地址
            var param = {
                groupId: this.queryString.groupId,
                appId: appId,
                serverIds: serverIds,
                currentPage: "1",
                pageSize: jcfManager.defaultPageSize
            };
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/group/appLogCfg/param/" + QueryString.stringify(param));
            var cfgLogLayout = new GroupDeployAppLogCfgLayout({
                queryString: param
            });
            jcfManager.contentRegion.show(cfgLogLayout);
            cfgLogLayout.trigger("showPageInfo");
        },
        groupServerCfgNextStep: function() {
            //点击下一步显示，选择服务器的页面
            var $listRegion = this.$el.find("#page1 #listRegion");
            var $radio = $listRegion.find("input:radio.appTagClass[name='appId']:checked");
            var appId = $.trim($radio.val());
            var appName = $.trim($radio.attr("title"));
            var appVersion = $.trim($radio.attr("appVersion"));
            var alertView = new AlertView();
            //将选中的应用保存起来后面，填写日志时会使用
            //获取选中的应用名称，应用version
            var ttStr = appName + "_" + appVersion;
            $("#groupAppName").val(ttStr);
            if (appId.length == 0) {
                alertView.model.set("msg", "请选择有效应用!");
                jcfManager.dialogRegion.show(alertView);
            } else {
                this.$el.find("#page1").addClass("hidden");
                this.$el.find("#page2").removeClass("hidden");
            }
        },
        searchListInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mSearchApp.action";
            var jsonParam = {
                groupId: this.queryString.groupId,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                //------------------显示页面第一部分//应用列表页面---------------//
                var pageBean = data.pageBean;
                var model = new Backbone.Model(pageBean);
                var collection = new Backbone.Collection(pageBean.recordList);
                //显示列表区
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //显示分页栏区
                model.set("uriSection", "group");
                var pb = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pb);
                //------------------显示页面第二部分//服务器列表页面---------------------//
                var slCollection = new Backbone.Collection(data.serverList);
                var serverListView = new ServerListView({
                    collection: slCollection
                });
                self.serverListRegion.show(serverListView);
            });
        }
    });
    return CreateNewDeployTabLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployItem-debug.tpl", [], '<td>\n	<input class = "appTagClass" type="radio" checked="checked" name="appId" value="<%=id%>" title="<%=name%>" appVersion = "<%=version %>" />\n</td>\n<td><%=name%></td>\n<td><%=version%></td>\n<td><%=userName%></td>\n<td><%=uploadDate%></td>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployList-debug.tpl", [], '<table class = "table table-bordered list">\n<caption>可部署应用包列表</caption>\n<thead>\n  <tr>\n    <th>选择</th>\n    <th>部署包名称</th>\n    <th>版本</th>\n    <th>上传用户</th>\n    <th>上传时间</th>\n  </tr>\n</thead>\n<tbody></tbody>\n</table>\n');

define("travsky/jcf/1.0.0/template/deploy/groupDeployTabCreateNewDeploy-debug.tpl", [], '<!----------------------------------可部署应用包列表页面-------------------------------------------->\n<div id = "page1">\n	<div id = "listRegion"></div><!--显示列表区域-->\n	<div id = "pagebarRegion"></div><!--显示分页栏条区域-->\n	<div>\n		<button type="button" id = "groupServerCfgNextStepBtn" class="btn">下一步</button>\n	</div>\n</div>\n\n<!---------------------------------下面为待部署服务器列表页面--------------------------------------->\n<div id = "page2" class = "hidden" >\n	<div id = "serverListRegion"></div>\n	<div>\n		<table class = "table list">\n			<caption>是否配置应用日志</caption>\n			<tr>\n				<td width = "7%"><input type = "radio" name = "cfgLogFlag" checked = "checked" value = "true"/>是</td>\n				<td width = "7%"><input type = "radio" name = "cfgLogFlag"  value = "false"/>否</td>\n				<td width = "*%"></td>\n			</tr>\n		</table>\n	</div>\n	<div>\n		<button  id = "backStep4SelectAppBtn" type="button"  class="btn">上一步</button>&nbsp;&nbsp;\n		<button  id = "nextStep4ConfigAppLogBtn" type="button"  class="btn">下一步</button>\n	</div>\n</div>\n\n<!----------------------------------应用日志配置页面------------------------->\n<br/>\n<div id = "page3" class = "hidden" >\n   <form class="form-horizontal" id = "appCfgForm"  role="form" method= "POST">\n   		 <div class="form-group" id = "groupAppNameDiv">\n	        <label for="groupAppName" class="col-sm-3 control-label">应用名称：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="groupAppName" readonly="readonly"   class="form-control input-sm"  placeholder="必填项">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "groupAppNameTip"></span></div>\n	     </div>\n	     \n   		 <div class="form-group" id = "appConfigFileNameDiv">\n	        <label for="appConfigFileName" class="col-sm-3 control-label">应用日志配置文件名称：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="appConfigFileName"   class="form-control input-sm"  placeholder="名称需与应用包名一致(如为适配服务,建议为适配服务名)">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "appConfigFileNameTip"></span></div>\n	     </div>\n	     \n	      <div class="form-group" id = "logSavePathDiv">\n	        <label for="logSavePath" class="col-sm-3 control-label">应用日志存放路径：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="logSavePath"   class="form-control input-sm"  placeholder="如:  app/abc 或  abc">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "logSavePathTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "maxLogFileSizeDiv">\n	        <label for="maxLogFileSize" class="col-sm-3 control-label">应用日志文件最大大小：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="maxLogFileSize"  value = "512MB"  class="form-control input-sm"  placeholder="必填项">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "maxLogFileSizeTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "logFileMaxBackupIndexDiv">\n	        <label for="logFileMaxBackupIndex" class="col-sm-3 control-label">应用日志最多存放个数：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="logFileMaxBackupIndex"   class="form-control input-sm"  value = "10" placeholder="必填项">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "logFileMaxBackupIndexTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "logLevelDiv">\n	        <label for="logLevel" class="col-sm-3 control-label">应用日志级别：</label>\n	        <div class="col-sm-4">\n	           <select id="logLevel" class="form-control input-sm">\n	           		<%for(var i = 0 ; i < logLevels.length ;i++){\n	           			if(i==0){\n	           				%><option selected = "selected" value = "<%=logLevels[i]%>"><%=logLevels[i]%></option><%\n	           			}else{\n	           				%><option value = "<%=logLevels[i]%>"><%=logLevels[i]%></option><%\n	           			}\n	           		}%>\n	           </select>\n	        </div>\n	        <div><span id = "logLevelTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "logAppenderTypeDiv">\n	        <label for="logAppenderType" class="col-sm-3 control-label">应用日志格式：</label>\n	        <div class="col-sm-4">\n	      	   <select id="logAppenderType" class="form-control input-sm">\n	      	   		<%for(var j = 0 ; j < logTypes.length ; j++){\n	      	   			if(j==0){\n	      	   				%><option selected = "selected" value = "<%=logTypes[j].key%>"><%=logTypes[j].value%></option><%\n	      	   			}else{\n	      	   				%><option value = "<%=logTypes[j].key%>"><%=logTypes[j].value%></option><%\n	      	   			}\n	      	   		}%>\n	           </select>\n	        </div>\n	        <div><span id = "logAppenderTypeTip"></span></div>\n	     </div>\n	     \n	     <!--------------------------------第二部分------------------------------------------>\n	     \n	     \n	     <!--------------------------------第三部分------------------------------------------>\n	     \n	     <div class="form-group" id = "selectRunningDiv">\n	        <label for="selectRunning" class="col-sm-3 control-label">是否记录性能日志：</label>\n	        <div class="col-sm-4">\n	      	   <input id="selectRunning" value="1"  type="checkbox"/>\n	        </div>\n	        <div><span id = "selectRunningTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "runningLogSavePathDiv">\n	        <label for="runningLogSavePath" class="col-sm-3 control-label">性能日志存放路径：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="runningLogSavePath"   class="form-control input-sm"  placeholder="如:  app/abc 或  abc">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "runningLogSavePathTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "maxRunningLogFileSizeDiv">\n	        <label for="maxRunningLogFileSize" class="col-sm-3 control-label">性能日志文件最大大小：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="maxRunningLogFileSize" value = "512MB"  class="form-control input-sm"  placeholder="必填项">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "maxRunningLogFileSizeTip"></span></div>\n	     </div>\n	     \n	     <div class="form-group" id = "runningLogFileMaxBackupIndexDiv">\n	        <label for="runningLogFileMaxBackupIndex" class="col-sm-3 control-label">性能日志最多存放个数：</label>\n	        <div class="col-sm-4">\n	      	   <input type="text" id="runningLogFileMaxBackupIndex" value = "10"  class="form-control input-sm"  placeholder="必填项">\n	        </div>\n	        <div><span class = "text-danger">*</span><span id = "runningLogFileMaxBackupIndexTip"></span></div>\n	     </div>\n   </form>\n   <input type = "hidden" id = "isSubmitFormFlag"/>\n   <div class="form-group">\n	  <div class="col-sm-offset-2 col-sm-10">\n	     <button type="button" id = "appCfgApplyBtn" class="btn btn-warning  <%if(authAppLogOperFlag!=\'true\'){%>disabled<%}%>">应用</button>\n	     <button type="button" id = "appCfgBackBtn" class="btn">上一步</button>\n	     <button type="button" id = "appCfgNextBtn" class="btn">下一步</button>\n	  </div>\n   </div>\n</div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-27
 * Time: 上午10:57:43
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupDeployAppLogCfgLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layouTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgLayout-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    //列表每一项视图
    var ItemView = Marionette.ItemView.extend({
        tagName: "tr",
        template: _.template(itemTmpStr)
    });
    //列表视图
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody"
    });
    var GroupDeployAppLogCfgLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            this.on("showPageInfo", this.showPageInfo);
        },
        template: _.template(layouTmpStr),
        regions: {
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #deploySubmitBtn": "deploySubmit"
        },
        deploySubmit: function() {
            //直接部署
            var groupId = this.queryString.groupId;
            //获取选择的配置
            var jsParam = {};
            jsParam.appId = this.queryString.appId;
            jsParam.groupId = groupId;
            jsParam.serverId = this.queryString.serverIds;
            jsParam.operation = "6";
            var modelName = sidbarUtil.getModuleName();
            var flag = this.checkRegistryRun();
            //检查注册库是否正常运行，如果没有正常运行不容许部署应用
            if (flag) {
                flag = this.checkDeployApp(jsParam);
            }
            if (flag) {
                //configFile
                var serverURL = "/" + jcfManager.appName + "/deployMgr/mDeployApp.action";
                delete jsParam.operation;
                //选中的日志文件
                var configFile = $("input:radio[name='configFile']:checked").val();
                if (configFile != undefined) {
                    jsParam.configFile = configFile;
                } else {
                    jsParam.configFile = "";
                }
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        //跳转到应用管理页面
                        var param = {
                            deployFlag: "true",
                            groupId: groupId,
                            appId: jsParam.appId,
                            serverId: jsParam.serverId
                        };
                        appRouter.navigate(modelName + "/group/appDeploy/param/" + QueryString.stringify(param), {
                            trigger: true
                        });
                    } else {
                        alert("部署失败!");
                    }
                });
            }
        },
        checkRegistryRun: function() {
            //检查注册库服务器是否正常运行
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/checkRegistryStatus.action";
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == "1") {
                        flag = true;
                    } else {
                        alert(data.errMsg);
                    }
                } else {
                    alert(data.errMsg);
                }
            });
            return flag;
        },
        checkDeployApp: function(jsParam) {
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mApplication.action";
            var ajaxing = util.dealSYNCHAjaxRequest4JSObj(serverURL, jsParam);
            var flag = false;
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    flag = true;
                } else {
                    flag = false;
                    alert(data.msg);
                }
            });
            return flag;
        },
        showPageInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/findAppLogCfg.action";
            var groupId = this.queryString.groupId;
            var currentPage = this.queryString.currentPage;
            var pageSize = this.queryString.pageSize;
            var jsonParam = {
                groupId: groupId,
                currentPage: currentPage,
                pageSize: pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                //显示列表区域
                var collection = new Backbone.Collection(data.pageBean.recordList);
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //显示分页栏
                var pbModel = new Backbone.Model(data.pageBean);
                pbModel.set("uriSection", "group/appLogCfg");
                var pbView = new PagebarView({
                    model: pbModel,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
            });
        }
    });
    return GroupDeployAppLogCfgLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgLayout-debug.tpl", [], '<div id = "listRegion"></div>\n<div id = "pagebarRegion"></div>\n<div ><button type="button" id = "deploySubmitBtn" class="btn">部署</button></div>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgItem-debug.tpl", [], '<td ><input name="configFile" value="<%=appfile%>"  type="radio" checked="checked"/></td>\n<td><%=appfile%></td>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployAppLogCfgList-debug.tpl", [], '<table class = "table table-bordered">\n<caption>应用日志配置列表</caption>\n<thead>\n  <tr>\n    <th>选择</th>\n    <th>文件名称</th>\n  </tr>\n</thead>\n<tbody></tbody>\n</table>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployServerSelectItem-debug.tpl", [], '<td><input  type="checkbox" name="serverIds" value="<%=id%>" title="<%=name%>"  checked="checked"/></td>\n<td><%=name%></td>\n<td>\n	<%\n		if(category=="1"){\n			%>JCF服务器<%	\n		}else if (category=="2"){\n			%>适配服务器<%\n		}else if (category=="3"){\n			%>上下文服务器<%\n		}else if (category=="4"){\n			%>服务库<%\n		}else{\n			%><%=category%><%\n		}\n	%>\n</td>\n<td><%=ip%></td>');

define("travsky/jcf/1.0.0/template/deploy/groupDeployNewDeployServerSelectList-debug.tpl", [], '<table class = "table table-bordered">\n<caption>待部署服务器列表</caption>\n<thead>\n  <tr>\n    <th><input id="allSelected4Server" value="0" type="checkbox" checked="checked"/></th>\n    <th>服务器名称</th>\n    <th>服务器类型</th>\n    <th>服务器IP</th>\n  </tr>\n</thead>\n<tbody></tbody>\n</table>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-20
 * Time: 下午01:19:08
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/groupDeployTabServerDeployInfo-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployServerDeployItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployServerDeployList-debug.tpl");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/groupDeployTabServerDeployInfo-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var ItemView = Marionette.ItemView.extend({
        template: _.template(itemTmpStr),
        tagName: "tr",
        events: {
            "click .serverAppInfoTd a": "serverAppInfo"
        },
        serverAppInfo: function(e) {
            e.preventDefault();
            var serverId = this.model.get("serverId");
            var jString = {
                serverId: serverId
            };
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        }
    });
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody"
    });
    //部署管理
    //---群组管理
    //------服务器部署情况	
    var ServerDeployInfoTabLayout = Marionette.LayoutView.extend({
        template: _.template(layoutTmpStr),
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("searchListInfo", this.searchListInfo);
        },
        regions: {
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        searchListInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/server/searchGroupPageServer.action";
            var jsonParam = {
                groupId: this.queryString.groupId,
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                var pageBean = data.pageBean;
                var model = new Backbone.Model(pageBean);
                var collection = new Backbone.Collection(pageBean.recordList);
                //显示列表区
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //显示分页栏区
                model.set("uriSection", "group");
                var ttt = model.get("recordCount");
                var pb = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pb);
            });
        }
    });
    return ServerDeployInfoTabLayout;
});

define("travsky/jcf/1.0.0/template/deploy/groupDeployServerDeployItem-debug.tpl", [], '<td><%=serverName%></td>\n<td><%=groupName%></td>\n<td><%=serverIp%></td>\n<td>\n	<%if("1"==serverCategory){\n		%>JCF服务器<%\n	}else if ("2"==serverCategory){\n		%>适配服务器<%\n	}else if ("3"==serverCategory){\n		%>上下文服务器<%\n	}else if ("4"==serverCategory){\n		%>服务库<%\n	}else{\n		%><%=serverCategory%><%\n	}%>\n</td>\n<td class = "serverAppInfoTd"><a href = "#">查看</a></td>\n');

define("travsky/jcf/1.0.0/template/deploy/groupDeployServerDeployList-debug.tpl", [], '<table class = "table table-bordered list">\n<thead>\n  <tr>\n    <th>服务器名称</th>\n    <th>服务器分组</th>\n    <th>所在节点</th>\n    <th>类别</th>\n    <th>详情</th>\n  </tr>\n</thead>\n<tbody></tbody>\n</table>\n');

define("travsky/jcf/1.0.0/template/deploy/groupDeployTabServerDeployInfo-debug.tpl", [], '<div id = "listRegion"></div><!--显示列表区域-->\n<div id = "pagebarRegion"></div><!--显示分页栏条区域-->');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-20
 * Time: 下午07:13:28
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/serverAppStatusLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/serverAppConfigLayout-debug", "ajaxfileupload-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverBaseInfo-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppStatusItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppStatusList-debug.tpl");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/deploy/serverAppStatusLayout-debug.tpl");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var ServerAppCongfigLayout = require("travsky/jcf/1.0.0/view/deploy/serverAppConfigLayout-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var ItemTipView = require("travsky/jcf/1.0.0/view/itemTip_view-debug");
    //服务器基本信息视图
    var BaseInfoItemView = Marionette.ItemView.extend({
        template: _.template(baseInfoTmpStr),
        tagName: "div",
        className: "row"
    });
    var ItemView = Marionette.ItemView.extend({
        initialize: function() {
            var serverId = $("#hiddenServerId4BaseInfo").val();
            var groupId = $("#hiddenGroupId4BaseInfo").val();
            var authDeployFlag = authCheck.getDeploy4ServerFlag();
            var authUndeployFlag = authCheck.getUndeploy4ServerFlag();
            this.model.set("authDeployFlag", authDeployFlag);
            this.model.set("authUndeployFlag", authUndeployFlag);
            this.model.set("serverId", serverId);
            this.model.set("groupId", groupId);
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(itemTmpStr),
        tagName: "tr",
        events: {
            "click td.serverAppStautsTd a": "getAppConfigFile",
            "click td.appStatusTd a": "deployOrUndeploy"
        },
        getAppConfigFile: function(e) {
            //点击查看
            e.stopPropagation();
            e.preventDefault();
            jcfManagement.tipInfoRegion.empty();
            var serverName = this.model.get("serverName");
            var appName = this.model.get("appName");
            var appVersion = this.model.get("currentVersion");
            var serverId = this.model.get("serverId");
            var jsParam = {};
            jsParam.serverId = serverId;
            jsParam.serverName = serverName;
            jsParam.appName = appName;
            jsParam.appVersion = appVersion;
            var modelName = sidbarUtil.getModuleName();
            //var jString = {"serverId":serverId,"serverName":serverName,"appName":appName,"appVersion":appVersion} ;
            appRouter.navigate(modelName + "/server/appConfig/param/" + QueryString.stringify(jsParam));
            var layout = new ServerAppCongfigLayout({
                queryString: jsParam
            });
            jcfManager.contentRegion.show(layout);
            //
            layout.trigger("showPageInfo");
        },
        deployOrUndeploy: function(e) {
            e.preventDefault();
            var $a = $(e.target);
            var href = $a.attr("href");
            jcfManagement.tipInfoRegion.empty();
            var jsParam = {};
            jsParam.serverId = this.model.get("serverId");
            jsParam.groupId = this.model.get("groupId");
            jsParam.appId = this.model.get("appId");
            if ("deploy" == href) {
                //部署函数
                jsParam.operation = "6";
                this.deployApp(jsParam);
            } else if ("undeploy" == href) {
                //反部署函数
                jsParam.operation = "7";
                jsParam.mode = "single";
                //部署的时候不需要这个参数
                this.undeployApp(jsParam);
            }
        },
        deployApp: function(jsParam) {
            var flag = this.check4DeployOrUndeployApp(jsParam);
            var curStatus = this.model.get("status");
            var self = this;
            if (flag) {
                //调用部署函数
                delete jsParam.operation;
                this.model.set("status", "7");
                //正在部署
                var serverURL = "/" + jcfManager.appName + "/deployMgr/mDeployApp.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        //跳转到应用管理页面
                        //self.trigger("parent:freshPageInfo") ;
                        //self.model.set("status","1") ;
                        var refreshSpace = 2e3;
                        var refreshNum = util.getFefreshPageNum();
                        //刷新次数
                        var refreshTime = refreshSpace * refreshNum;
                        //多少秒后执行清除刷新函数
                        //保存当前url
                        var curHash = window.location.hash;
                        $("#freshPage4SeverAppStatusUrl").val(curHash);
                        var ttt = setInterval(self.updatePageAllAppStatus, refreshSpace, self);
                        self.TTTFlag = ttt;
                        setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                    } else {
                        var iv = new ItemTipView({
                            msg: "部署失败!"
                        });
                        iv.model.set("flag", "false");
                        jcfManagement.tipInfoRegion.show(iv);
                        //alert("部署失败!") ;
                        self.model.set("status", curStatus);
                    }
                });
            }
        },
        undeployApp: function(jsParam) {
            if (confirm("确认反部署?")) {
                var flag = this.check4DeployOrUndeployApp(jsParam);
                var serverId = jsParam.serverId;
                var param = {
                    serverId: serverId
                };
                var self = this;
                var curStatus = this.model.get("status");
                if (flag) {
                    //调用反部署函数
                    delete jsParam.operation;
                    this.model.set("status", "8");
                    //正在反部署
                    //groupId,groupName,appId,serverId,mode	
                    var serverURL = "/" + jcfManager.appName + "/deployMgr/mUndeployApp.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        //self.trigger("parent:freshPageInfo") ;
                        if (data.flag == "true") {
                            //跳转到应用管理页面
                            //self.remove() ;
                            var refreshSpace = 2e3;
                            var refreshNum = util.getFefreshPageNum();
                            //刷新次数
                            var refreshTime = refreshSpace * refreshNum;
                            //多少秒后执行清除刷新函数
                            //保存当前url
                            var curHash = window.location.hash;
                            $("#freshPage4SeverAppStatusUrl").val(curHash);
                            var ttt = setInterval(self.updatePageAllAppStatus, refreshSpace, self);
                            self.TTTFlag = ttt;
                            setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                        } else {
                            var iv = new ItemTipView({
                                msg: "反部署失败!"
                            });
                            iv.model.set("flag", "false");
                            jcfManagement.tipInfoRegion.show(iv);
                            //alert("反部署失败!") ;
                            self.model.set("status", "4");
                        }
                    });
                }
            }
        },
        check4DeployOrUndeployApp: function(jsParam) {
            var serverURL = "/" + jcfManager.appName + "/deployMgr/mApplication.action";
            var flag = false;
            var ajaxing = util.dealSYNCHAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    flag = true;
                } else {
                    flag = false;
                    alert(data.msg);
                }
            });
            return flag;
        },
        updatePageAllAppStatus: function(self) {
            var curHash = window.location.hash;
            var appId = self.model.get("appId");
            var serverId = self.model.get("serverId");
            var ttt = self.TTTFlag;
            var oldUrl = $("#freshPage4SeverAppStatusUrl").val();
            if (curHash == oldUrl) {
                var serverURL = "/" + jcfManager.appName + "/deployMgr/updatePageDeployStatus.action";
                var jsonParam = {
                    appId: appId,
                    serverId: serverId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var isClose = false;
                $.when(ajaxing).done(function(data) {
                    var eStr = "data['" + serverId + "'] ;";
                    var cc = eval(eStr);
                    if (cc != "7" && cc != "8" && cc != "9") {
                        if (cc == undefined || cc == null || cc.length == 0) {
                            //那就说明完成
                            self.model.set("status", "3");
                        } else {
                            self.model.set("status", cc);
                        }
                        window.clearInterval(ttt);
                    } else {
                        self.model.set("status", cc);
                    }
                });
            } else {
                window.clearInterval(ttt);
            }
        }
    });
    //应用部署列表视图
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody",
        childEvents: {
            "parent:freshPageInfo": function(view) {
                var appId = view.model.get("appId");
                var serverId = view.model.get("serverId");
                var refreshSpace = 2e3;
                var refreshNum = util.getFefreshPageNum();
                //刷新次数
                var refreshTime = refreshSpace * refreshNum;
                //多少秒后执行清除刷新函数
                //保存当前url
                var curHash = window.location.hash;
                $("#freshPage4SeverAppStatusUrl").val(curHash);
                var ttt = setInterval(this.updatePageAllAppStatus, refreshSpace, this);
                this.TTTFlag = ttt;
                this.appId = appId;
                this.serverId = serverId;
                setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
            }
        }
    });
    //部署管理
    //---单个服务器点击视图
    var ServerAppStatusLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("queryAndShowPageInfo", this.queryAndShowPageInfo);
        },
        template: _.template(viewTemplateStr),
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            baseInfoRegion: "#baseInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {},
        queryAndShowPageInfo: function() {
            //保存到顶级作用域中，方便其他地方使用
            jcfManagement.tipInfoRegion = this.tipInfoRegion;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/viewServerAppStatus.action";
            var currentPage = this.queryString.currentPage;
            if (currentPage == undefined || currentPage == null || currentPage == "") {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var serverId = this.queryString.serverId;
            var currentPage = this.queryString.currentPage;
            var pageSize = this.queryString.pageSize;
            var jsonParam = {
                serverId: serverId,
                currentPage: currentPage,
                pageSize: pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                //显示基本信息
                var baseModel = new Backbone.Model(data.baseInfo);
                self.baseInfoRegion.show(new BaseInfoItemView({
                    model: baseModel
                }));
                //显示列表信息
                var collection = new Backbone.Collection(data.pageBean.recordList);
                self.listRegion.show(new ListView({
                    collection: collection
                }));
                //显示分页栏
                var pageModel = new Backbone.Model(data.pageBean);
                pageModel.set("uriSection", "server");
                self.pagebarRegion.show(new PagebarView({
                    model: pageModel,
                    queryString: self.queryString
                }));
            });
        }
    });
    return ServerAppStatusLayout;
});

define("travsky/jcf/1.0.0/template/deploy/serverBaseInfo-debug.tpl", [], '<br/>\n<div class = "col-sm-1 text-right">名称:</div>\n<div class = "col-sm-2"><%=serverName%></div>\n<div class = "col-sm-1 text-right">分组:</div>\n<div class = "col-sm-2"><%=groupName%></div>\n<div class = "col-sm-1 text-right">类别:</div>\n<div class = "col-sm-2">\n	<%\n		if("1"==serverCategory){\n		   %>JCF服务器<%\n		}else if ("2"==serverCategory){\n		   %>适配服务器<%\n		}else if ("3"==serverCategory){\n		   %>上下文服务器<%\n		}else if ("4"==serverCategory){\n		   %>服务库<%\n		}else{\n		   %><%=serverCategory%><%\n		}\n	%>\n</div>\n<input type = "hidden" id = "hiddenGroupId4BaseInfo" value = "<%=groupId%>" />\n<input type = "hidden" id = "hiddenServerId4BaseInfo" value = "<%=serverId%>" />');

define("travsky/jcf/1.0.0/template/deploy/serverAppStatusItem-debug.tpl", [], '<td><%=appName%></td>\n<td><%=currentVersion%></td>\n<td><%=deployDate%></td>\n<td>\n	<%if(status=="1"){\n		%>已部署<%\n	}else if (status=="2"){\n	    %>部署失败<%\n	}else if (status=="3"){\n	    %>已反部署<%\n	}else if (status=="4"){\n	    %>反部署失败<%\n	}else if (status=="5"){\n	    %>已回滚<%\n	}else if (status=="6"){\n	    %>回滚失败<%\n	}else if(status=="7"){\n	    %>正在部署<%\n	}else if (status=="8"){\n	    %>正在反部署<%\n	}else if(status=="9"){\n	    %>正在回滚<%\n	}else if(status=="0"){\n	    %>状态不一致<%\n	}else{\n	    %><%=status%><%\n	}%>\n</td>\n<td class = "appStatusTd">\n	<%\n		if(status=="2"){\n		  %>\n		  	<%if(authDeployFlag=="true"){\n		  		%><a href = "deploy" >重新部署</a><%\n		  	}else{\n		  		%>重新部署<%\n		  	}%>\n		  <%\n		}else if (status=="1"){\n		  %>\n		  	<%if(authUndeployFlag=="true"){\n		  		%><a href = "undeploy" >反部署</a><%\n		  	}else{\n		  		%>反部署<%\n		  	}%>\n		  <%\n		}else if (status=="4"){\n		  %>\n		  	<%if(authUndeployFlag=="true"){\n		  		%><a href = "undeploy" >重新反部署</a><%\n		  	}else{\n		  		%>重新反部署<%\n		  	}%>\n		  <%\n		}\n	%>\n</td>\n<td class = "serverAppStautsTd" >\n	<%if(status=="1"||status=="4"||status=="6"){\n	   %><a  href = "#">查看</a><%\n	}else{\n	   %>查看<%\n	}%>\n</td>\n');

define("travsky/jcf/1.0.0/template/deploy/serverAppStatusList-debug.tpl", [], '<table class = "table table-bordered list">\n<thead>\n  <tr>\n    <th>部署包名称</th>\n    <th>版本号</th>\n    <th>部署时间</th>\n    <th>部署状态</th>\n    <th>操作</th>\n    <th>配置文件</th>\n  </tr>\n</thead>\n<tbody></tbody>\n</table>\n');

define("travsky/jcf/1.0.0/template/deploy/serverAppStatusLayout-debug.tpl", [], '<div  id = "tipInfoRegion"></div>\n<div  id = "baseInfoRegion"></div>\n<br/>\n<div  id = "listRegion" ></div>\n<div id = "pagebarRegion"></div>\n<input type = "hidden" id = "freshPage4SeverAppStatusUrl"/>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-21
 * Time: 下午01:43:33
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/deploy/serverAppConfigLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "ajaxfileupload-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug", "travsky/jcf/1.0.0/view/itemTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/model/itemTip_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    //ajax文件上传组件
    require("ajaxfileupload-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppConfigLayout-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgBaseInfo-debug.tpl");
    var currentPathTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgCurPath-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/deploy/serverAppCfgList-debug.tpl");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/deploy/AuthCheck4DeployUtil-debug");
    var QueryString = require("querystring-debug");
    var ItemTipView = require("travsky/jcf/1.0.0/view/itemTip_view-debug");
    //基本信息视图
    var ServerBaseInfoView = Marionette.ItemView.extend({
        template: _.template(baseInfoTmpStr),
        tagName: "table",
        className: "table"
    });
    //当前目录视图
    var CurrentPathView = Marionette.ItemView.extend({
        template: _.template(currentPathTmpStr),
        tagName: "table",
        className: "table"
    });
    //列表每一项视图
    var AppCfgItemView = Marionette.ItemView.extend({
        initialize: function() {
            var downloadCfgAuthFlag = authCheck.getDownloadCfgFlag();
            this.model.set("downloadCfgAuthFlag", downloadCfgAuthFlag);
        },
        tagName: "tr",
        template: _.template(itemTmpStr)
    });
    //列表视图
    var AppCfgListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table",
        template: _.template(listTmpStr),
        childView: AppCfgItemView,
        childViewContainer: "tbody"
    });
    var ServerAppCongfigLayout = Marionette.LayoutView.extend({
        initialize: function(option) {
            this.queryString = option.queryString;
            var uploadCfgAuthFlag = authCheck.getUploadCfgFlag();
            this.model = new Backbone.Model({
                uploadCfgAuthFlag: uploadCfgAuthFlag
            });
            this.on("showPageInfo", this.showPageInfoIndex);
        },
        template: _.template(layoutTmpStr),
        events: {
            "click td.fileNameTd span.file_dir_icon": "goToChildPath",
            "click #appCfgBackParentPathBtn": "backParentPath",
            "click td.downloadAppCfgTd a": "downloadAppCfg",
            "click #uploadAppCfgBtn": "uploadAppCfg",
            "click #toLastPageBtn": "toLastPage"
        },
        toLastPage: function() {
            var serverId = this.queryString.serverId;
            var jString = {
                serverId: serverId
            };
            appRouter.navigate("deployMgr/server/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        regions: {
            baseInfoRegion: "#baseInfoRegion",
            tipInfoRegion: "#tipInfoRegion",
            currentDirRegion: "#currentDirRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        uploadAppCfg: function() {
            //上传配置文件
            var flag = this.checkUploadFile();
            if (flag) {
                flag = this.checkRegistryRun();
            }
            if (flag) {
                this.ajaxFileUpload();
            }
        },
        checkRegistryRun: function() {
            //检查注册库服务器是否正常运行
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/checkRegistryStatus.action";
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            var self = this;
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == "1") {
                        flag = true;
                    } else {
                        var tv = new ItemTipView();
                        tv.model.set("flag", "false");
                        tv.model.set("msg", data.errMsg);
                        self.tipInfoRegion.show(tv);
                    }
                } else {
                    var tv = new ItemTipView();
                    tv.model.set("flag", "false");
                    tv.model.set("msg", data.errMsg);
                    self.tipInfoRegion.show(tv);
                }
            });
            return flag;
        },
        checkUploadFile: function() {
            var flag = false;
            var $inputfile = $("#inputfile");
            var fileName = $.trim($inputfile.val());
            var len = fileName.length;
            var ind = fileName.lastIndexOf(".");
            var fileExt = fileName.substring(ind + 1, len);
            if (len > 0 && ind > 0) {
                if (fileExt == "properties" || fileExt == "txt" || fileExt == "xml" || fileExt == "cfg" || fileExt == "drl") {
                    flag = true;
                }
            }
            if (!flag) {
                var tv = new ItemTipView();
                tv.model.set("flag", "false");
                tv.model.set("msg", "上传文件类型有误!");
                this.tipInfoRegion.show(tv);
            } else {
                var target = $inputfile[0];
                flag = util.checkFileSize(target, 1);
            }
            return flag;
        },
        ajaxFileUpload: function() {
            var self = this;
            var hiddenCurrentCfgPath = $("#hiddenCurrentCfgPath").val();
            var serverName = this.queryString.serverName;
            $.ajaxFileUpload({
                url: "/" + jcfManager.appName + "/deployMgr/uploadAppConfigFile.action",
                //用于文件上传的服务器端请求地址
                type: "post",
                data: {
                    serverName: "" + serverName,
                    currentCfgPath: hiddenCurrentCfgPath
                },
                //此参数非常严谨，写错一个引号都不行
                secureuri: false,
                //一般设置为false
                fileElementId: "inputfile",
                //文件上传空间的id属性  <input type="file" id="file" name="file" />
                dataType: "JSON",
                //返回值类型 一般设置为json
                success: function(data, status) {
                    //服务器成功响应处理函数
                    var result = $.parseJSON($(data).text());
                    if (result.flag == "true") {
                        self.showPageInfoIndex();
                    } else {
                        alert("上传失败!");
                    }
                },
                error: function(data, status, e) {
                    //服务器响应失败处理函数
                    alert(e);
                }
            });
            return false;
        },
        showPageInfoIndex: function() {
            var jsParam = this.queryString;
            //当前配置文件所在的目录
            var tempStr = this.queryString.currentCfgPath;
            var dd = "";
            if (tempStr == undefined || tempStr == null || $.trim(tempStr).length == 0) {
                dd = "";
            } else {
                dd = decodeURIComponent(tempStr);
            }
            jsParam.currentCfgPath = dd;
            this.showPageInfo(jsParam);
        },
        showPageInfo: function(jsParam) {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/getPageConfigFile.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                var tempStr = data.curFilepPath;
                var ee = encodeURIComponent(tempStr);
                self.queryString.currentCfgPath = ee;
                self.queryString.backOrSubstrateDirFlag = "";
                appRouter.navigate("deployMgr/server/appConfig/param/" + QueryString.stringify(self.queryString));
                //显示基本信息
                var baseModel = new Backbone.Model(data.baseInfo);
                baseModel.set("appName", data.appName);
                baseModel.set("appVersion", data.appVersion);
                var baseView = new ServerBaseInfoView({
                    model: baseModel
                });
                self.baseInfoRegion.show(baseView);
                //当前目录视图
                var curPathModel = new Backbone.Model({
                    curFilepPath: data.curFilepPath
                });
                var curPathView = new CurrentPathView({
                    model: curPathModel
                });
                self.currentDirRegion.show(curPathView);
                //分页列表视图
                var collection = new Backbone.Collection(data.pageBean.recordList);
                var listView = new AppCfgListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //分页栏视图
                var model = new Backbone.Model(data.pageBean);
                model.set("uriSection", "server/appConfig");
                delete self.queryString.backOrSubstrateDirFlag;
                delete self.queryString.clickPathName;
                var pb = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pb);
            });
        },
        goToChildPath: function(e) {
            //进入子目录
            var $span = $(e.target);
            var clickPathName = $.trim($span.text());
            var backOrSubstrateDirFlag = "next";
            this.showDirList(backOrSubstrateDirFlag, clickPathName);
        },
        backParentPath: function() {
            var backOrSubstrateDirFlag = "back";
            var clickPathName = "parent";
            this.showDirList(backOrSubstrateDirFlag, clickPathName);
        },
        showDirList: function(backOrSubstrateDirFlag, clickPathName) {
            //返回上层目录或则，进入下层目录
            var jsParam = this.queryString;
            var hiddenCurrentCfgPath = $("#hiddenCurrentCfgPath").val();
            //var currentCfgPath = encodeURIComponent(hiddenCurrentCfgPath) ;
            var currentCfgPath = hiddenCurrentCfgPath;
            jsParam.currentCfgPath = currentCfgPath;
            jsParam.backOrSubstrateDirFlag = backOrSubstrateDirFlag;
            jsParam.clickPathName = clickPathName;
            this.showPageInfo(jsParam);
        },
        downloadAppCfg: function(e) {
            e.preventDefault();
            var $a = $(e.target);
            var downloadFileName = $a.attr("href");
            var serverName = this.queryString.serverName;
            var currentDirPath4AppCfg = $.trim($("#hiddenCurrentCfgPath").val());
            var serverURL = "/" + jcfManager.appName + "/deployMgr/downloadAppConfigFile.action";
            var form = $("<form>");
            //定义一个form表单
            form.attr("style", "display:none");
            form.attr("target", "");
            form.attr("method", "post");
            form.attr("action", serverURL);
            var input1 = $("<input>");
            input1.attr("type", "hidden");
            input1.attr("name", "exportData");
            input1.attr("value", new Date().getMilliseconds());
            var input2 = $("<input type = 'hidden' name = 'serverName' value = '" + serverName + "' />");
            var input3 = $("<input type = 'hidden' name = 'downloadFileName' value = '" + downloadFileName + "' />");
            var input4 = $("<input type = 'hidden' name = 'currentDirPath4AppCfg' value = '" + currentDirPath4AppCfg + "' />");
            $("body").append(form);
            //将表单放置在web中
            form.append(input1);
            form.append(input2);
            form.append(input3);
            form.append(input4);
            form.submit();
        }
    });
    return ServerAppCongfigLayout;
});

define("travsky/jcf/1.0.0/template/deploy/serverAppCfgBaseInfo-debug.tpl", [], '<caption>上传配置文件</caption>\n<tbody>\n	<tr>\n		<td width = "5%">应用名称:</td>\n		<td width  = "10%"><%=appName%></td>\n		<td width = "5%">应用版本:</td>\n		<td width  = "5%"><%=appVersion%></td>\n		<td width = "5%">服务器名称:</td>\n		<td width  = "10%"><%=serverName%></td>\n		<td width = "5%">服务器类别:</td>\n		<td width  = "10%">\n			<%\n				if(serverCategory==1){\n					%>JCF服务器<%\n				}else if(serverCategory==2){\n					%>适配服务器<%\n				}else if(serverCategory==3){\n					%>上下文服务器<%\n				}else if(serverCategory==4){\n					%>服务库<%\n				}else{\n					%>其他<%\n				}\n			%>\n		</td>\n	</tr>\n</tbody>\n');

define("travsky/jcf/1.0.0/view/service/serviceMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/service/serviceTab4ListLayout-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "travsky/jcf/1.0.0/view/service/serviceTab4ConfigLayout-debug", "travsky/jcf/1.0.0/view/service/serviceConfig_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/service/serviceMgrLayout-debug.tpl");
    var QueryString = require("querystring-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var Tab4ListLayout = require("travsky/jcf/1.0.0/view/service/serviceTab4ListLayout-debug");
    var Tab4ConfigLayout = require("travsky/jcf/1.0.0/view/service/serviceTab4ConfigLayout-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug");
    var ServiceMgrLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            var authGroupCfgFlag = authCheck.getGroupServiceCfgFlag();
            this.model.set("authGroupCfgFlag", authGroupCfgFlag);
            this.on("showPageInfo", this.showPageInfo);
        },
        events: {
            "click #serviceMgrNav": "clickNavItem"
        },
        template: _.template(layoutTmpStr),
        regions: {
            downContentRegion: "#downContentRegion"
        },
        clickNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var valStr = $(e.target).attr("href");
            var $curLi = $(e.target).parent();
            var $ul = $curLi.parent();
            var modelName = sidbarUtil.getModuleName();
            if (!$curLi.hasClass("active")) {
                $ul.find("li").removeClass("active");
                $curLi.addClass("active");
                this.queryString.selectedPageUI = valStr;
                appRouter.navigate(modelName + "/param/" + QueryString.stringify(this.queryString));
                this.showPageInfo();
            }
        },
        showPageInfo: function() {
            var self = this;
            var modelName = sidbarUtil.getModuleName();
            var selectedPageUI = this.queryString.selectedPageUI;
            appRouter.navigate(modelName + "/param/" + QueryString.stringify(this.queryString));
            if ("serviceListUI" == selectedPageUI) {
                var tab4ListLayout = new Tab4ListLayout({
                    queryString: this.queryString
                });
                this.downContentRegion.show(tab4ListLayout);
                tab4ListLayout.trigger("showPageInfo");
            } else if ("groupServiceCfgUI" == selectedPageUI) {
                //alert("显示组服务配置页面") ;
                var serverURL = "/" + jcfManager.appName + "/service/getGroupNameList.action";
                var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    var tab4ConfigLayout = new Tab4ConfigLayout({
                        model: model
                    });
                    self.downContentRegion.show(tab4ConfigLayout);
                });
            }
        }
    });
    return ServiceMgrLayout;
});

define("travsky/jcf/1.0.0/template/service/serviceMgrLayout-debug.tpl", [], '<div>\n	<ul class="nav nav-tabs tttt" id = "serviceMgrNav">      \n		<li  <%if(selectedPageUI==\'serviceListUI\'){%>class = "active"<%}%>  ><a href="serviceListUI">服务列表</a></li>    \n	</ul>\n</div>\n<div  id = "downContentRegion"></div>\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-1-28
 * Time: 下午07:28:38
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/serviceTab4ListLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/pageDataLayout-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/service/serviceItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/service/serviceList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    //列表每一项视图
    var ItemView = Marionette.ItemView.extend({
        tagName: "tr",
        template: _.template(itemTmpStr)
    });
    //列表视图
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        tagName: "table",
        className: "table table-bordered list",
        template: _.template(listTmpStr),
        childView: ItemView,
        childViewContainer: "tbody"
    });
    var ServiceTab4ListLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
        },
        template: _.template(layoutTmpStr),
        regions: {
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        showPageInfo: function() {
            var self = this;
            //查询数据显示列表
            var serverURL = "/" + jcfManager.appName + "/service/searchAllService.action";
            var jsonParam = {
                currentPage: this.queryString.currentPage,
                pageSize: this.queryString.pageSize
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                var collection = new Backbone.Collection(data.recordList);
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                var model = new Backbone.Model(data);
                var pbView = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
            });
        }
    });
    return ServiceTab4ListLayout;
});

define("travsky/jcf/1.0.0/template/pageDataLayout-debug.tpl", [], '<div  id = "listRegion"></div>\n<div id = "pagebarRegion"></div>\n');

define("travsky/jcf/1.0.0/template/service/serviceItem-debug.tpl", [], "<td><%=serverName%></td>\n<td><%=serviceName%></td>\n<td><%=serviceCategory%></td>\n<td><%=appVersion%></td>\n\n");

define("travsky/jcf/1.0.0/template/service/serviceList-debug.tpl", [], "<thead>\n  <tr>\n    <th>服务器名称</th>\n    <th>服务名称</th>\n    <th>服务类型</th>\n    <th>服务版本</th>\n  </tr>\n</thead>\n<tbody></tbody>\n");

define("travsky/jcf/1.0.0/view/service/serviceTab4ConfigLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/service/serviceConfig_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/service/serviceTab4ConfigLayout-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ServiceConfigView = require("travsky/jcf/1.0.0/view/service/serviceConfig_view-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ServiceTab4ConfigLayout = Marionette.LayoutView.extend({
        initialize: function() {
            this.on("showPageInfo", this.showPageInfo);
        },
        template: _.template(layoutTmpStr),
        regions: {
            downContentRegion: "#downContentRegion",
            showTipRegion: "#showTipRegion"
        },
        events: {
            "change #serviceGroupName": "changeServiceGroupName",
            "change #serviceName": "changeServiceName"
        },
        changeServiceName: function() {
            //选择组
            var self = this;
            var groupId = $.trim($("#serviceGroupName").val());
            var serviceId = $.trim($("#serviceName").val());
            if (serviceId.length > 0) {
                var serverURL = "/" + jcfManager.appName + "/service/getServiceCategory.action";
                var jsonParam = {
                    groupId: groupId,
                    serviceId: serviceId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var tipModel = new ListTipModel();
                    var serverName = data.serverName;
                    tipModel.set("succList", [ "配置是从" + serverName + "中获取的" ]);
                    var tipView = new ListTipView({
                        model: tipModel
                    });
                    self.showTipRegion.show(tipView);
                    var model = new Backbone.Model(data.serviceParameter);
                    model.set("flag", data.flag);
                    model.set("serviceId", data.serviceId);
                    model.set("serviceCategory", data.serviceCategory);
                    model.set("serverName", data.serverName);
                    model.set("configError", data.configError);
                    var scView = new ServiceConfigView({
                        model: model
                    });
                    self.downContentRegion.show(scView);
                });
            } else {
                this.downContentRegion.empty();
                this.showTipRegion.empty();
            }
        },
        changeServiceGroupName: function() {
            var groupId = $.trim($("#serviceGroupName").val());
            var $serviceName = $("#serviceName");
            this.downContentRegion.empty();
            if (groupId.length > 0) {
                var serverURL = "/" + jcfManager.appName + "/service/getSericeNameList.action";
                var jsonParam = {
                    groupId: groupId
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var list = data.serviceInfoList;
                    $serviceName.html("<option selected = 'selected'></option>");
                    for (var i = 0; i < list.length; i++) {
                        var id = list[i].serviceId;
                        var name = list[i].serviceName;
                        var version = list[i].appVersion;
                        var sss = name + "_" + version;
                        var $option = "<option value = '" + id + "'>" + sss + "</option>";
                        $serviceName.append($option);
                    }
                });
            } else {
                $serviceName.html("<option selected = 'selected'></option>");
                this.showTipRegion.empty();
            }
        }
    });
    return ServiceTab4ConfigLayout;
});

define("travsky/jcf/1.0.0/template/service/serviceTab4ConfigLayout-debug.tpl", [], '<br/>\n<div  id = "upContentRegion" >\n	<div class = "row">\n		<div class = "col-sm-2 text-right"><label for="addGroup_groupCategory" class="control-label">服务器组名称：</label></div>\n		<div class = "col-sm-3">\n			<select id = "serviceGroupName"  class  = "form-control input-sm">\n	         	 	<option value="" selected="selected"></option>\n	         	 	<%\n	         	 		for(var i = 0 ; i < groupNameList.length ;i ++){\n	         	 			%><option value="<%=groupNameList[i].groupId%>" ><%=groupNameList[i].groupName%></option><%\n	         	 		}\n	         	 	%>\n	        </select>\n		</div>\n		\n		<div class = "col-sm-2 text-right"><label for="addGroup_groupCategory" class="control-label">服务名称：</label></div>\n		<div class = "col-sm-3">\n			<select id = "serviceName"  class  = "form-control input-sm">\n	         	<!-- <option value="" selected="selected"></option> -->\n	        </select>\n		</div>\n	</div>\n</div>\n<div id = "showTipRegion"></div>\n<br/>\n<div id = "downContentRegion" ></div>');

define("travsky/jcf/1.0.0/view/service/serviceConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/serviceConfigView-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var ServiceConfigView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function() {
            this.listenTo(this.model, "change:messageMode", this.render);
        },
        events: {
            "click #submitFormBtn": "submitForm",
            "blur #requestQueueSize": "checkRequestQueueSize",
            "blur #invokeContextSize": "checkInvokeContextSize",
            "blur #threadPoolSize": "checkThreadPoolSize",
            "blur #upperLimit": "checkUpperLimit",
            "blur #inputQueue": "checkInputQueue",
            "blur #outputQueue": "checkOutputQueue",
            "blur #inMpeNum": "checkInMpeNum",
            "blur #outMpeNum": "checkOutMpeNum",
            "blur #invokeTimeout": "checkInvokeTimeout",
            "change #messageMode": "changeMessageMode"
        },
        changeMessageMode: function() {
            var val = $.trim($("#messageMode").val());
            this.model.set("messageMode", val);
        },
        submitBusiServiceForm: function(formObj) {
            var serverURL = "/" + jcfManager.appName + "/service/updateBusiServiceCfg.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
            var self = this;
            $.when(ajaxing).done(function(data) {
                self.dealReturnInfo(data);
            });
        },
        submitAdapterServiceForm: function(formObj) {
            var serverURL = "/" + jcfManager.appName + "/service/updateAdapterServiceCfg.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
            var self = this;
            $.when(ajaxing).done(function(data) {
                self.dealReturnInfo(data);
            });
        },
        submitHttpServiceForm: function(formObj) {
            var serverURL = "/" + jcfManager.appName + "/service/updateHttpServiceCfg.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
            var self = this;
            $.when(ajaxing).done(function(data) {
                self.dealReturnInfo(data);
            });
        },
        submitForm: function() {
            //提交表单
            $("#submitFormBtn").addClass("disabled");
            var href = $("#submitFormBtn").attr("name");
            var serviceId = $("#serviceId").val();
            var serverName = $("#serverName").val();
            var groupId = $.trim($("#serviceGroupName").val());
            if ("BusinessService" == href) {
                var flag = this.checkBusinessServiceForm();
                //校验表单是否合法
                if (flag) {
                    var formIds = [ "requestQueueSize", "invokeContextSize", "threadPoolSize", "messageMode", "upperLimit", "queueType" ];
                    var formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    //formObj.serverName = serverName ;
                    this.submitBusiServiceForm(formObj);
                }
            } else if ("AdapterService" == href) {
                var flag = this.checkAdapterServiceForm();
                if (flag) {
                    var formIds = [ "inputQueue", "outputQueue", "inMpeNum", "outMpeNum", "threadPoolSize", "mqServerInfo", "requestQueueSize", "invokeContextSize", "messageMode", "upperLimit", "queueType" ];
                    var formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    //formObj.serverName = serverName ;
                    this.submitAdapterServiceForm(formObj);
                }
            } else if ("http" == href) {
                var flag = this.checkHttpServiceForm();
                if (flag) {
                    var formIds = [ "invokeServiceName", "invokeTimeout", "threadPoolSize" ];
                    var formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    //formObj.serverName = serverName ;
                    this.submitHttpServiceForm(formObj);
                }
            } else if ("webservice" == href) {
                var flag = this.checkWebServiceForm();
                if (flag) {
                    var formIds = [ "invokeServiceName", "invokeTimeout", "threadPoolSize" ];
                    var formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    //formObj.serverName = serverName ;
                    this.submitWebServiceForm(formObj);
                }
            }
        },
        submitWebServiceForm: function(formObj) {
            var serverURL = "/" + jcfManager.appName + "/service/updateWebServiceCfg.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
            var self = this;
            $.when(ajaxing).done(function(data) {
                self.dealReturnInfo(data);
            });
        },
        dealReturnInfo: function(data) {
            if (data.status == "1") {
                alert("组配置成功");
                $("#submitFormBtn").removeClass("disabled");
            } else {
                $("#submitFormBtn").removeClass("disabled");
                var errorinfo = "";
                for (var element in data.serviceUpdateConfigList) {
                    if (data.serviceUpdateConfigList[element].serviceConfigUpdateStatus === 0) {
                        if (data.serviceUpdateConfigList[element].JMXConnectError === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时连接被拒绝";
                        }
                        if (data.serviceUpdateConfigList[element].illegalArgument === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现非法参数";
                        }
                        if (data.serviceUpdateConfigList[element].malformedObjectName === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现非法的对象名";
                        }
                        if (data.serviceUpdateConfigList[element].nullPointer === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现空指针";
                        }
                        if (data.serviceUpdateConfigList[element].loginException === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 登录异常";
                        }
                        if (data.serviceUpdateConfigList[element].errorServiceConfigException === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 找不到对应的配置文件";
                        }
                        if (data.serviceUpdateConfigList[element].exception === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现未知异常,建议查看karaf log";
                        }
                    }
                }
                alert(errorinfo);
            }
        },
        checkRequestQueueSize: function() {
            var id = "requestQueueSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInvokeContextSize: function() {
            var id = "invokeContextSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkThreadPoolSize: function() {
            var id = "threadPoolSize";
            var minNum = 1;
            var maxNum = 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkUpperLimit: function() {
            var id = "upperLimit";
            var minNum = 1;
            var maxNum = 99;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInputQueue: function() {
            var id = "inputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkOutputQueue: function() {
            var id = "outputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkInMpeNum: function() {
            var id = "inMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value.length > 0) {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkOutMpeNum: function() {
            var id = "outMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value.length > 0) {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkInvokeTimeout: function() {
            var id = "invokeTimeout";
            var minNum = 1;
            var maxNum = 1e3;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkBusinessServiceForm: function() {
            if (this.checkRequestQueueSize() && this.checkInvokeContextSize() && this.checkThreadPoolSize() && this.checkUpperLimit()) {
                return true;
            }
            return false;
        },
        checkAdapterServiceForm: function() {
            if (this.checkValidateQueueNameAndNum() && this.checkInputQueue() && this.checkOutputQueue() && this.checkThreadPoolSize() && this.checkUpperLimit()) {
                return true;
            }
            return false;
        },
        checkHttpServiceForm: function() {
            var flag = false;
            if (this.checkInvokeTimeout() && this.checkThreadPoolSize()) {
                flag = true;
            }
            return flag;
        },
        checkWebServiceForm: function() {
            var flag = false;
            if (this.checkInvokeTimeout() && this.checkThreadPoolSize()) {
                flag = true;
            }
            return flag;
        },
        checkValidateQueueNameAndNum: function() {
            //
            var flag = false;
            var id1 = "inputQueue";
            var id2 = "outputQueue";
            var flag1 = inputCheckUtil.checkNotNull(id1);
            var flag2 = inputCheckUtil.checkNotNull(id2);
            if (!flag1 && !flag2) {
                //如果都为空,则提示至少一个不为空
                //$("#"+id1+"Tip").html("接入队列和接出队列至少需要配置一个") ;
                flag = inputCheckUtil.errInput(id1, "接入队列和接出队列至少需要配置一个");
            } else {
                //有不为空的
                inputCheckUtil.successInput(id1);
                inputCheckUtil.successInput(id2);
                //接入mq队列---接入mq个数//接出mq队列---接出mq个数
                var val1 = $.trim($("#" + id1).val());
                if (val1 == "") {
                    //接入mq为空//判断接入mq是否为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        flag = inputCheckUtil.successInput(id1);
                    } else {
                        //
                        flag = inputCheckUtil.errInput(id1, "接入MQ队列名称不能为空");
                    }
                } else {
                    //接入mq不为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        //接入mq个数为空
                        flag = inputCheckUtil.errInput("inMpeNum", "接入MQ连接数不能为空");
                    } else {
                        flag = inputCheckUtil.successInput("inMpeNum");
                    }
                }
                ////////////////////////////////////////////////////////////
                if (flag) {
                    var val2 = $.trim($("#" + id2).val());
                    if (val2 == "") {
                        //接出mq为空//判断接出mq是否为空
                        if ($.trim($("#outMpeNum").val()) == "") {
                            flag = inputCheckUtil.successInput(id2);
                        } else {
                            //
                            flag = inputCheckUtil.errInput(id2, "接出MQ队列名称不能为空");
                        }
                    } else {
                        //接入mq不为空
                        if ($.trim($("#outMpeNum").val()) == "") {
                            //接入mq个数为空
                            flag = inputCheckUtil.errInput("outMpeNum", "接出MQ连接数不能为空");
                        } else {
                            flag = inputCheckUtil.successInput("outMpeNum");
                        }
                    }
                }
            }
            return flag;
        }
    });
    return ServiceConfigView;
});

define("travsky/jcf/1.0.0/template/service/serviceConfigView-debug.tpl", [], '<%	\nif(flag=="true"){//正确返回数据\n%>		\n	<form class="form-horizontal"   role="form" method= "POST">\n		 <input type = "hidden" id = "serviceId" value = "<%=serviceId%>"/>\n		 <input type = "hidden" id = "serverName" value = "<%=serverName%>"/>\n	<%\n		if("BusinessService"==serviceCategory){//1111111111111111111111\n		   %>\n		      <div class="form-group" id = "requestQueueSizeDiv" >\n		         <label for="requestQueueSize" class="col-sm-4 control-label  text-left">请求队列大小：</label>\n		         <div class="col-sm-4">\n		            <input  id="requestQueueSize"  value = "<%=requestQueueSize%>"   type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span class = "text-danger">*</span><span id = "requestQueueSizeTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "invokeContextSizeDiv" >\n		         <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小：</label>\n		         <div class="col-sm-4">\n		            <input  id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span class = "text-danger">*</span><span id = "invokeContextSizeTip"></span></div>\n		      </div>\n		      \n		      \n		      <div class="form-group" id = "threadPoolSizeDiv" >\n		         <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n		         <div class="col-sm-4">\n		             <input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "threadPoolSizeTip"></span></div>\n		      </div>\n		      \n		      \n		      <div class="form-group" id = "messageModeDiv" >\n		         <label for="messageMode" class="col-sm-4 control-label">信息模式：</label>\n		         <div class="col-sm-4">\n		            <select id="messageMode"   class="form-control input-sm">\n		            	<option <%if(messageMode=="one_way"){%>selected = "selected" <%}%> value="one_way" selected="selected">one_way</option>\n		            	<option <%if(messageMode=="request_response"){%>selected = "selected" <%}%>  value="request_response">request_response</option>\n		            	<option <%if(messageMode=="reliable_one_way"){%>selected = "selected" <%}%>  value="reliable_one_way">reliable_one_way</option>	\n		            </select>\n		         </div>\n		         <div><span id = "messageModeTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "upperLimitDiv" >\n		         <label for="upperLimit" class="col-sm-4 control-label">队列预警值：</label>\n		         <div class="col-sm-4">\n		            <input id="upperLimit" value = "<%=upperLimit%>"   type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span class ="text-info">(%)</span><span id = "upperLimitTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "queueTypeDiv" >\n		         <label for="queueType" class="col-sm-4 control-label">队列类型：</label>\n		         <div class="col-sm-4">\n		            <select id="queueType"   class="form-control input-sm">\n		             	<%if(messageMode=="one_way"){%>\n		             		<option value="SimpleQueue" <%if(queueType=="SimpleQueue"){%>selected="selected"<%}%> >SimpleQueue</option>\n		               		<option value="PersistQueue" <%if(queueType=="PersistQueue"){%>selected="selected"<%}%> >PersistQueue</option>\n		             	<%}else{%>\n		             		<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n		             	<%}%>\n					</select>\n		         </div>\n		         <div><span id = "queueTypeTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group">\n			     <div class="col-sm-offset-4 col-sm-10">\n			        <button type="button" id = "submitFormBtn" name = "BusinessService" class="btn btn-primary">应用</button>\n			     </div>\n			  </div>\n		   <%\n		}else if ("sih"==serviceCategory||"tumsb"==serviceCategory||"tumst"==serviceCategory||"utl"==serviceCategory){//22222222222222222222222\n		   %>\n		 	<div class="form-group" id = "inputQueueDiv" >\n		         <label for="inputQueue" class="col-sm-4 control-label">接入MQ队列名称：</label>\n		         <div class="col-sm-4">\n		            <input id="inputQueue" value = "<%=inputQueue%>"  type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "inputQueueTip"></span></div>\n		    </div>\n		    \n		    <div class="form-group" id = "inMpeNumDiv" >\n		         <label for="inMpeNum" class="col-sm-4 control-label">接入MQ连接个数：</label>\n		         <div class="col-sm-4">\n		            <input id="inMpeNum" value = "<%= (inMpeNum==\'0\'?\'\':inMpeNum)%>" type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "inMpeNumTip"></span></div>\n		    </div>\n		    \n		 	<div class="form-group" id = "outputQueueDiv" >\n		         <label for="outputQueue" class="col-sm-4 control-label">接出MQ队列名称：</label>\n		         <div class="col-sm-4">\n		            <input id="outputQueue" value = "<%=outputQueue%>" type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "outputQueueTip"></span></div>\n		    </div>\n		    \n		    \n		 	<div class="form-group" id = "outMpeNumDiv" >\n		         <label for="outMpeNum" class="col-sm-4 control-label">接出MQ连接个数：</label>\n		         <div class="col-sm-4">\n		            <input id="outMpeNum"  value = "<%= (outMpeNum==\'0\'?\'\':outMpeNum)%>" type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "outMpeNumTip"></span></div>\n		    </div>\n		    \n		 	<div class="form-group" id = "threadPoolSizeDiv" >\n		         <label for="threadPoolSize" class="col-sm-4 control-label">适配服务线程池大小：</label>\n		         <div class="col-sm-4">\n		            <input id="threadPoolSize" value = "<%=threadPoolSize%>" type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "threadPoolSizeTip"></span></div>\n		    </div>\n		    \n		 	<div class="form-group" id = "mqServerInfoDiv" >\n		         <label for="mqServerInfo" class="col-sm-4 control-label">MQ服务器信息（格式IP/PORT/通道名/队列管理器名/超时转移时间）：</label>\n		         <div class="col-sm-4">\n		            <input id="mqServerInfo" value = "<%=mqServerInfo%>" type="text"  class="form-control input-sm"  placeholder="" />\n		            <input  id="mode" value = "" type="hidden" />\n		            <input  id="serviceName" value = "" type="hidden"  />\n		         </div>\n		         <div><span id = "mqServerInfoTip"></span></div>\n		    </div>\n		 	\n		 	<div class="form-group" id = "requestQueueSizeDiv" >\n		         <label for="requestQueueSize" class="col-sm-4 control-label">请求队列大小：</label>\n		         <div class="col-sm-4">\n		            <input id="requestQueueSize" value = "<%=requestQueueSize%>"  type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "requestQueueSizeTip"></span></div>\n		    </div>\n		 	\n		 	<div class="form-group" id = "invokeContextSizeDiv" >\n		         <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小：</label>\n		         <div class="col-sm-4">\n		            <input id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "invokeContextSizeTip"></span></div>\n		    </div>\n		 	\n		 	<div class="form-group" id = "messageModeDiv" >\n		         <label for="messageMode" class="col-sm-4 control-label">信息模式：</label>\n		         <div class="col-sm-4">\n		            <input id="messageMode"  value = "<%=messageMode%>" readonly="readonly" type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "messageModeTip"></span></div>\n		    </div>\n		 	\n		 	<div class="form-group" id = "upperLimitDiv" >\n		         <label for="upperLimit" class="col-sm-4 control-label">队列预警值：</label>\n		         <div class="col-sm-4">\n		            <input id="upperLimit" value = "<%=upperLimit%>" type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span class ="text-info">(%)</span><span id = "upperLimitTip"></span></div>\n		    </div>\n		    \n		     <div class="form-group" id = "queueTypeDiv" >\n		         <label for="queueType" class="col-sm-4 control-label">队列类型：</label>\n		         <div class="col-sm-4">\n		            <select id="queueType"   class="form-control input-sm">\n		               	<%if(messageMode=="one_way"){%>\n		             		<option value="SimpleQueue" <%if(queueType=="SimpleQueue"){%>selected="selected"<%}%> >SimpleQueue</option>\n		               		<option value="PersistQueue" <%if(queueType=="PersistQueue"){%>selected="selected"<%}%> >PersistQueue</option>\n		             	<%}else{%>\n		             		<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n		             	<%}%>\n					</select>\n		         </div>\n		         <div><span id = "queueTypeTip"></span></div>\n		     </div>\n		     \n		     \n		      <div class="form-group">\n			     <div class="col-sm-offset-4 col-sm-10">\n			        <button type="button" id = "submitFormBtn" name = "AdapterService" class="btn btn-primary">应用</button>\n			     </div>\n			  </div>\n		 	\n		   <%\n		}else if ("http"==serviceCategory){//33333333333333333333333333333333\n		   %>\n		   	  <div class="form-group" id = "invokeServiceNameDiv" >\n		         <label for="invokeServiceName" class="col-sm-4 control-label">调用服务名称 ：</label>\n		         <div class="col-sm-4">\n		            <input id="invokeServiceName" value = "<%=invokeServiceName%>" readonly="readonly" type="text"  class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "invokeServiceNameTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "invokeTimeoutDiv" >\n		         <label for="invokeTimeout" class="col-sm-4 control-label">调用超时时间 ：</label>\n		         <div class="col-sm-4">\n		            <input id="invokeTimeout" value = "<%=invokeTimeout%>" type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "invokeTimeoutTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "threadPoolSizeDiv" >\n		        <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n	            <div class="col-sm-4">\n	            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n	            </div>\n		        <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		      </div>\n		      \n		       <div class="form-group">\n			     <div class="col-sm-offset-4 col-sm-10">\n			        <button type="button" id = "submitFormBtn" name = "http" class="btn btn-primary">应用</button>\n			     </div>\n			  </div>\n		      \n		   <%\n		}else if ("webservice"==serviceCategory){//4444444444444444444444444444444444\n		   %>\n		      <div class="form-group" id = "invokeServiceNameDiv" >\n		         <label for="invokeServiceName" class="col-sm-4 control-label">调用服务名称 ：</label>\n		         <div class="col-sm-4">\n		            <input id="invokeServiceName" value = "<%=invokeServiceName%>" readonly="readonly"  type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "invokeServiceNameTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "invokeTimeoutDiv" >\n		         <label for="invokeTimeout" class="col-sm-4 control-label">调用超时时间 ：</label>\n		         <div class="col-sm-4">\n		            <input id="invokeTimeout" value = "<%=invokeTimeout%>" type="text" class="form-control input-sm"  placeholder="" />\n		         </div>\n		         <div><span id = "invokeTimeoutTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group" id = "threadPoolSizeDiv" >\n		        <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n	            <div class="col-sm-4">\n	            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n	            </div>\n		        <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		      </div>\n		      \n		      <div class="form-group">\n			     <div class="col-sm-offset-4 col-sm-10">\n			        <button type="button" id = "submitFormBtn" name = "webservice" class="btn btn-primary">应用</button>\n			     </div>\n			  </div>\n		   <%\n		}\n	 %>\n	 </form>\n<%}else{%>\n		<div >\n			<div id="unknowServiceTips" style="color:red;"><%=configError%></div>\n		</div>	\n<%}%>\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-22
 * Time: 上午09:29:46
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    //服务inde页面--------------------------------开始-------------------------------------------------------------------
    //jcf服务器部分----------------------------------------------------------------------
    AuthCheckUtil.getGroupServiceCfgFlag = function() {
        //jcf组服务配置
        var jmm = jcfManager.authModel;
        var code = "4_2_3";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //服务index页面-------------------------------结束-------------------------------------------------------------------
    //组服务页面-----------------------------------开始------------------------------------------------------------------
    AuthCheckUtil.getSearchService4GroupFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_2_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //-------------启动
    AuthCheckUtil.getJcfStart4GroupFlag = function() {
        //jcf服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfStop4GroupFlag = function() {
        //jcf服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcForceStop4GroupFlag = function() {
        //jcf服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-3";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfSXQH4GroupFlag = function() {
        //切换域内外可见性
        var jmm = jcfManager.authModel;
        var code = "4_3_1-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //增加
    AuthCheckUtil.getJcfCfg4GroupFlag = function() {
        //jcf服务配置
        var jmm = jcfManager.authModel;
        var code = "4_4_1-5-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    /////////////////////////
    AuthCheckUtil.getSihStart4GroupFlag = function() {
        //适配服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-6";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getSihStop4GroupFlag = function() {
        //适配服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-7";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getSihForceStop4GroupFlag = function() {
        //适配服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-8";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getSihSXQH4GroupFlag = function() {
        //适配服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-9";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getSihCfg4GroupFlag = function() {
        //适配服务配置
        var jmm = jcfManager.authModel;
        var code = "4_4_1-10-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //////////////////////
    AuthCheckUtil.getHttpStart4GroupFlag = function() {
        //http服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-11";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getHttpStop4GroupFlag = function() {
        //http服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-12";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getHttpForceStop4GroupFlag = function() {
        //http服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-13";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getHttpSXQH4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-14";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getHttpCfg4GroupFlag = function() {
        //http服务配置
        var jmm = jcfManager.authModel;
        var code = "4_4_1-15-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    ////////////////////////////////
    AuthCheckUtil.getWebStart4GroupFlag = function() {
        //web服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-16";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getWebStop4GroupFlag = function() {
        //web服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-17";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getWebForceStop4GroupFlag = function() {
        //web服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-18";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getWebSXQH4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-19";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getWebCfg4GroupFlag = function() {
        //服务配置
        var jmm = jcfManager.authModel;
        var code = "4_4_1-20-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //////////////////////////////
    AuthCheckUtil.getTbStart4GroupFlag = function() {
        //tb服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-21";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTbStop4GroupFlag = function() {
        //tb服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-22";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTbForceStop4GroupFlag = function() {
        //tb服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-23";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTbSXQH4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-24";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTbCfg4GroupFlag = function() {
        //服务配置
        var jmm = jcfManager.authModel;
        var code = "4_4_1-25-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //////////////////////////////
    AuthCheckUtil.getTtStart4GroupFlag = function() {
        //tt服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-26";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTtStop4GroupFlag = function() {
        //tt服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-27";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTtForceStop4GroupFlag = function() {
        //tt服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-28";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTtSXQH4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-29";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTtCfg4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_4_1-30-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    /////////////////////////////
    AuthCheckUtil.getUtlStart4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-31";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUtlStop4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-32";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUtlForceStop4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-33";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUtlSXQH4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-34";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUtlCfg4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_3_1-35-4";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //-----------强制停止
    AuthCheckUtil.getUtlForceStop4GroupFlag = function() {
        //utl服务
        var jmm = jcfManager.authModel;
        var code = "4_2_3";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //组服务页面-----------------------------------结束------------------------------------------------------------------
    //单服务页面-----------------------------------开始---------------------------------------------------------
    AuthCheckUtil.getSearchService4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfMoniService4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-5";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getJcfMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_2_2";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getSihMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-10";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getHttpMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-15";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getWebMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-20";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTbMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-25";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getTtMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-30";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getUtlMoni4ServerFlag = function() {
        //查询服务按钮
        var jmm = jcfManager.authModel;
        var code = "4_3_1-35";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //单服务页面-----------------------------------结束---------------------------------------------------------
    //------------------------------------新增权限开始--------------------------------------------
    AuthCheckUtil.getSwitchDefaultVersionFlag = function() {
        //切换默认版本操作
        var jmm = jcfManager.authModel;
        var code = "4_2_5";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getClearQueueInfoFlag = function() {
        //清除队列操作
        var jmm = jcfManager.authModel;
        var code = "4_6_6";
        var flag = jmm.get(code) || "";
        return flag;
    };
    //------------------------------------新增权限结束--------------------------------------------
    return AuthCheckUtil;
});

define("travsky/jcf/1.0.0/view/service/groupServiceMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/service/groupServiceTabServiceMgr-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", "travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/service/monitorService_view-debug", "travsky/jcf/1.0.0/view/service/groupServiceCfg-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug", "travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug", "travsky/jcf/1.0.0/view/service/respGroupMoni_view-debug", "my97Date-debug", "travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug", "highcharts-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/groupServiceMgrLayout-debug.tpl");
    var GroupServiceTabMgr = require("travsky/jcf/1.0.0/view/service/groupServiceTabServiceMgr-debug");
    //	var GroupServiceTabConfig =require("./groupServiceTabConfig") ;
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var GroupServiceMgrLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
        },
        template: _.template(viewTemplateStr),
        regions: {
            downContentRegion: "#downContentRegion"
        },
        events: {
            "click #groupServiceMgrNav li a": "clickNavItem"
        },
        clickNavItem: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var valStr = $(e.target).attr("href");
            var $curLi = $(e.target).parent();
            var $ul = $curLi.parent();
            if (!$curLi.hasClass("active")) {
                $ul.find("li").removeClass("active");
                $curLi.addClass("active");
                this.queryString.selectedPageUI = valStr;
                this.queryString.currentPage = "1";
                appRouter.navigate("serviceMgr/group/param/" + QueryString.stringify(this.queryString));
                this.showPageInfo();
            }
        },
        showPageInfo: function() {
            var selectItem = this.queryString.selectedPageUI;
            if (selectItem == undefined) {
                selectItem = "showServiceMgrUI";
                this.queryString.selectedPageUI = selectItem;
            }
            var groupId = this.queryString.groupId;
            var paramCategory = this.queryString.category == undefined ? "" : this.queryString.category;
            var paramStatus = this.queryString.status == undefined ? "" : this.queryString.status;
            var paramAppName = this.queryString.appName == undefined ? "" : this.queryString.appName;
            var serverURL = "/" + jcfManager.appName + "/service/toSearchGroupServiceUI.action";
            var jsonParam = {
                groupId: groupId
            };
            if ("showServiceMgrUI" == selectItem) {
                // 服务管理
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    model.set("paramCategory", paramCategory);
                    model.set("paramStatus", paramStatus);
                    model.set("paramAppName", paramAppName);
                    model.set("groupId", groupId);
                    var layout = new GroupServiceTabMgr({
                        model: model,
                        queryString: self.queryString
                    });
                    self.downContentRegion.show(layout);
                    layout.trigger("showPageInfo");
                });
            } else if ("configGroupServiceUI" == selectItem) {
                // 组服务配置
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    model.set("paramCategory", paramCategory);
                    model.set("paramStatus", paramStatus);
                    model.set("paramAppName", paramAppName);
                    model.set("groupId", groupId);
                    var layout = new GroupServiceTabConfig({
                        model: model,
                        queryString: self.queryString
                    });
                    self.downContentRegion.show(layout);
                    layout.trigger("showPageInfo");
                });
            }
        }
    });
    return GroupServiceMgrLayout;
});

define("travsky/jcf/1.0.0/template/service/groupServiceMgrLayout-debug.tpl", [], '<ul class="nav nav-tabs" id = "groupServiceMgrNav">\n	<li  <%if("showServiceMgrUI"==selectedPageUI){%> class = "active"<%}%>  ><a href="showServiceMgrUI">服务管理</a></li>\n</ul>\n<br/>\n<div id = "downContentRegion"></div>\n<input type = "hidden" id = "groupService4GroupIdHidden" value = "<%=groupId%>"/>');

define("travsky/jcf/1.0.0/view/service/groupServiceTabServiceMgr-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", "travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/service/monitorService_view-debug", "travsky/jcf/1.0.0/view/service/groupServiceCfg-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug", "travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug", "travsky/jcf/1.0.0/view/service/respGroupMoni_view-debug", "my97Date-debug", "travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug", "highcharts-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/service/groupServiceTabMgrLayout-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/service/groupServiceItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/service/groupServiceList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    require("bs-modal-debug")($);
    //详细信息页面
    var ServiceDetailLayout = require("travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ServerOperHelper = require("travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug");
    var GroupServiceCfgView = require("travsky/jcf/1.0.0/view/service/groupServiceCfg-debug");
    var GrayServiceCfgView = require("travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug");
    var DegradeServiceCfgView = require("travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug");
    //列表每一项视图
    var ItemView = Marionette.ItemView.extend({
        initialize: function() {
            var authJcfStartFlag = authCheck.getJcfStart4GroupFlag();
            var authJcfStopFlag = authCheck.getJcfStop4GroupFlag();
            var authJcfForceStopFlag = authCheck.getJcForceStop4GroupFlag();
            var authJcfSXQHFlag = authCheck.getJcfSXQH4GroupFlag();
            this.model.set("authJcfStartFlag", authJcfStartFlag);
            this.model.set("authJcfStopFlag", authJcfStopFlag);
            this.model.set("authJcfForceStopFlag", authJcfForceStopFlag);
            this.model.set("authJcfSXQHFlag", authJcfSXQHFlag);
            //切换域内域外可见
            ///////////
            var authSihStartFlag = authCheck.getSihStart4GroupFlag();
            var authSihStopFlag = authCheck.getSihStop4GroupFlag();
            var authSihForceStopFlag = authCheck.getSihForceStop4GroupFlag();
            var authSihSXQHFlag = authCheck.getSihSXQH4GroupFlag();
            this.model.set("authSihStartFlag", authSihStartFlag);
            this.model.set("authSihStopFlag", authSihStopFlag);
            this.model.set("authSihForceStopFlag", authSihForceStopFlag);
            this.model.set("authSihSXQHFlag", authSihSXQHFlag);
            ///////////
            var authHttpStartFlag = authCheck.getHttpStart4GroupFlag();
            var authHttpStopFlag = authCheck.getHttpStop4GroupFlag();
            var authHttpForceStopFlag = authCheck.getHttpForceStop4GroupFlag();
            var authHttpSXQHFlag = authCheck.getHttpSXQH4GroupFlag();
            this.model.set("authHttpStartFlag", authHttpStartFlag);
            this.model.set("authHttpStopFlag", authHttpStopFlag);
            this.model.set("authHttpForceStopFlag", authHttpForceStopFlag);
            this.model.set("authHttpSXQHFlag", authHttpSXQHFlag);
            ////////////
            var authWebStartFlag = authCheck.getWebStart4GroupFlag();
            var authWebStopFlag = authCheck.getWebStop4GroupFlag();
            var authWebForceStopFlag = authCheck.getWebForceStop4GroupFlag();
            var authWebSXQHFlag = authCheck.getWebSXQH4GroupFlag();
            this.model.set("authWebStartFlag", authWebStartFlag);
            this.model.set("authWebStopFlag", authWebStopFlag);
            this.model.set("authWebForceStopFlag", authWebForceStopFlag);
            this.model.set("authWebSXQHFlag", authWebSXQHFlag);
            ///////////////
            var authTbStartFlag = authCheck.getTbStart4GroupFlag();
            var authTbStopFlag = authCheck.getTbStop4GroupFlag();
            var authTbForceStopFlag = authCheck.getTbForceStop4GroupFlag();
            var authTbSXQHFlag = authCheck.getTbSXQH4GroupFlag();
            this.model.set("authTbStartFlag", authTbStartFlag);
            this.model.set("authTbStopFlag", authTbStopFlag);
            this.model.set("authTbForceStopFlag", authTbForceStopFlag);
            this.model.set("authTbSXQHFlag", authTbSXQHFlag);
            ////////////
            var authTtStartFlag = authCheck.getTtStart4GroupFlag();
            var authTtStopFlag = authCheck.getTtStop4GroupFlag();
            var authTtForceStopFlag = authCheck.getTtForceStop4GroupFlag();
            var authTtSXQHFlag = authCheck.getTtSXQH4GroupFlag();
            this.model.set("authTtStartFlag", authTtStartFlag);
            this.model.set("authTtStopFlag", authTtStopFlag);
            this.model.set("authTtForceStopFlag", authTtForceStopFlag);
            this.model.set("authTtSXQHFlag", authTtSXQHFlag);
            ///////////////////
            var authUtlStartFlag = authCheck.getUtlStart4GroupFlag();
            var authUtlStopFlag = authCheck.getUtlStop4GroupFlag();
            var authUtlForceStopFlag = authCheck.getUtlForceStop4GroupFlag();
            var authUtlSXQHFlag = authCheck.getUtlSXQH4GroupFlag();
            this.model.set("authUtlStartFlag", authUtlStartFlag);
            this.model.set("authUtlStopFlag", authUtlStopFlag);
            this.model.set("authUtlForceStopFlag", authUtlForceStopFlag);
            this.model.set("authUtlSXQHFlag", authUtlSXQHFlag);
            //增加权限
            var authSwitchDefaultVersionFlag = authCheck.getSwitchDefaultVersionFlag();
            this.model.set("authSwitchDefaultVersionFlag", authSwitchDefaultVersionFlag);
            this.model.set("groupId", $("#hiddenGroupIdOnPage").val());
            this.model.on("change", this.render);
        },
        tagName: "tr",
        template: _.template(itemTmpStr),
        events: {
            "click .serviceOperationTd a": "operServiceStatus",
            "click .changeDomainBtn": "changeVisibly",
            "click .serviceDetail": "toServiceDetailUI",
            "click .GroupMoniView": "toGroupMoniViewUI",
            "click .changeDefaultVersionTd button": "changeDefaultVersion",
            "click a.serviceDegradeConfig": "serviceDegradeConfig",
            "click a.openServiceDegradeConfig": "openServiceDegradeConfig",
            "click a.closeServiceDegradeConfig": "closeServiceDegradeConfig",
            "click a.serviceGrayConfig": "serviceGrayConfig",
            "click a.openServiceGrayConfig": "openServiceGrayConfig",
            "click a.closeServiceGrayConfig": "closeServiceGrayConfig",
            "click .groupServiceCfgTd": "groupServiceCfg"
        },
        changeDefaultVersion: function() {
            var self = this;
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var ff = this.model.get("isDefaultVersion");
            var toFlag = "";
            var msg = "确定将应用从";
            if (ff == "TRUE") {
                toFlag = "FALSE";
                msg += "默认版切换到非默认版?";
            } else {
                toFlag = "TRUE";
                msg += "非默认版切换到默认版?";
            }
            var checkRegistryFlag = this.checkRegistryRun();
            if (checkRegistryFlag) {
                var groupId = $.trim($("#hiddenGroupIdOnPage").val());
                var serviceId = this.model.get("serviceId");
                var isDefaultVersion = this.model.get("isDefaultVersion");
                var currentVersion = this.model.get("appVersion");
                var serviceName = this.model.get("serviceName");
                var grayEnable = this.model.get("grayEnable");
                var jsParam = {};
                jsParam.groupId = groupId;
                jsParam.serviceId = serviceId;
                jsParam.isDefaultVersion = isDefaultVersion;
                jsParam.currentVersion = currentVersion;
                jsParam.serviceName = serviceName;
                jsParam.grayEnable = grayEnable;
                if (confirm(msg)) {
                    var serverURL = "/" + jcfManager.appName + "/service/changeServiceDefaultVersion.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
                    $.when(ajaxing).done(function(data) {
                        if (data.msg == "success") {
                            self.model.set("isDefaultVersion", toFlag);
                            //	alert("grayEnable   "+data.grayEnable);
                            //	alert("isDefaultVersion   "+data.isDefaultVersion);
                            //	alert("grayConfig   "+data.grayConfig);
                            self.model.set("grayEnable", data.grayEnable);
                            self.model.set("grayConfig", data.grayConfig);
                            //将其他版本改为非默认版
                            self.trigger("parent:refreshPageDefaultVersion");
                        } else {
                            var tipModel = new ListTipModel();
                            tipModel.set("errList", [ "切换失败!" ]);
                            var tipView = new ListTipView({
                                model: tipModel
                            });
                            jcfManager.tipInfoRegion.show(tipView);
                        }
                    });
                }
            }
        },
        checkRegistryRun: function() {
            //检查注册库服务器是否正常运行
            var flag = false;
            var serverURL = "/" + jcfManager.appName + "/deployMgr/checkRegistryStatus.action";
            var ajaxing = util.dealSYNCHAjaxRequestWithoutParam(serverURL);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == "1") {
                        flag = true;
                    } else {
                        var tipModel = new ListTipModel();
                        tipModel.set("errList", [ "" + data.errMsg ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        jcfManager.tipInfoRegion.show(tipView);
                    }
                } else {
                    var tipModel = new ListTipModel();
                    tipModel.set("errList", [ "" + data.errMsg ]);
                    var tipView = new ListTipView({
                        model: tipModel
                    });
                    jcfManager.tipInfoRegion.show(tipView);
                }
            });
            return flag;
        },
        toServiceDetailUI: function(e) {
            //跳转到查看服务详情页面
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var groupId = this.model.get("groupId");
            var serviceId = this.model.get("serviceId");
            var queryString = {
                groupId: groupId,
                serviceId: serviceId
            };
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/group/detail/param/" + QueryString.stringify(queryString));
            var detailView = new ServiceDetailLayout({
                queryString: queryString
            });
            jcfManager.contentRegion.show(detailView);
            detailView.trigger("showPageInfo");
        },
        toGroupMoniViewUI: function(e) {
            //跳转到度量数据查询页面
            e.stopPropagation();
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var RespGroupMoniView = require("travsky/jcf/1.0.0/view/service/respGroupMoni_view-debug");
            this.model.set("checkGroupCategory", "1");
            jcfManager.dialogRegion.show(new RespGroupMoniView({
                model: this.model
            }));
            $("#queryGroupDataModal").modal("show");
        },
        operServiceStatus: function(e) {
            //启动停止服务器
            e.stopPropagation();
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var href = $(e.target).attr("href");
            var helper = new ServerOperHelper();
            var groupOrServer = "group";
            //当前服务状态
            if ("stop" == href) {
                helper.stopService(this.model, groupOrServer);
            } else if ("forceStop" == href) {
                helper.forceStopService(this.model, groupOrServer);
            } else if ("start" == href) {
                helper.startService(this.model, groupOrServer);
            }
        },
        changeVisibly: function() {
            var self = this;
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var flag = this.checkRegistryRun();
            if (flag) {
                var serviceName = self.model.get("serviceName");
                var visibly = true;
                var toServiceProperty = "";
                if (this.model.get("serviceProperty") == 1) {
                    //当前为域外可见//切换为域内可见
                    visibly = false;
                    toServiceProperty = "0";
                } else {
                    //当前为域内可见//切换为域外可见
                    visibly = true;
                    toServiceProperty = "1";
                }
                var jsonParam = {
                    serviceName: serviceName,
                    visibly: visibly
                };
                var serverURL = "/" + jcfManager.appName + "/service/setServiceVisibly.action";
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        self.model.set("serviceProperty", toServiceProperty);
                    } else {
                        var tipModel = new ListTipModel();
                        tipModel.set("errList", [ "切换失败" ]);
                        var tipView = new ListTipView({
                            model: tipModel
                        });
                        jcfManager.tipInfoRegion.show(tipView);
                    }
                });
            }
        },
        groupServiceCfg: function(e) {
            //组服务配置
            e.stopPropagation();
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var serverURL = "/" + jcfManager.appName + "/service/getGroupServiceConfig.action";
            var groupId = this.model.get("groupId");
            var serviceId = this.model.get("serviceId");
            var serviceCategory = this.model.get("serviceCategory");
            var appName = this.model.get("appName");
            var appVersion = this.model.get("appVersion");
            var serviceName = this.model.get("serviceName");
            var jsonParam = {
                groupId: groupId,
                serviceId: serviceId,
                serviceCategory: serviceCategory,
                appName: appName,
                appVersion: appVersion,
                serviceName: serviceName
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                var errorFlag = data.errorFlag;
                if (errorFlag == "") {
                    var groupName = data.groupName;
                    var model = new Backbone.Model(data);
                    model.set({
                        groupName: groupName,
                        serviceId: serviceId,
                        groupId: groupId,
                        appName: appName,
                        appVersion: appVersion,
                        serviceName: serviceName,
                        serviceCategory: serviceCategory
                    });
                    // alert("self.model====="+self.model);
                    var dialogView = new GroupServiceCfgView({
                        model: model,
                        preModel: self.model
                    });
                    jcfManager.dialogRegion.show(dialogView);
                    $("#groupServiceConfigModal").modal("show");
                } else {
                    alert(errorFlag);
                }
            });
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        },
        serviceDegradeConfig: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var serviceId = this.model.get("serviceId");
            var appVersion = this.model.get("appVersion");
            var serviceName = this.model.get("serviceName");
            var groupId = this.model.get("groupId");
            var serviceCategory = this.model.get("serviceCategory");
            var url = "/" + jcfManager.appName + "/service/getServiceDegradeConfig.action";
            var jsonParam = {
                serviceId: serviceId,
                appVersion: appVersion,
                serviceName: serviceName,
                groupId: groupId,
                serviceCategory: serviceCategory
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(url, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.errorMsg == "") {
                    var model = new Backbone.Model(data);
                    model.set({
                        serviceName: serviceName,
                        appVersion: appVersion,
                        serviceCategory: serviceCategory,
                        groupId: groupId,
                        serviceId: serviceId
                    });
                    var dialogView = new DegradeServiceCfgView({
                        model: model
                    });
                    jcfManager.dialogRegion.show(dialogView);
                    $("#degradeModal").modal("show");
                } else {
                    alert(data.errorMsg);
                }
            });
        },
        serviceGrayConfig: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var serviceId = this.model.get("serviceId");
            var appVersion = this.model.get("appVersion");
            var serviceName = this.model.get("serviceName");
            var grayEnable = this.model.get("grayEnable");
            var groupId = this.model.get("groupId");
            var url = "/" + jcfManager.appName + "/service/getServiceGrayConfig.action";
            var jsonParam = {
                serviceId: serviceId
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(url, jsonParam);
            $.when(ajaxing).done(function(data) {
                var errorFlag = data.errorFlag;
                if (errorFlag == "") {
                    var model = new Backbone.Model(data);
                    model.set({
                        groupId: groupId,
                        serviceId: serviceId,
                        appVersion: appVersion,
                        serviceName: serviceName,
                        grayEnable: grayEnable
                    });
                    var dialogView = new GrayServiceCfgView({
                        model: model
                    });
                    jcfManager.dialogRegion.show(dialogView);
                    $("#grayModal").modal("show");
                } else {
                    alert(errorFlag);
                }
            });
        },
        openServiceDegradeConfig: function() {
            var self = this;
            var jsonParam = {
                groupId: this.model.get("groupId"),
                serviceName: this.model.get("serviceName"),
                appVersion: this.model.get("appVersion"),
                serviceCategory: this.model.get("serviceCategory"),
                serviceId: this.model.get("serviceId")
            };
            var serverURL = "/" + jcfManager.appName + "/service/enableServiceDegrade.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("degradeEnable", "true");
                } else {
                    alert("开启失败");
                }
            });
        },
        closeServiceDegradeConfig: function() {
            var self = this;
            var jsonParam = {
                groupId: self.model.get("groupId"),
                serviceName: self.model.get("serviceName"),
                appVersion: self.model.get("appVersion"),
                serviceCategory: self.model.get("serviceCategory"),
                serviceId: self.model.get("serviceId")
            };
            var serverURL = "/" + jcfManager.appName + "/service/disableServiceDegrade.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("degradeEnable", "false");
                } else {
                    alert("关闭失败");
                }
            });
        },
        openServiceGrayConfig: function() {
            var self = this;
            var jsonParam = {
                serviceId: self.model.get("serviceId"),
                serviceName: self.model.get("serviceName")
            };
            var serverURL = "/" + jcfManager.appName + "/service/enableServiceGray.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("grayEnable", "true");
                } else {
                    alert("开启失败!" + data.errorMsg);
                }
            });
        },
        closeServiceGrayConfig: function() {
            var self = this;
            var jsonParam = {
                serviceId: self.model.get("serviceId")
            };
            var serverURL = "/" + jcfManager.appName + "/service/disableServiceGray.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("grayEnable", "false");
                } else {
                    alert("关闭失败");
                }
            });
        }
    });
    //列表视图
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        tagName: "table",
        className: "table table-bordered",
        childView: ItemView,
        childViewContainer: "tbody",
        childEvents: {
            "parent:refreshPageDefaultVersion": function(curChildView) {
                var model = curChildView.model;
                var serviceName = model.get("serviceName");
                var appVersion = model.get("appVersion");
                var isDefaultVersion = model.get("isDefaultVersion");
                if ("TRUE" == isDefaultVersion) {
                    //如果当前model改为默认版本则其他都为非默认版本
                    this.collection.each(function(m) {
                        if (m.get("serviceName") == serviceName) {
                            if (m.get("appVersion") != appVersion) {
                                m.set("isDefaultVersion", "FALSE");
                                m.set("grayConfig", "TRUE");
                            }
                        }
                    });
                }
            }
        }
    });
    var GroupServiceMgrLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        template: _.template(layoutTmpStr),
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #searchGroupServiceBtn": "searchGroupService"
        },
        searchGroupService: function() {
            var category = $("#search4ServiceType").val();
            var status = $("#search4RuningStatus").val();
            var appName = $("#search4AppName").val();
            this.queryString.currentPage = "1";
            if (this.queryString.pageSize == undefined || this.queryString.pageSize == "") {
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            jsParam.groupId = this.queryString.groupId;
            jsParam.category = category;
            jsParam.status = status;
            jsParam.appName = appName;
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/group/param/" + QueryString.stringify(jsParam));
            this.showPageInfo2(jsParam);
        },
        showPageInfo: function() {
            if (this.queryString.currentPage == undefined || this.queryString.currentPage == "") {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            jsParam.groupId = this.queryString.groupId;
            jsParam.category = this.queryString.category;
            jsParam.status = this.queryString.status;
            jsParam.appName = this.queryString.appName;
            this.showPageInfo2(jsParam);
        },
        showPageInfo2: function(jsParam) {
            var self = this;
            var refreshSpace = 2e3;
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            //保存当前url
            var curHash = window.location.hash;
            $("#freshPage4GroupServiceUrl").val(curHash);
            var serverURL = "/" + jcfManager.appName + "/service/searchGroupService.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                var collection = new Backbone.Collection(data.recordList);
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                var model = new Backbone.Model(data);
                model.set("uriSection", "group");
                var pbView = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
                self.collection = collection;
                //定时刷新页面服务的状态
                if (collection.length > 0) {
                    var ttt = setInterval(self.updatePageServiceStatus, refreshSpace, self);
                    $("#freshPage4GroupServiceFlag").val(ttt);
                    setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                }
            });
        },
        updatePageServiceStatus: function(self) {
            //定时更新页面上的服务器状态字段
            var groupId = self.queryString.groupId;
            var collection = self.collection;
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4GroupServiceUrl").val();
            var autoFreshFlag = $("#freshPage4GroupServiceFlag").val();
            if (oldUrl == curHash) {
                //刷新页面
                var jsonParam = {
                    groupId: groupId
                };
                var serverURL = "/" + jcfManager.appName + "/service/searchGroupServiceStatus.action";
                var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    collection.each(function(m) {
                        var serviceId = m.get("serviceId");
                        var cStatus = model.get("" + serviceId + "");
                        if (cStatus != undefined) {
                            m.set("serviceStatus", cStatus);
                        }
                    });
                });
            } else {
                //结束自动刷新
                window.clearInterval(autoFreshFlag);
            }
        }
    });
    return GroupServiceMgrLayout;
});

define("travsky/jcf/1.0.0/template/service/groupServiceTabMgrLayout-debug.tpl", [], '<div id = "tipInfoRegion"></div>\n<div  id = "searchBarRegion">\n	<table class = "table">\n		<tr>\n			<td width = "8%">服务类型:</td>\n			<td width = "20%">\n				<select id = "search4ServiceType"  class  = "form-control input-sm">\n	         	 	<option value="" selected="selected">全部</option>\n	         	 	<%\n	         	 		for(var i = 0 ; i < categoryList.length ; i ++){\n	         	 			if(paramCategory==categoryList[i].key){\n	         	 				%><option selected = "selected" value="<%=categoryList[i].key%>"><%=categoryList[i].value%></option><%\n	         	 			}else{\n	         	 				%><option value="<%=categoryList[i].key%>"><%=categoryList[i].value%></option><%\n	         	 			}\n	         	 		}\n	         	 	%>\n         	 	</select>\n			</td>\n			<td width = "8%">运行状态:</td>\n			<td width = "20%">\n				<select id = "search4RuningStatus"  class  = "form-control input-sm">\n	         	 	<option value="" selected="selected">全部</option>\n	         	 	<%\n	         	 		for(var j = 0 ; j < statusList.length ; j ++){\n	         	 			if(paramStatus==statusList[j].key){\n	         	 			   %><option selected = "selected" value="<%=statusList[j].key%>"><%=statusList[j].value%></option><%\n	         	 			}else{\n	         	 			   %><option value="<%=statusList[j].key%>"><%=statusList[j].value%></option><%\n	         	 			}\n	         	 		}\n	         	 	%>\n         	 	</select>\n			</td>\n			<td width = "8%">应用列表:</td>\n			<td width = "20%">\n				<select id = "search4AppName"  class  = "form-control input-sm">\n	         	 	<option value="" selected="selected">全部</option>\n					<%\n	         	 		for(var k = 0 ; k < appNameList.length ; k ++){\n	         	 			if(paramAppName==appNameList[k]){\n	         	 				%><option selected = "selected" value="<%=appNameList[k]%>"><%=appNameList[k]%></option><%\n	         	 			}else{\n	         	 				%><option value="<%=appNameList[k]%>"><%=appNameList[k]%></option><%\n	         	 			}\n	         	 		}\n	         	 	%>\n         	 	</select>\n			</td>\n			<td width = "8%"><button id = "searchGroupServiceBtn"  class = "btn">查询</button></td>\n			<td width = "*%"></td>\n		</tr>\n	</table>\n</div>\n<div  id = "listRegion"></div>\n<div  id = "pagebarRegion"></div>\n<input id = "hiddenGroupIdOnPage" type = "hidden" value = "<%=groupId%>"/>\n<input id = "freshPage4GroupServiceFlag" type = "hidden" />\n<input id = "freshPage4GroupServiceUrl" type = "hidden" />\n');

define("travsky/jcf/1.0.0/template/service/groupServiceItem-debug.tpl", [], '<td><%=appName%></td>\n<td><%=serviceName%></td>\n<td><%=serviceCategory%></td>\n<td><%=appVersion%></td>\n<%\n	if(serviceCategory=="BusinessService"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n				%>[域外]&nbsp;<button type="button" class="changeDomainBtn btn btn-success btn-xs <%if(authJcfSXQHFlag!="true"){%>disabled<%}%> ">切换</button><%\n			}else if(serviceProperty==0){\n				%>[域内]&nbsp;<button type="button"  class="changeDomainBtn btn btn-warning  btn-xs <%if(authJcfSXQHFlag!="true"){%>disabled<%}%> ">切换</button><%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n			<%\n			 if(isDefaultVersion=="TRUE"){\n			%>[是]\n				<%if(authSwitchDefaultVersionFlag=="true"){\n					%>&nbsp;<button type="button"  class="btn btn-success btn-xs">切换</button><%\n				}\n			}else{\n			%>[否]\n				<%if(authSwitchDefaultVersionFlag=="true"){\n					%>&nbsp;<button type="button" class="btn btn-warning btn-xs">切换</button><%\n				}\n			 }\n			%>\n		</td>\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authJcfStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authJcfForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authJcfStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%}else if (serviceCategory=="sih"){%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		 <span class = "text-info">不支持切换</span>\n		</td>\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authSihStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authSihStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authSihForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authSihStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authSihStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authSihStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}else if (serviceCategory=="http"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		 <span class = "text-info">不支持切换</span>\n		</td>\n		\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authHttpStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authHttpStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authHttpForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authHttpStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authHttpStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authHttpStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}else if (serviceCategory=="webservice"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		<span class = "text-info">不支持切换</span>\n		</td>\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authWebStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authWebStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authWebForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authWebStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authWebStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authWebStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}else if (serviceCategory=="tumsb"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		<span class = "text-info">不支持切换</span>\n		</td>\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authTbStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authTbStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authTbForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authTbStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authTbStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authTbStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}else if (serviceCategory=="tumst"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		<span class = "text-info">不支持切换</span>\n		</td>\n		\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authTtStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authTtStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authTtForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authTtStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authTtStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authTtStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}else if (serviceCategory=="utl"){\n	%>\n		<td>\n			<%if(serviceProperty==1){\n			   %>[域外]<%\n			}else if(serviceProperty==0){\n			   %>[域内]<%\n			}%>\n		</td>\n		<td class = "changeDefaultVersionTd" >\n		<span class = "text-info">不支持切换</span>\n		</td>\n		\n		<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				[启动]&nbsp;\n				<%if(authUtlStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				[停止]&nbsp;\n				<%if(authUtlStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>[启动中]<%\n			}else if(serviceStatus=="4"){\n			%>\n				[停止中]&nbsp;\n				<%if(authUtlForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>[挂起]<%\n			}else if(serviceStatus=="6"){\n				%>[挂起中]<%\n			}else if(serviceStatus=="7"){\n				%>[未知]<%\n			}else if(serviceStatus=="8"){\n				%>[查询中]<%\n			}else if (serviceStatus=="9"){\n			%>\n				[服务停止，补偿服务运行]&nbsp;\n				<%if(authUtlStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}%>\n				<%if(authUtlStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				[服务运行，补偿服务停止]&nbsp;\n				<%if(authUtlStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强停</a><%\n				}%>\n			<%\n			}else{\n				%>[未知]<%\n			}%>\n		</td>\n	<%\n	}\n%>\n\n\n<td class="degradeConfig">\n\n <% if(serviceCategory == "BusinessService" && messageMode =="request_response" ){ %>\n	<%\n	   if ((degradeConfig == "false" || degradeConfig == "FALSE") && (degradeEnable == "false" || degradeEnable == "FALSE")){\n	%>\n	   <a href="javascript:void(0);" class="serviceDegradeConfig">配置</a>\n	<%\n	}else if ((degradeConfig == "true" || degradeConfig == "TRUE") && (degradeEnable == "false" || degradeEnable == "FALSE")){\n	%>\n		关闭 &nbsp;&nbsp;&nbsp; <a href="serviceDegradeConfig" class="serviceDegradeConfig">配置</a>\n		||\n		<a href="javascript:void(0);" class="openServiceDegradeConfig">开启</a>\n	<%\n	}\n	   else if (degradeConfig == "true" && degradeEnable == "true"){\n	%>\n		开启 &nbsp;&nbsp;&nbsp; <a href="serviceDegradeConfig" class="serviceDegradeConfig">配置</a>\n		||\n		<a href="javascript:void(0);" class="closeServiceDegradeConfig">关闭</a>\n	<%\n	}else if ((degradeConfig == "false" || degradeConfig == "FALSE") && degradeEnable == "true"){\n	%>\n		开启 &nbsp;&nbsp;&nbsp; <a href="javascript:void(0);" class="serviceDegradeConfig">配置</a>\n		||\n		<a href="javascript:void(0);" class="closeServiceDegradeConfig">关闭</a>\n	<%\n	}\n	}else{ %>\n       <span >不支持 </span>\n	<% } %>\n</td>\n\n<td>\n    <% if(isDefaultVersion == "TRUE" ||  isDefaultVersion=="true" || grayConfig== "false" || grayConfig == "FALSE") { %>\n       <span >不支持 </span>\n     <% }\n    else {\n		if(grayEnable=="TRUE" || grayEnable =="true"){ %>\n		   开启 &nbsp;&nbsp;&nbsp;<a href="javascript:void(0);" class="serviceGrayConfig">配置</a>\n			||\n			<a href="javascript:void(0);" class="closeServiceGrayConfig" >关闭</a>\n	<%	}else if(grayEnable=="FALSE" || grayEnable =="false"){ %>\n		  关闭 &nbsp;&nbsp;&nbsp;  <a href="javascript:void(0);" class="serviceGrayConfig">配置</a>\n			||\n			<a href="javascript:void(0);" class="openServiceGrayConfig" >开启</a>\n	<%	}\n    }%>\n</td>\n\n<td class="groupServiceCfgTd"> <a class = "myhand">组配置</a></td>\n<td><a class = "myhand serviceDetail">详情</a></td>\n<td><a class = "myhand GroupMoniView">查看</a></td>\n\n');

define("travsky/jcf/1.0.0/template/service/groupServiceList-debug.tpl", [], "<thead>\n  <tr>\n   	<th>应用名称</th>\n  	<th>服务名称</th>\n    <th>类型</th>\n    <th>版本</th>\n    <th>属性</th>\n    <th>默认版</th>\n    <th>状态</th>\n    <th>降级</th>\n    <th>灰度</th>\n    <th>组配置</th>\n     <th>详情</th>\n     <th>度量数据</th>\n  </tr>\n</thead>\n<tbody>\n</tbody>\n");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-2-11
 * Time: 下午01:27:00
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/serviceDetailLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", "travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/service/monitorService_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/service/serviceDetailLayout-debug.tpl");
    var baseInfoTmpStr = require("travsky/jcf/1.0.0/template/service/serviceDetailBaseInfo-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/service/serviceDetailItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/service/serviceDetailList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug");
    var ServerOperHelper = require("travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug");
    var BaseInfoView = Marionette.ItemView.extend({
        template: _.template(baseInfoTmpStr),
        tagName: "table",
        className: "table table-bordered"
    });
    var ItemView = Marionette.ItemView.extend({
        initialize: function() {
            var authJcfStartFlag = authCheck.getJcfStart4GroupFlag();
            var authJcfStopFlag = authCheck.getJcfStop4GroupFlag();
            var authJcfForceStopFlag = authCheck.getJcForceStop4GroupFlag();
            var authJcfMoniFlag = authCheck.getJcfMoni4ServerFlag();
            //监控
            this.model.set("authJcfStartFlag", authJcfStartFlag);
            this.model.set("authJcfStopFlag", authJcfStopFlag);
            this.model.set("authJcfForceStopFlag", authJcfForceStopFlag);
            this.model.set("authJcfMoniFlag", authJcfMoniFlag);
            ///////////
            var authSihStartFlag = authCheck.getSihStart4GroupFlag();
            var authSihStopFlag = authCheck.getSihStop4GroupFlag();
            var authSihForceStopFlag = authCheck.getSihForceStop4GroupFlag();
            var authSihMoniFlag = authCheck.getSihMoni4ServerFlag();
            this.model.set("authSihStartFlag", authSihStartFlag);
            this.model.set("authSihStopFlag", authSihStopFlag);
            this.model.set("authSihForceStopFlag", authSihForceStopFlag);
            this.model.set("authSihMoniFlag", authSihMoniFlag);
            ///////////
            var authHttpStartFlag = authCheck.getHttpStart4GroupFlag();
            var authHttpStopFlag = authCheck.getHttpStop4GroupFlag();
            var authHttpForceStopFlag = authCheck.getHttpForceStop4GroupFlag();
            var authHttpMoniFlag = authCheck.getHttpMoni4ServerFlag();
            this.model.set("authHttpStartFlag", authHttpStartFlag);
            this.model.set("authHttpStopFlag", authHttpStopFlag);
            this.model.set("authHttpForceStopFlag", authHttpForceStopFlag);
            this.model.set("authHttpMoniFlag", authHttpMoniFlag);
            ////////////
            var authWebStartFlag = authCheck.getWebStart4GroupFlag();
            var authWebStopFlag = authCheck.getWebStop4GroupFlag();
            var authWebForceStopFlag = authCheck.getWebForceStop4GroupFlag();
            var authWebMoniFlag = authCheck.getWebMoni4ServerFlag();
            this.model.set("authWebStartFlag", authWebStartFlag);
            this.model.set("authWebStopFlag", authWebStopFlag);
            this.model.set("authWebForceStopFlag", authWebForceStopFlag);
            this.model.set("authWebMoniFlag", authWebMoniFlag);
            ///////////////
            var authTbStartFlag = authCheck.getTbStart4GroupFlag();
            var authTbStopFlag = authCheck.getTbStop4GroupFlag();
            var authTbForceStopFlag = authCheck.getTbForceStop4GroupFlag();
            var authTbMoniFlag = authCheck.getTbMoni4ServerFlag();
            this.model.set("authTbStartFlag", authTbStartFlag);
            this.model.set("authTbStopFlag", authTbStopFlag);
            this.model.set("authTbForceStopFlag", authTbForceStopFlag);
            this.model.set("authTbMoniFlag", authTbMoniFlag);
            ////////////
            var authTtStartFlag = authCheck.getTtStart4GroupFlag();
            var authTtStopFlag = authCheck.getTtStop4GroupFlag();
            var authTtForceStopFlag = authCheck.getTtForceStop4GroupFlag();
            var authTtMoniFlag = authCheck.getTtMoni4ServerFlag();
            this.model.set("authTtStartFlag", authTtStartFlag);
            this.model.set("authTtStopFlag", authTtStopFlag);
            this.model.set("authTtForceStopFlag", authTtForceStopFlag);
            this.model.set("authTtMoniFlag", authTtMoniFlag);
            ///////////////////
            var authUtlStartFlag = authCheck.getUtlStart4GroupFlag();
            var authUtlStopFlag = authCheck.getUtlStop4GroupFlag();
            var authUtlForceStopFlag = authCheck.getUtlForceStop4GroupFlag();
            var authUtlMoniFlag = authCheck.getUtlMoni4ServerFlag();
            this.model.set("authUtlStartFlag", authUtlStartFlag);
            this.model.set("authUtlStopFlag", authUtlStopFlag);
            this.model.set("authUtlForceStopFlag", authUtlForceStopFlag);
            this.model.set("authUtlMoniFlag", authUtlMoniFlag);
            //增加配置权限
            var authJcfCfgFlag = authCheck.getJcfCfg4GroupFlag();
            var authSihCfgFlag = authCheck.getSihCfg4GroupFlag();
            var authHttpCfgFlag = authCheck.getHttpCfg4GroupFlag();
            var authWebCfgFlag = authCheck.getWebCfg4GroupFlag();
            var authTbCfgFlag = authCheck.getTbCfg4GroupFlag();
            var authTtCfgFlag = authCheck.getTtCfg4GroupFlag();
            var authUtlCfgFlag = authCheck.getUtlCfg4GroupFlag();
            this.model.set("authJcfCfgFlag", authJcfCfgFlag);
            this.model.set("authSihCfgFlag", authSihCfgFlag);
            this.model.set("authHttpCfgFlag", authHttpCfgFlag);
            this.model.set("authWebCfgFlag", authWebCfgFlag);
            this.model.set("authTbCfgFlag", authTbCfgFlag);
            this.model.set("authTtCfgFlag", authTtCfgFlag);
            this.model.set("authUtlCfgFlag", authUtlCfgFlag);
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(itemTmpStr),
        tagName: "tr",
        events: {
            "click .serviceStatusOperTd a": "operServiceStatus",
            "click .serviceCfgTd a": "toServerServiceCfgUI",
            "click .showCompensate div": "toggleCompensate",
            "click .serviceMonitorTd a": "serviceMonitor"
        },
        toggleCompensate: function(e) {
            var $t = $(e.target);
            var serverName = this.model.get("serverName");
            var $curTr = $t.parent("td").parent("tr");
            if ($t.hasClass("arrow_down")) {
                //当前是展开状态
                $t.removeClass("arrow_down");
                $t.addClass("arrow_right");
                //移除显示的补偿服务
                $curTr.siblings("." + serverName).remove();
            } else {
                //当前是关闭状态
                $t.removeClass("arrow_right");
                $t.addClass("arrow_down");
                $curTr.siblings("." + serverName).remove();
                this.dealCompensateDataOnPage($curTr, serverName);
            }
        },
        dealCompensateDataOnPage: function($curTr, serverName) {
            //处理页面
            var compensatePrefix = "~compensate~";
            var cServiceName = compensatePrefix + this.model.get("serviceName");
            var serverURL = "/" + jcfManager.appName + "/service/getServerCompansateService.action";
            var serverId = this.model.get("serverId");
            var serviceName = cServiceName;
            var version = this.model.get("appVersion");
            var jsonParam = {
                serverId: serverId,
                serviceName: serviceName,
                version: version
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var self = this;
            $.when(ajaxing).done(function(data) {
                if (data != null) {
                    var status = self.convertServiceStatus(data.serviceStatus);
                    var showLine = "<tr class = '" + serverName + "'>" + "<td>补偿服务</td>" + "<td>" + data.serverName + "</td>" + "<td>" + data.serviceName + "</td>" + "<td>" + data.serviceCategory + "</td>" + "<td>" + status + "</td>" + "<td>----</td>" + "<td>----</td>" + "<td>----</td>" + "</tr>";
                    $curTr.after(showLine);
                }
            });
        },
        serviceMonitor: function(e) {
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4DetailServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var MonitorServiceView = require("travsky/jcf/1.0.0/view/service/monitorService_view-debug");
            var serverURL = "/" + jcfManager.appName + "/service/monitorService.action";
            var serverId = this.model.get("serverId");
            var serviceId = this.model.get("serviceId");
            var jsonParam = {
                serverId: serverId,
                serviceId: serviceId
            };
            appRouter.navigate("serviceMgr/server/monitor/param/" + QueryString.stringify(jsonParam));
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.errorFlag != undefined && data.errorFlag.length > 0) {
                    alert(data.errorFlag);
                } else {
                    var model = new Backbone.Model(data);
                    var version = data.configInfo.version || "";
                    var serviceName = data.configInfo.name || "";
                    var requestQueueSize = data.configInfo.requestQueueSize || "";
                    model.set("version", version);
                    model.set("serviceName", serviceName);
                    model.set("requestQueueSize", requestQueueSize);
                    var jString = {
                        serverId: serverId,
                        serviceId: serviceId
                    };
                    var monitorView = new MonitorServiceView({
                        model: model,
                        queryString: jString
                    });
                    jcfManager.contentRegion.show(monitorView);
                }
            });
        },
        convertServiceStatus: function(serviceStatus) {
            var retStr = serviceStatus;
            if (serviceStatus === "1") {
                retStr = "启动";
            } else if (serviceStatus === "2") {
                retStr = "停止";
            } else if (serviceStatus === "3") {
                retStr = "启动中";
            } else if (serviceStatus === "4") {
                retStr = "停止中";
            } else if (serviceStatus === "5") {
                retStr = "挂起";
            } else if (serviceStatus === "6") {
                retStr = "挂起中";
            } else if (serviceStatus === "7") {
                retStr = "未知";
            } else if (serviceStatus === "8") {
                retStr = "";
            }
            return retStr;
        },
        toServerServiceCfgUI: function(e) {
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4DetailServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var modelName = sidbarUtil.getModuleName();
            var serverId = this.model.get("serverId");
            var serviceId = this.model.get("serviceId");
            var queryString = {
                serverId: serverId,
                serviceId: serviceId
            };
            appRouter.navigate(modelName + "/server/cfg/param/" + QueryString.stringify(queryString), {
                trigger: true
            });
        },
        operServiceStatus: function(e) {
            e.preventDefault();
            var groupOrServer = "server";
            var helper = new ServerOperHelper();
            var autoFreshFlag = $("#freshPage4DetailServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var serverName = this.model.get("serverName");
            var $curTr = $(e.target).parent("td").parent("tr");
            var $t = $curTr.find("td.showCompensate div");
            if ($t.hasClass("arrow_down")) {
                //当前是展开状态
                $t.removeClass("arrow_down");
                $t.addClass("arrow_right");
                $curTr.siblings("." + serverName).remove();
            }
            var href = $(e.target).attr("href");
            var autoFreshFlag = $("#freshPage4ServerServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            if ("stop" == href) {
                helper.stopService(this.model, groupOrServer);
            } else if ("forceStop" == href) {
                helper.forceStopService(this.model, groupOrServer);
            } else if ("start" == href) {
                helper.startService(this.model, groupOrServer);
            }
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        tagName: "table",
        className: "table table-bordered",
        childView: ItemView,
        childViewContainer: "tbody"
    });
    var ServiceDetailLayout = Marionette.LayoutView.extend({
        template: _.template(layoutTmpStr),
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        regions: {
            baseRegion: "#baseRegion",
            tipInfoRegion: "#tipInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #bacBtn": "bac"
        },
        bac: function() {
            window.history.back();
        },
        showPageInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/service/findServiceById4Group.action";
            var serviceId = this.queryString.serviceId;
            var groupId = this.queryString.groupId;
            var currentPage = this.queryString.currentPage;
            if (currentPage == undefined) {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.serviceId = serviceId;
            jsParam.groupId = groupId;
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            //保存当前url
            var curHash = window.location.hash;
            $("#freshPage4DetailServiceUrl").val(curHash);
            var refreshSpace = 2e3;
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            $.when(ajaxing).done(function(data) {
                var baseModel = new Backbone.Model(data.baseInfo);
                var baseView = new BaseInfoView({
                    model: baseModel
                });
                self.baseRegion.show(baseView);
                var collection = new Backbone.Collection(data.pageBean.recordList);
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                //显示分页栏
                var pageModel = new Backbone.Model(data.pageBean);
                pageModel.set("uriSection", "group/detail");
                var pbView = new PagebarView({
                    model: pageModel,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
                if (collection.length > 0) {
                    //定时刷新页面服务的状态
                    var ttt = setInterval(self.updatePageServiceStatus, refreshSpace, collection);
                    $("#freshPage4DetailServiceFlag").val(ttt);
                    setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                }
            });
        },
        updatePageServiceStatus: function(collection) {
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4DetailServiceUrl").val();
            var autoFreshFlag = $("#freshPage4DetailServiceFlag").val();
            if (oldUrl == curHash) {
                //刷新页面
                var serverURL = "/" + jcfManager.appName + "/service/updateStatus4Group.action";
                var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    //serviceId_serverId <--> status
                    collection.each(function(m) {
                        var serverId = m.get("serverId");
                        var cStatus = model.get(serverId + "");
                        if (cStatus != undefined) {
                            m.set("serviceStatus", cStatus);
                        }
                    });
                });
            } else {
                //结束自动刷新
                window.clearInterval(autoFreshFlag);
            }
        }
    });
    return ServiceDetailLayout;
});

define("travsky/jcf/1.0.0/template/service/serviceDetailLayout-debug.tpl", [], '<div id = "baseRegion"></div>\n<div id = "tipInfoRegion"></div>\n<div  id = "listRegion"></div>\n<div id = "pagebarRegion"></div>\n<input type = "hidden" id = "freshPage4DetailServiceUrl" />\n<input type = "hidden" id = "freshPage4DetailServiceFlag" />\n<button class="btn btn-primary" id="bacBtn" type="button">返回</button>');

define("travsky/jcf/1.0.0/template/service/serviceDetailBaseInfo-debug.tpl", [], "<caption>服务基本信息</caption>\n<thead>\n	<tr>\n		<th>所属分组</th>\n		<th>当前版本</th>\n		<th>应用包</th>\n	</tr>\n</thead>\n<tbody>\n	<tr>\n		<td><%=groupName%></td>\n		<td><%=appVersion%></td>\n		<td><%=appName%></td>\n	</tr>\n</tbody>\n");

define("travsky/jcf/1.0.0/template/service/serviceDetailItem-debug.tpl", [], '<%if(hasCompensateService=="1"){//表示有补偿服务\n  %><td class = "showCompensate"><div class = "arrow_rigth myhand">&nbsp;</div></td><%	\n}else{\n  %><td>无补偿服务</td><%	\n}%>\n<td><%=serverName%></td>\n<td><%=serviceName%></td>\n<td><%=serviceCategory%></td>\n<td>\n	<%\n		if(serviceStatus=="1"){\n		   %>启动<%\n		}else if (serviceStatus=="2"){\n		   %>停止<%\n		}else if (serviceStatus=="3"){\n		   %>启动中...<%\n		}else if (serviceStatus=="4"){\n		   %>停止中...<%\n		}else if (serviceStatus=="5"){\n		   %>挂起<%\n		}else if (serviceStatus=="6"){\n		   %>挂起中...<%\n		}else if (serviceStatus=="7"){\n		   %>异常<%\n		}else if (serviceStatus=="8"){\n		   %>查询中...<%\n		}else if (serviceStatus=="9"){\n		   %>停止,补偿流程还未停止<%\n		}else if (serviceStatus=="10"){\n		   %>服务运行，补偿流程停止<%\n		}else if (serviceStatus=="21"){\n		   %>服务器状态：启动<%\n		}else if (serviceStatus=="22"){\n		   %>服务器状态：停止<%\n		}else if (serviceStatus=="23"){\n		   %>服务器状态：启动中<%\n		}else if (serviceStatus=="24"){\n		   %>服务器状态：停止中<%\n		}else if (serviceStatus=="25"){\n		   %>服务器状态：服务器异常<%\n		}else if (serviceStatus=="26"){\n		   %>服务器状态：Down<%\n		}else if (serviceStatus=="27"){\n		   %>服务器状态：查询中<%\n		}else if (serviceStatus=="28"){\n		   %>服务器状态：连接异常<%\n		}\n	%>\n</td>\n\n\n<%if(serviceCategory=="BusinessService"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authJcfStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authJcfForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authJcfStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authJcfForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authJcfStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authJcfStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authJcfForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authJcfStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authJcfForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authJcfStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authJcfCfgFlag=="true"){%>\n			<a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info">配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authJcfMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="sih"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authSihStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authSihForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authSihStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authSihForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authSihStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authSihStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authSihForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authSihStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authSihForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authSihStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authSihCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authSihMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="http"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authHttpStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authHttpForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authHttpStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authHttpForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authHttpStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authHttpStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authHttpForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authHttpStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authHttpForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authHttpStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authHttpCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authHttpMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="webservice"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authWebStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authWebForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authWebStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authWebForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authWebStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authWebStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authWebForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authWebStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authWebForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authWebStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authWebCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authWebMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="tumsb"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authTbStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTbForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authTbStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authTbForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authTbStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authTbStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTbForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authTbStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTbForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authTbStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authTbCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authTbMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="tumst"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authTtStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTtForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authTtStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authTtForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authTtStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authTtStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTtForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authTtStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authTtForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authTtStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authTtCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authTtMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}else if (serviceCategory=="utl"){\n%>\n	<td class = "serviceStatusOperTd">\n		<%\n			if(serviceStatus=="1"){%>\n				<%if(authUtlStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authUtlForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="2"){%>\n				<%if(authUtlStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="3"){\n			  %>启动/停止<%\n			}else if (serviceStatus=="4"){%>\n				<%if(authUtlForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%}else if (serviceStatus=="5"){\n			  %>未知<%\n			}else if (serviceStatus=="6"){\n			  %>未知<%\n			}else if (serviceStatus=="7"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="8"){\n			  %>无操作<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authUtlStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authUtlStopFlag=="true"){\n					%><a href = "stop" class = "myhand">|停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authUtlForceStopFlag=="true"){\n			  		%><a href = "forceStop" class = "myhand">|强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authUtlStopFlag=="true"){\n					%><a href = "stop" class = "myhand">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n			  	<%if(authUtlForceStopFlag=="true"){\n			  		%>|<a href = "forceStop" class = "myhand">强制停止</a><%\n			  	}else{\n			  		%><span class = "text-info">强制停止</span><%\n			  	}%>	\n			<%\n			}else if (serviceStatus=="21"){%>\n				<%if(authUtlStartFlag=="true"){\n					%><a href = "start" class = "myhand">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%}else if (serviceStatus=="22"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="23"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="24"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="25"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="26"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="27"){\n			  %>&nbsp;<%\n			}else if (serviceStatus=="28"){\n			  %>&nbsp;<%\n			}\n		%>\n	</td>\n	<td class = "serviceCfgTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="2"||serviceStatus=="9"||serviceStatus=="10")&&authUtlCfgFlag=="true"){%>\n			 <a  href = "#" class = "myhand">配置</a>\n		<%}else{%>\n			<span class = "text-info"> 配置</span>\n		<%}%>\n	</td>\n	<td class = "serviceMonitorTd" >\n		<%if((serviceStatus=="1"||serviceStatus=="10")&&authUtlMoniFlag=="true"){%>\n			  <a  href = "#" class = "myhand">查看</a><%\n		}else{%>\n			 <span class = "text-info"> 查看</span>\n		<%}%>\n	</td>\n<%\n}%>');

define("travsky/jcf/1.0.0/template/service/serviceDetailList-debug.tpl", [], "<caption>组服务列表</caption>\n<thead>\n  <tr>\n  	<th>展开</th>\n    <th>服务器名称</th>\n    <th>服务名称</th>\n    <th>服务类型</th>\n    <th>状态</th>\n    <th>操作</th>\n    <th>参数配置</th>\n    <th>详情监控</th>\n  </tr>\n</thead>\n<tbody></tbody>");

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-5-14
 * Time: 上午11:19:24
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", [ "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug" ], function(require, exports, module) {
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ServerOperHelper = function() {
        this.getSgStr = function(serverOrGroup) {
            var sgStr = "0";
            //单个服务器 为:2,group为:1
            if (serverOrGroup == "group") {
                sgStr = "1";
            } else if ("server") {
                sgStr = "2";
            }
            return sgStr;
        };
        //--------------------但服务器操作开始-------------------------------------------//
        this.startService = function(viewModel, serverOrGroup) {
            //启动服务
            var sgStr = this.getSgStr(serverOrGroup);
            //表示单个服务器或则组服务器
            var toStatus = "";
            //执行成功以后要显示的状态吗
            var operationType = "0";
            //1:表示不操作补偿服务
            var operStr = "";
            var curServiceStatus = viewModel.get("serviceStatus");
            //当前服务状态
            var hasCompensate = viewModel.get("hasCompensateService");
            viewModel.set("serviceStatus", "3");
            operStr = "1_" + sgStr + "_";
            toStatus = "1";
            if (hasCompensate == "1") {
                //是否有补偿业务
                //存在补偿服务的话只有一种情况[服务已经停止，补偿服务仍在运行中]
                if (curServiceStatus == "9") {
                    //表示启动服务但不启动补偿服务
                    operStr += "1";
                    operationType = "1";
                } else {
                    //其他情况，连带补偿服务一起启动
                    operStr += "2";
                }
            } else {
                operStr += "1";
                operationType = "0";
            }
            this.serviceOperation(operStr, operationType, toStatus, curServiceStatus, viewModel, serverOrGroup);
        };
        this.stopService = function(viewModel, serverOrGroup) {
            var sgStr = this.getSgStr(serverOrGroup);
            //表示单个服务器或则组服务器
            var toStatus = "";
            //执行成功以后要显示的状态吗
            var operationType = "0";
            //1:表示不操作补偿服务
            var operStr = "";
            var curServiceStatus = viewModel.get("serviceStatus");
            //当前服务状态
            var hasCompensate = viewModel.get("hasCompensateService");
            operStr = "2_" + sgStr + "_";
            toStatus = "2";
            var confirmModel = new ConfirmModel();
            confirmModel.set({
                title: "停止服务确认",
                msg: "是否停止补偿服务?",
                btnok: "停止",
                btncl: "不停止"
            });
            var confirmView = new ConfirmView({
                model: confirmModel
            });
            var self = this;
            if (hasCompensate == "1") {
                jcfManager.dialogRegion.show(confirmView);
                confirmView.confirm(function(myFlag) {
                    viewModel.set("serviceStatus", "4");
                    if (myFlag) {
                        operStr += "2";
                        operationType = "0";
                    } else {
                        toStatus = "9";
                        //如果不停止补偿服务
                        operStr += "1";
                        operationType = "1";
                    }
                    self.serviceOperation(operStr, operationType, toStatus, curServiceStatus, viewModel, serverOrGroup);
                });
            } else {
                viewModel.set("serviceStatus", "4");
                operStr += "1";
                operationType = "0";
                this.serviceOperation(operStr, operationType, toStatus, curServiceStatus, viewModel, serverOrGroup);
            }
        };
        this.forceStopService = function(viewModel, serverOrGroup) {
            var sgStr = this.getSgStr(serverOrGroup);
            //表示单个服务器或则组服务器
            var toStatus = "";
            //执行成功以后要显示的状态吗
            var operationType = "0";
            //1:表示不操作补偿服务
            var operStr = "";
            var curServiceStatus = viewModel.get("serviceStatus");
            //当前服务状态
            var hasCompensate = viewModel.get("hasCompensateService");
            operStr = "3_" + sgStr + "_";
            toStatus = "2";
            var confirmModel = new ConfirmModel();
            confirmModel.set({
                title: "停止服务确认",
                msg: "是否停止补偿服务?",
                btnok: "停止",
                btncl: "不停止"
            });
            var confirmView = new ConfirmView({
                model: confirmModel
            });
            var self = this;
            if (hasCompensate == "1") {
                jcfManager.dialogRegion.show(confirmView);
                confirmView.confirm(function(myFlag) {
                    viewModel.set("serviceStatus", "4");
                    if (myFlag) {
                        operStr += "2";
                        operationType = "0";
                    } else {
                        toStatus = "9";
                        //如果不停止补偿服务
                        operStr += "1";
                        operationType = "1";
                    }
                    self.serviceOperation(operStr, operationType, toStatus, curServiceStatus, viewModel, serverOrGroup);
                });
            } else {
                viewModel.set("serviceStatus", "4");
                operStr += "1";
                operationType = "0";
                this.serviceOperation(operStr, operationType, toStatus, curServiceStatus, viewModel, serverOrGroup);
            }
        };
        this.serviceOperation = function(operStr, operationType, toStatus, oldServiceStatus, viewModel, serverOrGroup) {
            var url = "/" + jcfManager.appName + "/service/serviceOperation.action";
            var serviceId = viewModel.get("serviceId");
            var jsonObj = {
                serviceId: serviceId,
                operationType: operationType,
                serviceOperation: operStr
            };
            if (serverOrGroup == "group") {
                var groupId = viewModel.get("groupId");
                jsonObj.groupId = groupId;
            } else if (serverOrGroup == "server") {
                var serverId = viewModel.get("serverId");
                jsonObj.serverId = serverId;
            } else {
                alert("无效操作，请检查!");
                return;
            }
            $.when(util.dealAjaxRequest4SimpleParam(url, jsonObj)).done(function(data) {
                if (data.flag == "true") {
                    if (data.status == 1) {
                        viewModel.set("serviceStatus", toStatus);
                    } else {
                        var errList = data.errMsgList;
                        var lm = new ListTipModel();
                        lm.set("errList", errList);
                        var lv = new ListTipView({
                            model: lm
                        });
                        jcfManager.tipInfoRegion.show(lv);
                        var confirmModel = new ConfirmModel();
                        confirmModel.set({
                            btnok: "确定",
                            btncl: "关闭"
                        });
                        var confirmView = new ConfirmView({
                            model: confirmModel
                        });
                        confirmModel.set("msg", "启停操作未成功!");
                        jcfManager.dialogRegion.show(confirmView);
                        confirmView.confirm();
                        viewModel.set("serviceStatus", oldServiceStatus);
                    }
                } else {
                    var confirmModel = new ConfirmModel();
                    confirmModel.set({
                        btnok: "确定",
                        btncl: "关闭"
                    });
                    var confirmView = new ConfirmView({
                        model: confirmModel
                    });
                    confirmModel.set("msg", "操作出错!");
                    jcfManager.dialogRegion.show(confirmView);
                    confirmView.confirm();
                    viewModel.set("serviceStatus", oldServiceStatus);
                }
            });
        };
    };
    return ServerOperHelper;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-3-10
 * Time: 下午05:09:58
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/monitorService_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "querystring-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug" ], function(require, exports, module) {
    //服务监控页面
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/monitoryService_view-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var QueryString = require("querystring-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug");
    var QueryString = require("querystring-debug");
    var MonitorServiceView = Marionette.ItemView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            var authClearQueueFlag = authCheck.getClearQueueInfoFlag();
            this.model.set("authClearQueueFlag", authClearQueueFlag);
            this.listenTo(this.model, "change", this.render);
        },
        template: _.template(viewTemplateStr),
        events: {
            "click #clearQueueInfoBtn": "clearQueueInfo",
            "click #monitorServiceBackBtn": "monitorServiceBack",
            "click #monitorServiceRefreshBtn": "refreshPage"
        },
        monitorServiceBack: function() {
            var serverId = this.queryString.serverId;
            var jString = {
                serverId: serverId
            };
            appRouter.navigate("serviceMgr/server/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        refreshPage: function() {
            //刷新页面
            var serverId = this.queryString.serverId;
            var serviceId = this.queryString.serviceId;
            var t = new Date().getTime();
            var jString = {
                serverId: serverId,
                serviceId: serviceId,
                t: t
            };
            appRouter.navigate("serviceMgr/server/monitor/param/" + QueryString.stringify(jString), {
                trigger: true
            });
        },
        clearQueueInfo: function() {
            var self = this;
            var serverURL = "/" + jcfManager.appName + "/service/clearServiceQueue.action";
            var serverName = this.model.get("serverName");
            var serviceName = this.model.get("serviceName");
            var version = this.model.get("version");
            var jsonParam = {
                serverName: serverName,
                serviceName: serviceName,
                version: version
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag == "true") {
                    //serviceMgr/server/monitor
                    var timstamp = new Date().valueOf();
                    self.queryString.t = timstamp;
                    appRouter.navigate("serviceMgr/server/monitor/param/" + QueryString.stringify(self.queryString), {
                        trigger: true
                    });
                } else {
                    alert("清除失败!");
                }
            });
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    return MonitorServiceView;
});

define("travsky/jcf/1.0.0/template/service/monitoryService_view-debug.tpl", [], '<table class = "table table-bordered">\n	<caption>服务实例基本信息</caption>\n	<thead></thead>\n	<tbody>\n	  <tr>\n	  	<td>服务名称&nbsp;:&nbsp;</td>\n	  	<td><%=name%></td>\n	  	<td>所属分组&nbsp;:&nbsp;</td>\n	  	<td><%=gname%></td>\n	  </tr>\n	  <tr>\n	  	<td>当前版本&nbsp;:&nbsp;</td>\n	  	<td><%=currentVersion%></td>\n	  	<td>服务器名称&nbsp;:&nbsp;</td>\n	  	<td><%=serverName%></td>\n	  </tr>\n	</tbody>\n</table>\n<br/>\n<table class = "table table-condensed">\n	<thead>\n	</thead>\n	<tbody>\n	  <tr>\n	    <td width = "40%">请求处理线程池的主动执行任务的近似线程数 &nbsp;:&nbsp;</td>\n	    <td width = "10%"><%=configInfo.requestPoolActive%></td>\n	    <td width = "10%"></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>应答处理线程池的主动执行任务的近似线程数 &nbsp;:&nbsp;</td>\n	    <td><%=configInfo.responsePoolActive%></td>\n	    <td></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>请求处理线程池的曾经同时位于线程池中的最大线程数 &nbsp;:&nbsp;</td>\n	    <td><%=configInfo.requestPoolLargestPoolSize%></td>\n	    <td></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>应答处理线程池的曾经同时位于线程池中的最大线程数&nbsp;:&nbsp;</td>\n	    <td><%=configInfo.responsePoolLargestPoolSize%></td>\n	    <td></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>应答队列中消息大小&nbsp;:&nbsp;</td>\n	    <td><%=configInfo.replyQueueSize%></td>\n	    <td></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>请求队列中消息大小&nbsp;:&nbsp;</td>\n	    <td><%=requestQueueSize%></td>\n	    <td><button id = "clearQueueInfoBtn" class = "btn <%if(authClearQueueFlag!="true"){%>disabled<%}%>">清除队列</button></td>\n	    <td width = "*%"></td>\n	  </tr>\n	</tbody>\n</table>\n<br/>\n<%if(compensate=="1"){%>\n<table class = "table table-condensed">\n	<caption>补偿服务信息</caption>\n	<thead>\n	</thead>\n	<tbody>\n	  <tr>\n	    <td width = "40%">请求处理线程池的主动执行任务的近似线程数 &nbsp;:&nbsp;</td>\n	    <td width = "10%"><%=compensateRunningInfo.requestPoolActive%></td>\n	    <td width = "*%"></td>\n	  </tr>\n	  <tr>\n	    <td>应答处理线程池的主动执行任务的近似线程数 &nbsp;:&nbsp;</td>\n	    <td><%=compensateRunningInfo.responsePoolActive%></td>\n	    <td></td>\n	  </tr>\n	  <tr>\n	    <td>请求处理线程池的曾经同时位于线程池中的最大线程数 &nbsp;:&nbsp;</td>\n	    <td><%=compensateRunningInfo.requestPoolLargestPoolSize%></td>\n	    <td ></td>\n	  </tr>\n	  <tr>\n	    <td>应答处理线程池的曾经同时位于线程池中的最大线程数 &nbsp;:&nbsp;</td>\n	    <td><%=compensateRunningInfo.responsePoolLargestPoolSize%></td>\n	    <td></td>\n	  </tr>\n	  <tr>\n	    <td>应答队列中消息大小&nbsp;:&nbsp;</td>\n	    <td><%=compensateRunningInfo.replyQueueSize%></td>\n	    <td></td>\n	  </tr>\n	  <tr>\n	    <td>请求队列中消息大小 &nbsp;:&nbsp;</td>\n	    <td><%=compensateRunningInfo.requestQueueSize%></td>\n	    <td></td>\n	  </tr>\n	</tbody>\n</table>\n<%\n}%>\n\n<div>\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n	<button id = "monitorServiceBackBtn" class = "btn btn-default" >返回</button>\n	<button id = "monitorServiceRefreshBtn" class = "btn btn-primary" >刷新</button>\n</div>');

/**
 * Created with eclipse. User: yichengjie Date: 2015-2-2 Time: 上午09:42:57 To
 * change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/groupServiceCfg-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "querystring-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/groupServiceCfg-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var QueryString = require("querystring-debug");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    //   var StickyHeaderHelp=require("./stickyHeaderLayout");
    require("bs-modal-debug")($);
    var groupServiceCfgView = Marionette.LayoutView.extend({
        template: _.template(viewTemplateStr),
        events: {
            "click #submitFormBtn": "submitForm",
            "click #backBtn": "toBackPage",
            "click #help": "help",
            "blur #inputQueue": "checkInputQueue",
            "blur #outputQueue": "checkOutputQueue",
            "blur #inMpeNum": "checkInMpeNum",
            "blur #outMpeNum": "checkOutMpeNum",
            "blur #requestQueueSize": "checkRequestQueueSize",
            "blur #invokeContextSize": "checkInvokeContextSize",
            "blur #threadPoolSize": "checkThreadPoolSize",
            "blur #upperLimit": "checkUpperLimit",
            "blur #invokeTimeout": "checkInvokeTimeout",
            "blur #stickyHeader": "checkStickyHeader",
            "change #messageMode": "changeMessageMode"
        },
        initialize: function(options) {
            //	alert("===="+options.aa);
            //	alert("===="+options.model);
            this.preModel = options.preModel;
            this.listenTo(this.model, "change:messageMode", this.render);
        },
        toBackPage: function() {
            //window.history.back();
            this.remove();
        },
        help: function() {
            window.open("help.html#stickyHeaderTips");
        },
        submitForm: function() {
            // 提交表单
            $("#submitFormBtn").addClass("disabled");
            var hiddenPageFlag = $("#hiddenPageFlag").val();
            var serviceId = this.model.get("serviceId");
            var groupId = this.model.get("groupId");
            var appName = this.model.get("appName");
            var appVersion = this.model.get("appVersion");
            var groupName = this.model.get("groupName");
            //	alert("groupServiceCfg.js    "+groupName);
            var serviceName = this.model.get("serviceName");
            var serviceCategory = this.model.get("serviceCategory");
            var formObj = null;
            if ("page2" == hiddenPageFlag) {
                var flag = this.checkBusinessServiceForm();
                // 校验表单是否合法
                if (flag) {
                    var formIds = [ "requestQueueSize", "invokeContextSize", "threadPoolSize", "messageMode", "upperLimit", "queueType", "stickyHeader", "sticky" ];
                    formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    formObj.appName = appName;
                    formObj.appVersion = appVersion;
                    formObj.groupName = groupName;
                    formObj.serviceName = serviceName;
                    formObj.serviceCategory = serviceCategory;
                    var serverURL = "/" + jcfManager.appName + "/service/updateGroupServiceCfg.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                    var self = this;
                    $.when(ajaxing).done(function(data) {
                        self.dealReturnInfo(data, formObj.messageMode);
                    });
                }
            } else if ("page1" == hiddenPageFlag) {
                var flag = this.checkAdapterServiceForm();
                if (flag) {
                    var formIds = [ "inputQueue", "outputQueue", "inMpeNum", "outMpeNum", "mqServerInfo", "requestQueueSize", "upperLimit", "invokeContextSize", "threadPoolSize", "messageMode" ];
                    formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    formObj.appName = appName;
                    formObj.appVersion = appVersion;
                    formObj.groupName = groupName;
                    formObj.serviceName = serviceName;
                    formObj.serviceCategory = serviceCategory;
                    var serverURL = "/" + jcfManager.appName + "/service/updateGroupServiceCfg.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                    var self = this;
                    $.when(ajaxing).done(function(data) {
                        self.dealReturnInfo(data, formObj.messageMode);
                    });
                }
            } else if ("page3" == hiddenPageFlag) {
                var flag = this.checkHttpServiceForm();
                if (flag) {
                    var formIds = [ "invokeServiceName", "invokeTimeout" ];
                    formObj = util.getFormInputObj(formIds);
                    formObj.serviceId = serviceId;
                    formObj.groupId = groupId;
                    formObj.appName = appName;
                    formObj.appVersion = appVersion;
                    formObj.groupName = groupName;
                    formObj.serviceName = serviceName;
                    formObj.serviceCategory = serviceCategory;
                    var serverURL = "/" + jcfManager.appName + "/service/updateGroupServiceCfg.action";
                    var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                    var self = this;
                    $.when(ajaxing).done(function(data) {
                        self.dealReturnInfo(data, formObj.messageMode);
                    });
                }
            }
            $("#submitFormBtn").removeClass("disabled");
        },
        dealReturnInfo: function(data, messageMode) {
            if (data.status == "1") {
                //alert("组配置成功");
                var confirmModel = new ConfirmModel();
                confirmModel.set({
                    btnok: "确定",
                    btncl: "关闭"
                });
                var confirmView = new ConfirmView({
                    model: confirmModel
                });
                confirmModel.set("msg", "组配置成功!");
                jcfManager.dialogRegion.show(confirmView);
                confirmView.confirm();
                this.preModel.set("messageMode", messageMode);
                $("#submitFormBtn").removeClass("disabled");
                this.remove();
            } else {
                $("#submitFormBtn").removeClass("disabled");
                var errorinfo = "";
                for (var element in data.serviceUpdateConfigList) {
                    if (data.serviceUpdateConfigList[element].serviceConfigUpdateStatus === 0) {
                        if (data.serviceUpdateConfigList[element].JMXConnectError === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时连接被拒绝!";
                        }
                        if (data.serviceUpdateConfigList[element].illegalArgument === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现非法参数!";
                        }
                        if (data.serviceUpdateConfigList[element].malformedObjectName === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现非法的对象名!";
                        }
                        if (data.serviceUpdateConfigList[element].nullPointer === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现空指针!";
                        }
                        if (data.serviceUpdateConfigList[element].loginException === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 登录异常!";
                        }
                        if (data.serviceUpdateConfigList[element].errorServiceConfigException === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 找不到对应的配置文件!";
                        }
                        if (data.serviceUpdateConfigList[element].exception === 1) {
                            errorinfo = errorinfo + data.serviceUpdateConfigList[element].serverName + " 配置时出现未知异常,建议查看karaf log!";
                        }
                    }
                }
                var confirmModel = new ConfirmModel();
                confirmModel.set({
                    btnok: "确定",
                    btncl: "关闭"
                });
                var confirmView = new ConfirmView({
                    model: confirmModel
                });
                confirmModel.set("msg", errorinfo);
                jcfManager.dialogRegion.show(confirmView);
                confirmView.confirm();
            }
        },
        changeMessageMode: function() {
            var val = $.trim($("#messageMode").val());
            this.model.set("messageMode", val);
            $("#groupServiceConfigModal").modal("show");
        },
        checkRequestQueueSize: function() {
            var id = "requestQueueSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInvokeContextSize: function() {
            var id = "invokeContextSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkThreadPoolSize: function() {
            var id = "threadPoolSize";
            var minNum = 1;
            var maxNum = 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkUpperLimit: function() {
            var id = "upperLimit";
            var minNum = 1;
            var maxNum = 99;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInputQueue: function() {
            var id = "inputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkOutputQueue: function() {
            var id = "outputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkInMpeNum: function() {
            var id = "inMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value.length > 0) {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkOutMpeNum: function() {
            var id = "outMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value.length > 0) {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            } else {
                inputCheckUtil.clearInput(id);
            }
            return flag;
        },
        checkInvokeTimeout: function() {
            var id = "invokeTimeout";
            var minNum = 1;
            var maxNum = 1e3;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkBusinessServiceForm: function() {
            if (this.checkRequestQueueSize() && this.checkInvokeContextSize() && this.checkThreadPoolSize() && this.checkUpperLimit() && this.checkStickyHeader()) {
                return true;
            }
            return false;
        },
        checkAdapterServiceForm: function() {
            if (this.checkValidateQueueNameAndNum() && this.checkInputQueue() && this.checkOutputQueue() && this.checkThreadPoolSize() && this.checkUpperLimit()) {
                return true;
            }
            return false;
        },
        checkStickyHeader: function() {
            var id = "stickyHeader";
            var sticky = this.model.get("sticky");
            if (sticky == "true" || sticky == "TRUE") {
                return inputCheckUtil.checkNotNull(id);
            }
            return true;
        },
        checkHttpServiceForm: function() {
            return this.checkInvokeTimeout();
        },
        checkWebServiceForm: function() {
            return this.checkInvokeTimeout();
        },
        checkValidateQueueNameAndNum: function() {
            //
            var flag = false;
            var id1 = "inputQueue";
            var id2 = "outputQueue";
            var flag1 = inputCheckUtil.checkNotNull(id1);
            var flag2 = inputCheckUtil.checkNotNull(id2);
            if (!flag1 && !flag2) {
                // 如果都为空,则提示至少一个不为空
                // $("#"+id1+"Tip").html("接入队列和接出队列至少需要配置一个") ;
                flag = inputCheckUtil.errInput(id1, "接入队列和接出队列至少需要配置一个");
            } else {
                // 有不为空的
                inputCheckUtil.successInput(id1);
                inputCheckUtil.successInput(id2);
                // 接入mq队列---接入mq个数//接出mq队列---接出mq个数
                var val1 = $.trim($("#" + id1).val());
                if (val1 == "") {
                    // 接入mq为空//判断接入mq是否为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        flag = inputCheckUtil.successInput(id1);
                    } else {
                        //
                        flag = inputCheckUtil.errInput(id1, "接入MQ队列名称不能为空");
                    }
                } else {
                    // 接入mq不为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        // 接入mq个数为空
                        flag = inputCheckUtil.errInput("inMpeNum", "接入MQ连接数不能为空");
                    } else {
                        flag = inputCheckUtil.successInput("inMpeNum");
                    }
                }
                // //////////////////////////////////////////////////////////
                if (flag) {
                    var val2 = $.trim($("#" + id2).val());
                    if (val2 == "") {
                        // 接出mq为空//判断接出mq是否为空
                        if ($.trim($("#outMpeNum").val()) == "") {
                            flag = inputCheckUtil.successInput(id2);
                        } else {
                            //
                            flag = inputCheckUtil.errInput(id2, "接出MQ队列名称不能为空");
                        }
                    } else {
                        // 接入mq不为空
                        if ($.trim($("#outMpeNum").val()) == "") {
                            // 接入mq个数为空
                            flag = inputCheckUtil.errInput("outMpeNum", "接出MQ连接数不能为空");
                        } else {
                            flag = inputCheckUtil.successInput("outMpeNum");
                        }
                    }
                }
            }
            return flag;
        }
    });
    return groupServiceCfgView;
});

define("travsky/jcf/1.0.0/template/service/groupServiceCfg-debug.tpl", [], '<!--\n<div  id = "groupServiceConfigModal"  class="modal fade" id="myModal" tabindex="-1" role="dialog" \n   aria-labelledby="myModalLabel" aria-hidden="true"   data-backdrop="static">\n-->\n<div id = "groupServiceConfigModal" class="modal" aria-hidden="true" style="z-index:10400;"  data-backdrop="static">\n   <div class="modal-dialog">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" \n               data-dismiss="modal" aria-hidden="true">\n                  &times;\n            </button>\n            <h4 class="modal-title" id="myModalLabel">\n                    组服务配置\n            </h4>\n         </div>\n         <div class="modal-body">\n         <input id = "hiddenPageFlag" type = "hidden" value = "<%=pageFlag%>"/>\n       <%\n	if("page1"==pageFlag){//SIH/TUMST/TUMSB/UTL类型适配服务返回页面//SIHServiceData\n	   %>\n	   		<form class="form-horizontal" role="form">\n	   			<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n			    <div class="form-group" id = "inputQueueDiv" >\n		            <label for="inputQueue" class="col-sm-4 control-label">接入MQ队列名称：</label>\n		            <div class="col-sm-4">\n		            	<input  id="inputQueue" value = "<%=inputQueue%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger"></span><span id = "inputQueueTip"></span></div>\n		        </div>\n		        \n		          \n		        <div class="form-group" id = "inMpeNumDiv" >\n		            <label for="inMpeNum" class="col-sm-4 control-label">接入MQ连接个数：</label>\n		            <div class="col-sm-4">\n		            	<input  id="inMpeNum" value = "<%=inMpeNum%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "inMpeNumTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "outputQueueDiv" >\n		            <label for="outputQueue" class="col-sm-4 control-label">接出MQ队列名称：</label>\n		            <div class="col-sm-4">\n		            	<input  id="outputQueue" value = "<%=outputQueue%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "outputQueueTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "outMpeNumDiv" >\n		            <label for="outMpeNum" class="col-sm-4 control-label">接出MQ连接个数：</label>\n		            <div class="col-sm-4">\n		            	<input  id="outMpeNum" value = "<%=outMpeNum%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "outMpeNumTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "mqServerInfoDiv" >\n		            <label for="mqServerInfo" class="col-sm-4 control-label">MQ服务器信息(IP/PORT/通道名/队列管理器名/超时转移时间):</label>\n		            <div class="col-sm-4">\n		            	<input  id="mqServerInfo" value = "<%=mqServerInfo%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "mqServerInfoTip"></span></div>\n		        </div>\n		        \n		        \n		        <div class="form-group" id = "requestQueueSizeDiv" >\n		            <label for="requestQueueSize" class="col-sm-4 control-label">请求队列大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="requestQueueSize" value = "<%=requestQueueSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "requestQueueSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "invokeContextSizeDiv" >\n		            <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "invokeContextSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "threadPoolSizeDiv" >\n		            <label for="threadPoolSize" class="col-sm-4 control-label">适配服务线程池大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "messageModeDiv" >\n		            <label for="messageMode" class="col-sm-4 control-label">信息模式:</label>\n		            <div class="col-sm-4">\n		            	<input  id="messageMode" value = "<%=messageMode%>" readonly="readonly" type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "messageModeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "upperLimitDiv" >\n		            <label for="upperLimit" class="col-sm-4 control-label">队列预警值:</label>\n		            <div class="col-sm-4">\n		            	<input  id="upperLimit" value = "<%=upperLimit%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*%(1-99)</span><span id = "upperLimitTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "queueTypeDiv" >\n		            <label for="queueType" class="col-sm-4 control-label">队列类型:</label>\n		            <div class="col-sm-4">\n		            	<select id="queueType"   class="form-control input-sm">\n		            		<%if(messageMode=="one_way"){%>\n	            				<%for(var i = 0 ; i < queueTypes.length ; i ++){%>\n		            				<option <%if(queueType==queueTypes[i]){%>selected = "selected"<%}%>  value = "<%=queueTypes[i]%>"><%=queueTypes[i]%></option>\n		            			<%}%>\n	            			<%}else{%>\n	            				<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n	            			<%}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "queueTypeTip"></span></div>\n		        </div>\n	   		</form>\n	   <%	\n	}   \n else if ("page2"==pageFlag){//businessService\n	   %>\n	   		<form class="form-horizontal" role="form">\n	   			<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n	   			<div class="form-group" id = "requestQueueSizeDiv" >\n		            <label for="requestQueueSize" class="col-sm-4 control-label">请求队列大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="requestQueueSize" value = "<%=requestQueueSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "requestQueueSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "invokeContextSizeDiv" >\n		            <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "invokeContextSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "threadPoolSizeDiv" >\n		            <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "messageModeDiv" >\n		            <label for="messageMode" class="col-sm-4 control-label">信息模式：</label>\n		            <div class="col-sm-4">\n		            	<select id="messageMode"   class="form-control input-sm">\n		            		<%for(var j = 0 ; j < messageModes.length ; j ++){\n		            			if(messageMode== messageModes[j]){\n		            			  %><option selected = "selected" value = "<%=messageModes[j]%>"><%=messageModes[j]%></option><%\n		            			}else{\n		            			  %><option value = "<%=messageModes[j]%>"><%=messageModes[j]%></option><%\n		            			}\n		            		}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "messageModeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "upperLimitDiv" >\n		            <label for="upperLimit" class="col-sm-4 control-label">队列预警值：</label>\n		            <div class="col-sm-4">\n		            	<input  id="upperLimit" value = "<%=upperLimit%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "upperLimitTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "queueTypeDiv" >\n		            <label for="queueType" class="col-sm-4 control-label">队列类型:</label>\n		            <div class="col-sm-4">\n		            	<select id="queueType"   class="form-control input-sm">\n		            		<%if(messageMode=="one_way"){%>\n	            				<%for(var i = 0 ; i < queueTypes.length ; i ++){%>\n		            				<option <%if(queueType==queueTypes[i]){%>selected = "selected"<%}%>  value = "<%=queueTypes[i]%>"><%=queueTypes[i]%></option>\n		            			<%}%>\n	            			<%}else{%>\n	            				<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n	            			<%}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "queueTypeTip"></span></div>\n		        </div>\n		        <input type="hidden" id="sticky" value="<%=sticky%>" />\n		        <% if(sticky== "true" || sticky =="TRUE") { %>\n		        <div class="form-group" id = "stickyDiv">\n		            <label class="col-sm-4 control-label">亲和服务消息头名称：</label>\n		            <div class="col-sm-4">\n		            	<input id="stickyHeader" value="<%=stickyHeader%>" type="text" class="form-control input-sm"/>\n		          \n		            </div>\n		            <div>\n		            	<span class="text-danger">*</span>\n		            	<span id="stickyHeaderTip"></span>\n		            	<a href="javascript:void(0);" id="help" class="helpClass">帮助</a>\n		            </div>\n		        </div>\n		        <%}%>\n	   			\n	   		</form>	\n	   <%	\n	}else if ("page3"==pageFlag){//http\n	   %>\n	   	<form class="form-horizontal" role="form">\n	   		<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n	   		<div class="form-group" id = "invokeServiceNameDiv" >\n		        <label for="invokeServiceName" class="col-sm-4 control-label">调用服务名称：</label>\n		        <div class="col-sm-4">\n		           <input  id="invokeServiceName" value = "<%=invokeServiceName%>" readonly="readonly"  type="text" class="form-control input-sm"  placeholder="" />\n		        </div>\n		        <div><span class = "text-danger">*</span><span id = "invokeServiceNameTip"></span></div>\n		    </div>\n		    \n	   		<div class="form-group" id = "invokeTimeoutDiv" >\n		        <label for="invokeTimeout" class="col-sm-4 control-label">调用超时时间：</label>\n		        <div class="col-sm-4">\n		           <input  id="invokeTimeout" value = "<%=invokeTimeout%>"  type="text" class="form-control input-sm"  placeholder="" />\n		        </div>\n		        <div><span class = "text-danger">*</span><span id = "invokeTimeoutTip"></span></div>\n		    </div>\n		    \n	   	</form>\n	   <%	\n	}\n%>               \n         </div>\n         <div class="modal-footer">\n            <button type="button"  id = "backBtn" class="btn btn-default"  data-dismiss="modal">返回</button>\n            <button type="button" id = "submitFormBtn" class="btn btn-primary" >修改</button>\n         </div>\n      </div><!-- /.modal-content -->\n</div><!-- /.modal -->');

define("travsky/jcf/1.0.0/view/service/serviceGrayConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var ServiceGrayConfigTemplate = require("travsky/jcf/1.0.0/template/service/serviceGrayConfig-debug.tpl");
    var CheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    require("bs-modal-debug")($);
    var ServiceGrayConfigView = Marionette.LayoutView.extend({
        template: _.template(ServiceGrayConfigTemplate),
        events: {
            "click .config": "configGray",
            "click  .cancel": "cancel",
            "click .helpClass": "grayHelp",
            "click .grayConfig": "toggleSelect",
            "blur #serviceTraffic": "checkServiceTraffic"
        },
        grayHelp: function() {
            window.open("help.html#grayHelpTips");
        },
        toggleSelect: function() {
            var serviceTrafficSelected = $("#serviceTrafficSelected").is(":checked");
            if (serviceTrafficSelected) {
                $("#serviceTraffic").removeAttr("readonly");
                $("#serviceHeader").attr("readonly", "readonly");
            } else {
                $("#serviceHeader").removeAttr("readonly");
                $("#serviceTraffic").attr("readonly", "readonly");
            }
        },
        configGray: function() {
            if (this.checkForm()) {
                $("#submitFormBtn").addClass("disabled");
                var appVersion = this.model.get("appVersion");
                var grayEnable = this.model.get("grayEnable");
                var serviceId = this.model.get("serviceId");
                var serviceName = this.model.get("serviceName");
                var url = "/" + jcfManager.appName + "/service/setServiceGrayConfig.action";
                var jsonParam = {
                    serviceId: serviceId,
                    serviceName: serviceName,
                    appVersion: appVersion,
                    grayEnable: grayEnable
                };
                var self = this;
                var serviceTrafficSelected = $("#serviceTrafficSelected").is(":checked");
                var serviceHeaderSelected = $("#serviceHeaderSelected").is(":checked");
                jsonParam.serviceTrafficSelected = serviceTrafficSelected;
                jsonParam.serviceHeaderSelected = serviceHeaderSelected;
                if (serviceTrafficSelected) {
                    var serviceTraffic = $("#serviceTraffic").val();
                    jsonParam.serviceTraffic = serviceTraffic;
                } else {
                    var serviceHeader = $("#serviceHeader").val().replace(/\"/gm, "'");
                    jsonParam.serviceHeader = serviceHeader;
                }
                var ajaxing = util.dealAjaxRequest4SimpleParam(url, jsonParam);
                $.when(ajaxing).done(function(data) {
                    var errorMsg = data.errorMsg;
                    var msg = "";
                    if (errorMsg == "") {
                        msg = "配置成功";
                        var confirmModel = new ConfirmModel();
                        confirmModel.set({
                            btnok: "确定",
                            btncl: "关闭"
                        });
                        var confirmView = new ConfirmView({
                            model: confirmModel
                        });
                        confirmModel.set("msg", msg);
                        jcfManager.dialogRegion.show(confirmView);
                        confirmView.confirm();
                        $("#submitFormBtn").removeClass("disabled");
                    } else {
                        msg = "配置失败";
                        var confirmModel = new ConfirmModel();
                        confirmModel.set({
                            btnok: "确定",
                            btncl: "关闭"
                        });
                        var confirmView = new ConfirmView({
                            model: confirmModel
                        });
                        confirmModel.set("msg", msg);
                        jcfManager.dialogRegion.show(confirmView);
                        confirmView.confirm();
                    }
                });
            }
        },
        cancel: function() {
            this.remove();
        },
        checkServiceTraffic: function() {
            var id = "serviceTraffic";
            return CheckUtil.checkInputMatchInt_MinNum__MaxNum(id, 1, 99);
        },
        checkServiceHeader: function() {
            var id = "serviceHeader";
            return CheckUtil.checkNotNull(id);
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        },
        checkForm: function() {
            var serviceTrafficSelected = $("#serviceTrafficSelected").is(":checked");
            var serviceHeaderSelected = $("#serviceHeaderSelected").is(":checked");
            if (serviceTrafficSelected) {
                return this.checkServiceTraffic();
            } else if (serviceHeaderSelected) {
                return this.checkServiceHeader();
            }
            return false;
        }
    });
    return ServiceGrayConfigView;
});

define("travsky/jcf/1.0.0/template/service/serviceGrayConfig-debug.tpl", [], '<div class="modal fade" id="grayModal" tabindex="-1" role="dialog" \n   aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">\n   <div class="modal-dialog">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" \n               data-dismiss="modal" aria-hidden="true">\n                  &times;\n            </button>\n            <h4 class="modal-title" id="myModalLabel">\n                      灰度配置\n            </h4>\n         </div>\n         <div class="modal-body">\n                <form class="form-horizontal">\n                  <div class="form-group" >\n					      <label  class="col-sm-3 control-label">按流量百分比</label>\n					      <div class="col-sm-5">\n					        <input type="radio"  id="serviceTrafficSelected"   name="grayConfig"  class="grayConfig" <%if (serviceTrafficSelected){%>checked="checked"<%}%> value="serviceTraffic" />\n					      </div>\n					      <div></div>\n				    </div>\n				    \n				    <div class="form-group" >\n					      <label  class="col-sm-3 control-label">流量配置</label>\n					      <div class="col-sm-5">\n					        <input id="serviceTraffic" name="serviceTraffic"  class="form-control input-sm"  type="text" value="<%=serviceTraffic%>"  <%if (!serviceTrafficSelected){%>readonly="readonly"<%}%> placeholder="正整数" />\n					      </div>\n					      <div><span class = "text-danger">*%(1-99)</span><span id = "serviceTrafficTip"></span></div>\n				    </div>\n				    \n				     <div class="form-group" >\n					      <label  class="col-sm-3 control-label">按报文头</label>\n					      <div class="col-sm-5">\n					        <input id="serviceHeaderSelected"  name="grayConfig" class="grayConfig"  type="radio" <%if (serviceHeaderSelected){%>checked="checked"<%}%> value="serviceHeader" />\n					      </div>\n				    </div>\n				    \n				      <div class="form-group"  >\n					      <label  class="col-sm-3 control-label">报文头配置</label>\n					      <div class="col-sm-5">\n					        <input id="serviceHeader" name="serviceHeader" class="form-control input-sm" type="text" value="<%=serviceHeader%>"  <%if (!serviceHeaderSelected){%>readonly="readonly"<%}%>  placeholder="key-value形式"/>\n					      </div>\n					     <div class="warn">\n			                <span class="text-danger">*</span>\n			                <span id="serviceHeaderTip"></span>\n			                <a href="javascript:void(0);" id="grayHelp" class="helpClass">帮助</a>\n		                 </div>\n				     </div>\n               </form>\n        </div>\n        <div class="modal-footer">\n               <button type="button" class="btn btn-default cancel" id = "backBtn"  data-dismiss="modal">返回</button>\n	    	  <button type="button" class="btn btn-primary config" id = "submitFormBtn">修改</button>\n        </div>\n      </div><!-- /.modal-content -->\n</div><!-- /.modal -->\n\n');

define("travsky/jcf/1.0.0/view/service/serviceDegradeConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "querystring-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var CheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var ServiceDegradeConfigTemplate = require("travsky/jcf/1.0.0/template/service/serviceDegradeConfig-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ConfirmModel = require("travsky/jcf/1.0.0/model/confirm_model-debug");
    var ConfirmView = require("travsky/jcf/1.0.0/view/confirm_view-debug");
    var QueryString = require("querystring-debug");
    require("bs-modal-debug")($);
    var ServiceDegradeConfigView = Marionette.LayoutView.extend({
        template: _.template(ServiceDegradeConfigTemplate),
        events: {
            "click .select": "toggleSelect",
            "click .config": "configDegrade",
            "blur #degradeTPU": "checkTPU",
            "blur #degradeTimeUnit": "checkTimeUnit",
            "blur #degradePercent": "checkPercent"
        },
        toggleSelect: function(e) {
            var tpsSelected = $("#tpsSelected").is(":checked");
            var queueSelected = $("#queueSelected").is(":checked");
            if (tpsSelected) {
                $("#degradeTPU").removeAttr("readonly");
                $("#degradeTimeUnit").removeAttr("readonly");
            } else {
                $("#degradeTPU").attr("readonly", "readonly");
                $("#degradeTimeUnit").attr("readonly", "readonly");
            }
            if (queueSelected) {
                $("#degradePercent").removeAttr("readonly");
            } else {
                $("#degradePercent").attr("readonly", "readonly");
            }
        },
        configDegrade: function() {
            if (this.checkForm()) {
                var tpsSelected = $("#tpsSelected").is(":checked");
                var queueSelected = $("#queueSelected").is(":checked");
                var degradeServiceName = $("#degradeServiceName").val();
                var degradeTPU = $("#degradeTPU").val();
                var degradeTimeUnit = $("#degradeTimeUnit").val();
                var degradePercent = this.$el.find("#degradePercent").val();
                var serviceName = this.model.get("serviceName");
                var appVersion = this.model.get("appVersion");
                var serviceCategory = this.model.get("serviceCategory");
                var groupId = this.model.get("groupId");
                var serviceId = this.model.get("serviceId");
                var url = "/" + jcfManager.appName + "/service/setServiceDegradeConfig.action";
                var jsonParam = {
                    serviceName: serviceName,
                    appVersion: appVersion,
                    serviceCategory: serviceCategory,
                    groupId: groupId,
                    serviceId: serviceId,
                    tpsSelected: tpsSelected,
                    queueSelected: queueSelected,
                    degradeServiceName: degradeServiceName,
                    degradeTPU: degradeTPU,
                    degradeTimeUnit: degradeTimeUnit,
                    degradePercent: degradePercent
                };
                var ajaxing = util.dealAjaxRequest4SimpleParam(url, jsonParam);
                var self = this;
                $.when(ajaxing).done(function(data) {
                    var errorMsg = data.errorMsg;
                    var flag = data.flag;
                    var t = new Date().getTime();
                    var groupId = self.model.get("groupId");
                    var queryString = {
                        groupId: groupId,
                        t: t
                    };
                    if (flag) {
                        var confirmModel = new ConfirmModel();
                        confirmModel.set({
                            btnok: "确定",
                            btncl: "关闭"
                        });
                        var confirmView = new ConfirmView({
                            model: confirmModel
                        });
                        confirmModel.set("msg", "配置成功!");
                        jcfManager.dialogRegion.show(confirmView);
                        confirmView.confirm();
                        $("#submitFormBtn").removeClass("disabled");
                        //	alert("serviceDegradeConfig_view.js   "+"/serviceMgr/group/param");
                        appRouter.navigate("/serviceMgr/group/param/" + QueryString.stringify(queryString), {
                            trigger: true
                        });
                    } else {
                        var confirmModel = new ConfirmModel();
                        confirmModel.set({
                            btnok: "确定",
                            btncl: "关闭"
                        });
                        var confirmView = new ConfirmView({
                            model: confirmModel
                        });
                        confirmModel.set("msg", errorMsg);
                        jcfManager.dialogRegion.show(confirmView);
                        confirmView.confirm();
                    }
                });
            }
        },
        checkDegradeServiceName: function() {
            return CheckUtil.checkNotNull("degradeServiceName");
        },
        checkTPU: function() {
            var tpsSelected = $("#tpsSelected").is(":checked");
            if (tpsSelected) {
                return CheckUtil.checkInputMatchPositiveIntegerAndMaxLength("degradeTPU", 10);
            }
            return false;
        },
        checkTimeUnit: function() {
            var tpsSelected = $("#tpsSelected").is(":checked");
            if (tpsSelected) {
                return CheckUtil.checkInputMatchPositiveIntegerAndMaxLength("degradeTimeUnit", 10);
            }
            return false;
        },
        checkPercent: function() {
            var queueSelected = $("#queueSelected").is(":checked");
            if (queueSelected) {
                return CheckUtil.checkInputMatchInt_MinNum__MaxNum("degradePercent", 0, 100);
            }
            return false;
        },
        checkForm: function() {
            var f1 = false;
            var f2 = false;
            var flag = true;
            var tpsSelected = $("#tpsSelected").is(":checked");
            var queueSelected = $("#queueSelected").is(":checked");
            if (tpsSelected) {
                f1 = true;
                if (this.checkTPU() && this.checkTimeUnit()) {
                    flag = true;
                } else {
                    flag = false;
                }
            }
            if (queueSelected) {
                f2 = true;
                if (this.checkPercent() && flag) {
                    flag = true;
                } else {
                    flag = false;
                }
            }
            if (f2 || f1) {
                return flag;
            } else {
                alert("降级规则必须选一项！");
            }
        }
    });
    return ServiceDegradeConfigView;
});

define("travsky/jcf/1.0.0/template/service/serviceDegradeConfig-debug.tpl", [], '<div id="degradeModal"  class="modal" aria-hidden="true" style="z-index:10400;"  data-backdrop="static"> \n   <div class="modal-dialog" style = "width:700px;">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" \n               data-dismiss="modal" aria-hidden="true">\n                  &times;\n            </button>\n            <h4 class="modal-title" id="myModalLabel">\n                         降级服务配置\n            </h4>\n         </div>\n         <div class="modal-body">\n              <form class="form-horizontal">\n                  <div class="form-group" >\n					      <label  class="col-sm-3 control-label">降级服务名称</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="degradeServiceName" name="degradeServiceName"  class="form-control input-sm"  type="text" value="<%=degradeServiceName%>" />\n					      </div>\n					      <div><span class = "text-danger"></span><span id = "degradeServiceNameTip"></span></div>\n				    </div>\n				    \n				    <div class="form-group"  >\n					      <label  class="col-sm-3 control-label">按单位时间内交易数</label>\n					      <div class="col-sm-5">\n					        <input type="checkbox"  id="tpsSelected"  class="select" <%if (tpsSelected){%>checked="checked"<%}%> />\n					      </div>\n					      <div></div>\n				    </div>\n				    \n				    <div class="form-group" >\n					      <label  class="col-sm-3 control-label">交易数</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="degradeTPU" name="degradeTPU"  class="form-control input-sm"  type="text" value="<%=degradeTPU%>" <%if (!tpsSelected){%>readonly="readonly"<%}%> />\n					      </div>\n					      <div><span class = "text-danger">*</span><span id = "degradeTPUTip"></span></div>\n				    </div>\n				    \n				     <div class="form-group" >\n					      <label  class="col-sm-3 control-label">时间单位</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="degradeTimeUnit" name="degradeTimeUnit"  class="form-control input-sm"  type="text" value="<%if(degradeTimeUnit!=null && degradeTimeUnit!=""){ %> <%=degradeTimeUnit%> <% } else {%> 1000 <%}%>"  <%if (!tpsSelected){%>readonly="readonly"<%}%>  placeholder="1000"/>\n					      </div>\n					      <div><span class = "text-danger">*ms</span><span id = "degradeTimeUnitTip"></span></div>\n				    </div>\n				    \n				      <div class="form-group"  >\n					      <label  class="col-sm-3 control-label">按队列百分比</label>\n					      <div class="col-sm-5">\n					        <input type="checkbox"  id="queueSelected" class="select"  <%if (queueSelected){%>checked="checked"<%}%>/>\n					      </div>\n					      <div></div>\n				     </div>\n				    \n				    <div class="form-group" >\n					      <label  class="col-sm-3 control-label">队列百分比%</label>\n					      <div class="col-sm-5">\n					        <input type="text" id="degradePercent" name="degradePercent"  class="form-control input-sm"  type="text" value="<%=degradePercent%>" <%if (!queueSelected){%>readonly="readonly"<%}%> placeholder="正整数" />\n					      </div>\n					      <div><span class = "text-danger">* 0-100</span><span id = "degradePercentTip"></span></div>\n				    </div>\n\n               </form>\n              \n           </div>\n              <div class="modal-footer">\n                 <button type="button" class="btn btn-default" data-dismiss="modal">返回</button>\n                 <button id ="submitFormBtn" type="button" class="btn btn-primary config">修改</button>\n         </div>\n      </div><!-- /.modal-content -->\n</div><!-- /.modal -->\n\n\n\n');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-7
 * Time: 上午11:15:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/respGroupMoni_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "my97Date-debug", "querystring-debug", "travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug", "highcharts-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var my97Date = require("my97Date-debug");
    var QueryString = require("querystring-debug");
    require("bs-modal-debug")($);
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/groupServiceChartOpt-debug.tpl");
    var GroupAddView = Marionette.LayoutView.extend({
        initialize: function() {
            this.listenTo(this.model, "change", this.render);
        },
        regions: {
            errInfoShowRegion: "#errInfoShowRegion",
            singleErrInfoShowRegion: "#singleErrInfoShowRegion"
        },
        template: _.template(viewTemplateStr),
        events: {
            "change #dataType": "changeGroupCategory",
            "click #queryDataBtn": "queryData",
            "click #startDate": "startDate",
            "click #endDate": "endDate"
        },
        changeGroupCategory: function() {
            var selectGC = this.$el.find("#dataType").val();
            this.model.set("checkGroupCategory", selectGC);
            $("#queryGroupDataModal").modal("show");
        },
        startDate: function() {
            WdatePicker({
                el: $dp.$("startTime"),
                dateFmt: "yyyy-MM-dd HH:mm:ss"
            });
        },
        endDate: function() {
            WdatePicker({
                el: $dp.$("endTime"),
                dateFmt: "yyyy-MM-dd HH:mm:ss"
            });
        },
        getCacheConfigFormInputParam: function() {
            var ids = [ "dataType", "disposeType" ];
            var jsParam = util.getFormInputObj(ids);
            return jsParam;
        },
        checkCacheGroupCfgInfo: function() {
            if (this.checkGroupName() && this.checkGroupPassword() && this.checkBroadcastURL() && this.checkMaxSize4Store() && this.checkSingleDataMaxLength() && this.checkCacheNodeAlert() && this.checkJvmMemory() && this.checkJvmHeapAlert() && this.checkDataBackupNum() && this.checkStatisticsPath() && this.checkStatisticsSyncTime() && this.checkJvmHeapBlock() && this.checkMaxSize4Cache() && this.checkaNetworkPort() && this.checkaddTcpIPMember()) {
                return true;
            }
            return false;
        },
        queryData: function(e) {
            var jsParam = {};
            var modelName = sidbarUtil.getModuleName();
            var serverURL = "/" + jcfManager.appName + "/service/chartGroupSearch.action";
            jsParam = this.getCacheConfigFormInputParam();
            jsParam.groupId = this.model.get("groupId");
            jsParam.serviceId = this.model.get("serviceId");
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            var self = this;
            self.remove();
            appRouter.navigate(modelName + "/group/MoniOption/param/" + QueryString.stringify(jsParam));
            $.when(ajaxing).done(function(data) {
                if (data.flag != "error") {
                    var model1 = new Backbone.Model(data);
                    model1.set("groupId", self.model.get("groupId"));
                    var serverServiceChart_view = require("travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug");
                    var sc_view = new serverServiceChart_view({
                        model: model1
                    });
                    jcfManager.contentRegion.show(sc_view);
                } else {
                    alert("度量数据加载失败");
                }
            });
        }
    });
    return GroupAddView;
});

define("travsky/jcf/1.0.0/template/service/groupServiceChartOpt-debug.tpl", [], '<div id = "queryGroupDataModal" class="modal" aria-hidden="true" style="z-index:10400;"  data-backdrop="static">\n   <div class="modal-dialog" style = "width:700px;">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n            <h4 class="modal-title" id="myModalLabel">数据查询选项</h4>\n         </div>\n         <div class="modal-body">\n         <form class="form-horizontal"  role="form" method= "POST">\n 	          <div class="form-group" id = "addGroup_groupCategoryDiv" >\n			      <label for="addGroup_groupCategory" class="col-sm-3 control-label">数据类型：</label>\n			      <div class="col-sm-5">\n			          <select id="dataType"  class  = "form-control input-sm">\n			          	 <%\n					      	   if(1==checkGroupCategory){\n					      		  %><option selected = "selected"  value = "1" >实时数据</option>\n					     			<option value = "2" >历史数据</option><%\n					      	   }else{\n					      	 	  %><option value = "1" >实时数据</option>\n					     			<option selected = "selected" value = "2" >历史数据</option><%\n					      	   }\n					     %>\n				     </select>\n			      </div>\n			  </div>	\n         	  			\n 			  <div class="form-group" id = "addGroup_groupNameDiv" >\n			      <label for="addGroup_groupCategory" class="col-sm-3 control-label">处理类型：</label>\n			      <div class="col-sm-5">\n			          <select id="disposeType"  class  = "form-control input-sm">\n					     <option selected = "selected"  value = "1" >处理时间</option>\n					     <option value = "2" >处理结果</option>\n				     </select>\n			      </div>\n			   </div>\n         </form>\n          <%\n		   	if(checkGroupCategory=="2"){//选择历史数据\n		  %>\n		   	   	<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_groupPasswordDiv" >\n					      <label for="addGroup_groupPassword" class="col-sm-3 control-label">开始日期：</label>\n					      <div class="col-sm-5">\n					      	<input type="text" id="startTime" type="text" class="form-control input-sm"  placeholder="必填项" />\n							\n					      </div>\n					      <div>\n					      		<span class = "text-danger">\n					      			<img  id="startDate" src="./static/js/seajs-modules/My97DatePicker/skin/datePicker.gif"width="16" height="22" align="absmiddle">\n					      		</span>\n					      		<span id = "addGroup_groupPasswordTip"></span>\n					      </div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_broadcastURLDiv" >\n					      <label for="addGroup_broadcastURL" class="col-sm-3 control-label">结束日期：</label>\n					      <div class="col-sm-5">\n					      	<input type="text" id="endTime" type="text" class="form-control input-sm"  placeholder="必填项" />\n							\n					      </div>\n					      <div><span class = "text-danger">\n					      	<img  id="endDate" src="./static/js/seajs-modules/My97DatePicker/skin/datePicker.gif"width="16" height="22" align="absmiddle"></span>\n					      	<span id = "addGroup_groupPasswordTip"></span>\n					      </div>\n				    </div>\n		   	   	</form>\n		   	<%\n		   	}\n		   %>\n         </div>\n         <div class="modal-footer">\n            <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>\n            <button id = "queryDataBtn" type="button" class="btn btn-primary">查询 </button>\n         </div>\n      </div>\n</div>');

define("travsky/jcf/1.0.0/view/service/groupServiceChart_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "highcharts-debug", "querystring-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var highcharts = require("highcharts-debug");
    var Marionette = require("marionette-debug");
    var QueryString = require("querystring-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/service/groupServiceChart_view-debug.tpl");
    require("bs-modal-debug")($);
    var ContainerView = Marionette.ItemView.extend({
        template: _.template(ContainerTemplate),
        events: {
            "click #backBtn": "toBackPage"
        },
        initialize: function() {},
        onShow: function() {
            if (this.model.get("dataType") == "1") {
                this.showRealPageInfo();
            } else {
                this.showHistoryPageInfo();
            }
        },
        toBackPage: function() {
            //			var jString = {"groupId":this.model.get("groupId")};
            //			appRouter.navigate("serviceMgr/group/param/" + QueryString.stringify(jString),{trigger:true}) ;
            window.history.back();
        },
        refreshChart: function(self) {
            var ttt = self.autoFreshPageTTT;
            var curHash = window.location.hash;
            var oldUrl = self.oldUrl;
            if (oldUrl == curHash) {
                //刷新页面
                self.directUpdate(self);
            } else {
                //结束自动刷新
                window.clearInterval(ttt);
            }
        },
        directUpdate: function(self) {
            var series;
            var series1;
            var series2;
            var series3;
            var jsParam = {};
            var serverURL = "/" + jcfManager.appName + "/service/chartGroupCurrentData.action";
            jsParam.serviceName = self.model.get("serviceName");
            jsParam.serverNames = self.model.get("serverNames");
            jsParam.disposeType = self.model.get("disposeType");
            jsParam.appVersion = self.model.get("appVersion");
            jsParam.time = self.model.get("lastTime");
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            if (self.model.get("disposeType") == "1") {
                series = self.series[0];
                series1 = self.series[1];
                $.when(ajaxing).done(function(data) {
                    if (data.flag != "error") {
                        self.model.set("lastTime", data.lastTime);
                        series.addPoint([ data.averageBTime[0].x, data.averageBTime[0].y ], true, true);
                        series1.addPoint([ data.maxBTime[0].x, data.maxBTime[0].y ], true, true);
                    }
                });
            } else {
                series = self.series[0];
                series1 = self.series[1];
                series2 = self.series[2];
                series3 = self.series[3];
                $.when(ajaxing).done(function(data) {
                    if (data.flag != "error") {
                        self.model.set("lastTime", data.lastTime);
                        series.addPoint([ data.totalTPU[0].x, data.totalTPU[0].y ], true, true);
                        series1.addPoint([ data.succTPU[0].x, data.succTPU[0].y ], true, true);
                        series2.addPoint([ data.sysFailTPU[0].x, data.sysFailTPU[0].y ], true, true);
                        series3.addPoint([ data.failTPU[0].x, data.failTPU[0].y ], true, true);
                    }
                });
            }
        },
        showRealPageInfo: function() {
            var chart;
            var titles = this.model.get("serviceName") + "服务-实时数据记录";
            var text;
            var self = this;
            if (this.model.get("disposeType") == "1") {
                text = "处理时间";
            } else {
                text = "处理结果";
            }
            chart = new Highcharts.Chart({
                chart: {
                    //		backgroundColor:"#EAF7FF",//图表背景色            
                    borderRadius: 1,
                    //图表边框圆角角度                   
                    shadow: false,
                    //是否设置阴影            
                    zoomType: "x",
                    //x轴方向可以缩放 ,可以为x,y,xy之一
                    reflow: true,
                    //当窗口大小改变的时候，自适应div大小,默认为true(自适应)
                    renderTo: "charts",
                    //图表放置的容器，DIV             
                    defaultSeriesType: "spline",
                    //图表类型为曲线图 
                    marginBottom: 35,
                    events: {
                        load: function() {
                            self.series = this.series;
                            var curHash = window.location.hash;
                            self.oldUrl = curHash;
                            //每隔5秒钟，图表更新一次，y数据值在0-100之间的随机数                     
                            var ttt = setInterval(self.refreshChart, 5e3, self);
                            self.autoFreshPageTTT = ttt;
                        }
                    }
                },
                title: {
                    text: titles
                },
                subtitle: {
                    text: text
                },
                xAxis: {
                    //设置X轴             
                    type: "datetime",
                    //X轴为日期时间类型  
                    dateTimeLabelFormats: {
                        second: "%H:%M:%S"
                    },
                    tickPixelInterval: 100
                },
                yAxis: {
                    //设置Y轴             
                    title: "",
                    min: 0
                },
                tooltip: {
                    //当鼠标悬置数据点时的提示框             
                    formatter: function() {
                        //格式化提示信息                 
                        return Highcharts.numberFormat(this.y, 2) + "   " + Highcharts.dateFormat("%H:%M:%S", this.x);
                    }
                },
                legend: {
                    //图例 
                    enabled: true,
                    //设置图例不可见 
                    layout: "horizontal",
                    //图例显示的样式：水平（horizontal）/垂直（vertical） 
                    backgroundColor: "#ffc",
                    //图例背景色 
                    align: "left",
                    //图例水平对齐方式 
                    verticalAlign: "top",
                    //图例垂直对齐方式 
                    x: 65,
                    //相对X位移 
                    y: 70,
                    //相对Y位移 
                    borderWidth: 0,
                    floating: true,
                    //设置可浮动 
                    shadow: true
                },
                exporting: {
                    enabled: false
                },
                credits: {
                    text: "JCF Domain Info",
                    //设置LOGO区文字             
                    url: "#"
                },
                series: this.paraData()
            });
        },
        showHistoryPageInfo: function() {
            var chart;
            var titles = this.model.get("serviceName") + "服务-历史数据记录";
            var text;
            if (this.model.get("disposeType") == "1") {
                text = "处理时间";
            } else {
                text = "处理结果";
            }
            chart = new Highcharts.Chart({
                chart: {
                    //	backgroundColor:"#EAF7FF",//图表背景色            
                    borderRadius: 1,
                    //图表边框圆角角度                    
                    shadow: false,
                    //是否设置阴影            
                    zoomType: "x",
                    //x轴方向可以缩放 ,可以为x,y,xy之一
                    renderTo: "charts",
                    //图表放置的容器，DIV 
                    defaultSeriesType: "spline",
                    //图表类型line(折线图), bar(柱状图),spline(曲线图), area(区域图), areaspline(区域曲线图), column(柱状图), 
                    //scatter(散点图),pie(饼图),gauge(测量图，需要highcharts-more.js的支持)
                    inverted: false,
                    //是否倒置轴，使得x轴时垂直的y轴是水平的 true/false
                    reflow: true,
                    //当窗口大小改变的时候，自适应div大小,默认为true(自适应)
                    marginBottom: 35
                },
                credits: {
                    enabled: false,
                    //右下角不显示LOGO
                    text: "JCF Domain Info",
                    //设置LOGO区文字 
                    url: "#"
                },
                title: {
                    text: titles,
                    //图表标题 
                    x: 0,
                    //标题位置定位
                    y: 10
                },
                subtitle: {
                    text: text
                },
                xAxis: {
                    //x轴 
                    categories: [ "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21" ],
                    //x轴标签名称 
                    gridLineWidth: 1,
                    //设置网格宽度为1  
                    labels: {
                        y: 15
                    }
                },
                yAxis: {
                    //y轴 
                    title: "",
                    min: 0
                },
                plotOptions: {
                    //设置数据点 
                    line: {
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: true
                    }
                },
                tooltip: {
                    //当鼠标悬置数据点时的提示框 
                    formatter: function() {
                        //格式化提示信息 
                        return Highcharts.numberFormat(this.y, 2);
                    }
                },
                legend: {
                    //图例 
                    enabled: true,
                    //设置图例不可见 
                    layout: "horizontal",
                    //图例显示的样式：水平（horizontal）/垂直（vertical） 
                    backgroundColor: "#ffc",
                    //图例背景色 
                    align: "left",
                    //图例水平对齐方式 
                    verticalAlign: "top",
                    //图例垂直对齐方式 
                    x: 65,
                    //相对X位移 
                    y: 70,
                    //相对Y位移 
                    borderWidth: 0,
                    floating: true,
                    //设置可浮动 
                    shadow: true
                },
                exporting: {
                    enabled: false
                },
                series: [ {
                    //数据列 
                    name: "总处理数",
                    data: [ 21.3, 12.2, 4.5, 13.1, 19.8, 24, 25.8, 24.4, 19.3, 12.4, 4.1, 18.2 ]
                }, {
                    name: "成功处理数",
                    data: [ 13.3, 14.4, 17.7, 21.9, 24.6, 27.2, 30.8, 32.1, 27.2, 23.7, 21.3, 15.6 ]
                }, {
                    name: "失败处理数",
                    data: [ 10.3, 11.4, 13.7, 22.9, 24.6, 37.2, 35.8, 32.1, 29.2, 21.7, 11.3, 5.6 ]
                }, {
                    name: "系统失败处理数",
                    data: [ 12.3, 15.4, 17.7, 22.9, 23.6, 27.2, 35.8, 32.1, 24.2, 21.7, 10.3, 9.6 ]
                } ]
            });
        },
        paraData: function() {
            var d = [];
            if (this.model.get("disposeType") == "1") {
                var d = [ {
                    name: "平均处理时间",
                    data: this.model.get("averageBTime")
                }, {
                    name: "最大处理时间",
                    data: this.model.get("maxBTime")
                } ];
            } else {
                var d = [ {
                    name: "单位时间内总的处理数",
                    data: this.model.get("totalTPU")
                }, {
                    name: "单位时间内成功的处理数",
                    data: this.model.get("succTPU")
                }, {
                    name: "单位时间内系统总的失败处理数",
                    data: this.model.get("sysFailTPU")
                }, {
                    name: "单位时间内失败的处理数",
                    data: this.model.get("failTPU")
                } ];
            }
            return d;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/service/groupServiceChart_view-debug.tpl", [], '<div id="charts" >\n	Hello highcharts\n</div>\n<br/>\n<div class="form-group">\n	<div class="col-sm-offset-11">\n		<button type="button" id = "backBtn" class="btn btn-primary" >返回</button>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "highcharts-debug", "querystring-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var highcharts = require("highcharts-debug");
    var Marionette = require("marionette-debug");
    var QueryString = require("querystring-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/service/serverServiceChart_view-debug.tpl");
    require("bs-modal-debug")($);
    var ContainerView = Marionette.ItemView.extend({
        template: _.template(ContainerTemplate),
        events: {
            "click #backBtn": "toBackPage"
        },
        initialize: function() {},
        onShow: function() {
            if (this.model.get("dataType") == "1") {
                this.showRealPageInfo();
            } else {
                this.showHistoryPageInfo();
            }
        },
        toBackPage: function() {
            //			var jString = {"serverId":this.model.get("serverId")};
            //			appRouter.navigate("serviceMgr/server/param/" + QueryString.stringify(jString),{trigger:true}) ;
            window.history.back();
        },
        refreshChart: function(self) {
            var ttt = self.autoFreshPageTTT;
            var curHash = window.location.hash;
            var oldUrl = self.oldUrl;
            if (oldUrl == curHash) {
                //刷新页面
                self.directUpdate(self);
            } else {
                //结束自动刷新
                window.clearInterval(ttt);
            }
        },
        directUpdate: function(self) {
            var series;
            var series1;
            var series2;
            var series3;
            var jsParam = {};
            var serverURL = "/" + jcfManager.appName + "/service/chartCurrentData.action";
            jsParam.serviceName = self.model.get("serviceName");
            jsParam.serverName = self.model.get("serverName");
            jsParam.disposeType = self.model.get("disposeType");
            jsParam.appVersion = self.model.get("appVersion");
            jsParam.time = self.model.get("lastTime");
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            if (self.model.get("disposeType") == "1") {
                series = self.series[0];
                series1 = self.series[1];
                $.when(ajaxing).done(function(data) {
                    if (data.flag != "error") {
                        self.model.set("lastTime", data.lastTime);
                        series.addPoint([ data.averageBTime[0].x, data.averageBTime[0].y ], true, true);
                        series1.addPoint([ data.maxBTime[0].x, data.maxBTime[0].y ], true, true);
                    }
                });
            } else {
                series = self.series[0];
                series1 = self.series[1];
                series2 = self.series[2];
                series3 = self.series[3];
                $.when(ajaxing).done(function(data) {
                    if (data.flag != "error") {
                        self.model.set("lastTime", data.lastTime);
                        series.addPoint([ data.totalTPU[0].x, data.totalTPU[0].y ], true, true);
                        series1.addPoint([ data.succTPU[0].x, data.succTPU[0].y ], true, true);
                        series2.addPoint([ data.sysFailTPU[0].x, data.sysFailTPU[0].y ], true, true);
                        series3.addPoint([ data.failTPU[0].x, data.failTPU[0].y ], true, true);
                    }
                });
            }
        },
        showRealPageInfo: function() {
            var chart;
            var titles = this.model.get("serviceName") + "服务-实时数据记录";
            var text;
            var self = this;
            if (this.model.get("disposeType") == "1") {
                text = "处理时间";
            } else {
                text = "处理结果";
            }
            chart = new Highcharts.Chart({
                chart: {
                    //		backgroundColor:"#EAF7FF",//图表背景色            
                    borderRadius: 1,
                    //图表边框圆角角度                   
                    shadow: false,
                    //是否设置阴影            
                    zoomType: "x",
                    //x轴方向可以缩放 ,可以为x,y,xy之一
                    reflow: true,
                    //当窗口大小改变的时候，自适应div大小,默认为true(自适应)
                    renderTo: "charts",
                    //图表放置的容器，DIV             
                    defaultSeriesType: "spline",
                    //图表类型为曲线图 
                    marginBottom: 35,
                    events: {
                        load: function() {
                            self.series = this.series;
                            var curHash = window.location.hash;
                            self.oldUrl = curHash;
                            //每隔5秒钟，图表更新一次，y数据值在0-100之间的随机数                     
                            var ttt = setInterval(self.refreshChart, 5e3, self);
                            self.autoFreshPageTTT = ttt;
                        }
                    }
                },
                title: {
                    text: titles
                },
                subtitle: {
                    text: text
                },
                xAxis: {
                    //设置X轴             
                    type: "datetime",
                    //X轴为日期时间类型  
                    dateTimeLabelFormats: {
                        second: "%H:%M:%S"
                    },
                    tickPixelInterval: 100
                },
                yAxis: {
                    //设置Y轴             
                    title: "",
                    min: 0
                },
                tooltip: {
                    //当鼠标悬置数据点时的提示框             
                    formatter: function() {
                        //格式化提示信息                 
                        return Highcharts.numberFormat(this.y, 2) + "   " + Highcharts.dateFormat("%H:%M:%S", this.x);
                    }
                },
                legend: {
                    //图例 
                    enabled: true,
                    //设置图例不可见 
                    layout: "horizontal",
                    //图例显示的样式：水平（horizontal）/垂直（vertical） 
                    backgroundColor: "#ffc",
                    //图例背景色 
                    align: "left",
                    //图例水平对齐方式 
                    verticalAlign: "top",
                    //图例垂直对齐方式 
                    x: 65,
                    //相对X位移 
                    y: 70,
                    //相对Y位移 
                    borderWidth: 0,
                    floating: true,
                    //设置可浮动 
                    shadow: true
                },
                exporting: {
                    enabled: false
                },
                credits: {
                    text: "JCF Domain Info",
                    //设置LOGO区文字             
                    url: "#"
                },
                series: this.paraData()
            });
        },
        showHistoryPageInfo: function() {
            var chart;
            var titles = this.model.get("serviceName") + "服务-历史数据记录";
            var text;
            if (this.model.get("disposeType") == "1") {
                text = "处理时间";
            } else {
                text = "处理结果";
            }
            chart = new Highcharts.Chart({
                chart: {
                    //	backgroundColor:"#EAF7FF",//图表背景色            
                    borderRadius: 1,
                    //图表边框圆角角度                    
                    shadow: false,
                    //是否设置阴影            
                    zoomType: "x",
                    //x轴方向可以缩放 ,可以为x,y,xy之一
                    renderTo: "charts",
                    //图表放置的容器，DIV 
                    defaultSeriesType: "spline",
                    //图表类型line(折线图), bar(柱状图),spline(曲线图), area(区域图), areaspline(区域曲线图), column(柱状图), 
                    //scatter(散点图),pie(饼图),gauge(测量图，需要highcharts-more.js的支持)
                    inverted: false,
                    //是否倒置轴，使得x轴时垂直的y轴是水平的 true/false
                    reflow: true,
                    //当窗口大小改变的时候，自适应div大小,默认为true(自适应)
                    marginBottom: 35
                },
                credits: {
                    enabled: false,
                    //右下角不显示LOGO
                    text: "JCF Domain Info",
                    //设置LOGO区文字 
                    url: "#"
                },
                title: {
                    text: titles,
                    //图表标题 
                    x: 0,
                    //标题位置定位
                    y: 10
                },
                subtitle: {
                    text: text
                },
                xAxis: {
                    //x轴 
                    categories: [ "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21", "2015.3.21 10:32:21" ],
                    //x轴标签名称 
                    gridLineWidth: 1,
                    //设置网格宽度为1  
                    labels: {
                        y: 15
                    }
                },
                yAxis: {
                    //y轴 
                    title: "",
                    min: 0
                },
                plotOptions: {
                    //设置数据点 
                    line: {
                        dataLabels: {
                            enabled: true
                        },
                        enableMouseTracking: true
                    }
                },
                tooltip: {
                    //当鼠标悬置数据点时的提示框 
                    formatter: function() {
                        //格式化提示信息 
                        return Highcharts.numberFormat(this.y, 2);
                    }
                },
                legend: {
                    //图例 
                    enabled: true,
                    //设置图例不可见 
                    layout: "horizontal",
                    //图例显示的样式：水平（horizontal）/垂直（vertical） 
                    backgroundColor: "#ffc",
                    //图例背景色 
                    align: "left",
                    //图例水平对齐方式 
                    verticalAlign: "top",
                    //图例垂直对齐方式 
                    x: 65,
                    //相对X位移 
                    y: 70,
                    //相对Y位移 
                    borderWidth: 0,
                    floating: true,
                    //设置可浮动 
                    shadow: true
                },
                exporting: {
                    enabled: false
                },
                series: [ {
                    //数据列 
                    name: "总处理数",
                    data: [ 21.3, 12.2, 4.5, 13.1, 19.8, 24, 25.8, 24.4, 19.3, 12.4, 4.1, 18.2 ]
                }, {
                    name: "成功处理数",
                    data: [ 13.3, 14.4, 17.7, 21.9, 24.6, 27.2, 30.8, 32.1, 27.2, 23.7, 21.3, 15.6 ]
                }, {
                    name: "失败处理数",
                    data: [ 10.3, 11.4, 13.7, 22.9, 24.6, 37.2, 35.8, 32.1, 29.2, 21.7, 11.3, 5.6 ]
                }, {
                    name: "系统失败处理数",
                    data: [ 12.3, 15.4, 17.7, 22.9, 23.6, 27.2, 35.8, 32.1, 24.2, 21.7, 10.3, 9.6 ]
                } ]
            });
        },
        paraData: function() {
            var d = [];
            if (this.model.get("disposeType") == "1") {
                var d = [ {
                    name: "平均处理时间",
                    data: this.model.get("averageBTime")
                }, {
                    name: "最大处理时间",
                    data: this.model.get("maxBTime")
                } ];
            } else {
                var d = [ {
                    name: "单位时间内总的处理数",
                    data: this.model.get("totalTPU")
                }, {
                    name: "单位时间内成功的处理数",
                    data: this.model.get("succTPU")
                }, {
                    name: "单位时间内系统总的失败处理数",
                    data: this.model.get("sysFailTPU")
                }, {
                    name: "单位时间内失败的处理数",
                    data: this.model.get("failTPU")
                } ];
            }
            return d;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/service/serverServiceChart_view-debug.tpl", [], '<div id="charts" >\n	Hello highcharts\n</div>\n<br/>\n<div class="form-group">\n	<div class="col-sm-offset-11">\n		<button type="button" id = "backBtn" class="btn btn-primary" >返回</button>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/service/serverServiceMgrLayout-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/pagebar_view2-debug", "querystring-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "travsky/jcf/1.0.0/view/service/serverServiceCfg_view-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug", "travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug", "travsky/jcf/1.0.0/model/listTip_model-debug", "travsky/jcf/1.0.0/view/listTip_view-debug", "bs-alert-debug", "travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug", "travsky/jcf/1.0.0/model/confirm_model-debug", "travsky/jcf/1.0.0/view/confirm_view-debug", "travsky/jcf/1.0.0/view/service/respMoni_view-debug", "my97Date-debug", "travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug", "highcharts-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var layoutTmpStr = require("travsky/jcf/1.0.0/template/service/serverServiceMgrLayout-debug.tpl");
    var itemTmpStr = require("travsky/jcf/1.0.0/template/service/serverServiceItem-debug.tpl");
    var listTmpStr = require("travsky/jcf/1.0.0/template/service/serverServiceList-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var PagebarView = require("travsky/jcf/1.0.0/view/pagebar_view2-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var QueryString = require("querystring-debug");
    var ServerServiceCfgView = require("travsky/jcf/1.0.0/view/service/serverServiceCfg_view-debug");
    var authCheck = require("travsky/jcf/1.0.0/view/service/AuthCheck4Service-debug");
    var ListTipModel = require("travsky/jcf/1.0.0/model/listTip_model-debug");
    var ListTipView = require("travsky/jcf/1.0.0/view/listTip_view-debug");
    var ServerOperHelper = require("travsky/jcf/1.0.0/view/service/ServiceOperHelper-debug");
    require("bs-modal-debug")($);
    //列表每一项视图
    var ItemView = Marionette.ItemView.extend({
        initialize: function() {
            this.model.set("serverId", $("#hiddenServerIdOnPage").val());
            var authJcfStartFlag = authCheck.getJcfStart4GroupFlag();
            var authJcfStopFlag = authCheck.getJcfStop4GroupFlag();
            var authJcfForceStopFlag = authCheck.getJcForceStop4GroupFlag();
            var authJcfMoniFlag = authCheck.getJcfMoni4ServerFlag();
            //监控
            this.model.set("authJcfStartFlag", authJcfStartFlag);
            this.model.set("authJcfStopFlag", authJcfStopFlag);
            this.model.set("authJcfForceStopFlag", authJcfForceStopFlag);
            this.model.set("authJcfMoniFlag", authJcfMoniFlag);
            ///////////
            var authSihStartFlag = authCheck.getSihStart4GroupFlag();
            var authSihStopFlag = authCheck.getSihStop4GroupFlag();
            var authSihForceStopFlag = authCheck.getSihForceStop4GroupFlag();
            var authSihMoniFlag = authCheck.getSihMoni4ServerFlag();
            this.model.set("authSihStartFlag", authSihStartFlag);
            this.model.set("authSihStopFlag", authSihStopFlag);
            this.model.set("authSihForceStopFlag", authSihForceStopFlag);
            this.model.set("authSihMoniFlag", authSihMoniFlag);
            ///////////
            var authHttpStartFlag = authCheck.getHttpStart4GroupFlag();
            var authHttpStopFlag = authCheck.getHttpStop4GroupFlag();
            var authHttpForceStopFlag = authCheck.getHttpForceStop4GroupFlag();
            var authHttpMoniFlag = authCheck.getHttpMoni4ServerFlag();
            this.model.set("authHttpStartFlag", authHttpStartFlag);
            this.model.set("authHttpStopFlag", authHttpStopFlag);
            this.model.set("authHttpForceStopFlag", authHttpForceStopFlag);
            this.model.set("authHttpMoniFlag", authHttpMoniFlag);
            ////////////
            var authWebStartFlag = authCheck.getWebStart4GroupFlag();
            var authWebStopFlag = authCheck.getWebStop4GroupFlag();
            var authWebForceStopFlag = authCheck.getWebForceStop4GroupFlag();
            var authWebMoniFlag = authCheck.getWebMoni4ServerFlag();
            this.model.set("authWebStartFlag", authWebStartFlag);
            this.model.set("authWebStopFlag", authWebStopFlag);
            this.model.set("authWebForceStopFlag", authWebForceStopFlag);
            this.model.set("authWebMoniFlag", authWebMoniFlag);
            ///////////////
            var authTbStartFlag = authCheck.getTbStart4GroupFlag();
            var authTbStopFlag = authCheck.getTbStop4GroupFlag();
            var authTbForceStopFlag = authCheck.getTbForceStop4GroupFlag();
            var authTbMoniFlag = authCheck.getTbMoni4ServerFlag();
            this.model.set("authTbStartFlag", authTbStartFlag);
            this.model.set("authTbStopFlag", authTbStopFlag);
            this.model.set("authTbForceStopFlag", authTbForceStopFlag);
            this.model.set("authTbMoniFlag", authTbMoniFlag);
            ////////////
            var authTtStartFlag = authCheck.getTtStart4GroupFlag();
            var authTtStopFlag = authCheck.getTtStop4GroupFlag();
            var authTtForceStopFlag = authCheck.getTtForceStop4GroupFlag();
            var authTtMoniFlag = authCheck.getTtMoni4ServerFlag();
            this.model.set("authTtStartFlag", authTtStartFlag);
            this.model.set("authTtStopFlag", authTtStopFlag);
            this.model.set("authTtForceStopFlag", authTtForceStopFlag);
            this.model.set("authTtMoniFlag", authTtMoniFlag);
            ///////////////////
            var authUtlStartFlag = authCheck.getUtlStart4GroupFlag();
            var authUtlStopFlag = authCheck.getUtlStop4GroupFlag();
            var authUtlForceStopFlag = authCheck.getUtlForceStop4GroupFlag();
            var authUtlMoniFlag = authCheck.getUtlMoni4ServerFlag();
            this.model.set("authUtlStartFlag", authUtlStartFlag);
            this.model.set("authUtlStopFlag", authUtlStopFlag);
            this.model.set("authUtlForceStopFlag", authUtlForceStopFlag);
            this.model.set("authUtlMoniFlag", authUtlMoniFlag);
            //增加配置权限
            var authJcfCfgFlag = authCheck.getJcfCfg4GroupFlag();
            var authSihCfgFlag = authCheck.getSihCfg4GroupFlag();
            var authHttpCfgFlag = authCheck.getHttpCfg4GroupFlag();
            var authWebCfgFlag = authCheck.getWebCfg4GroupFlag();
            var authTbCfgFlag = authCheck.getTbCfg4GroupFlag();
            var authTtCfgFlag = authCheck.getTtCfg4GroupFlag();
            var authUtlCfgFlag = authCheck.getUtlCfg4GroupFlag();
            this.model.set("authJcfCfgFlag", authJcfCfgFlag);
            this.model.set("authSihCfgFlag", authSihCfgFlag);
            this.model.set("authHttpCfgFlag", authHttpCfgFlag);
            this.model.set("authWebCfgFlag", authWebCfgFlag);
            this.model.set("authTbCfgFlag", authTbCfgFlag);
            this.model.set("authTtCfgFlag", authTtCfgFlag);
            this.model.set("authUtlCfgFlag", authUtlCfgFlag);
            this.model.on("change", this.render);
        },
        tagName: "tr",
        template: _.template(itemTmpStr),
        events: {
            "click :checkbox[name='selected']": "singleSelect",
            "click .serviceOperationTd a": "operServiceStatus",
            "click .serverServiceCfgTd a": "toServerServiceCfgUI",
            "click .serviceCfgMoniTd a": "serviceCfgMoni",
            "click .serverServiceRespTd a": "toServerServiceRespUI"
        },
        singleSelect: function(e) {
            var $tbody = $(e.target).parents("tbody");
            var len1 = $tbody.find("input:checkbox[name='selected']").length;
            var len2 = $tbody.find("input:checkbox[name='selected']:checked").length;
            if (len1 == len2) {
                $("#allSelected").prop("checked", true);
            } else {
                $("#allSelected").prop("checked", false);
            }
        },
        serviceCfgMoni: function(e) {
            //详情监控
            e.stopPropagation();
            e.preventDefault();
            var serverId = this.model.get("serverId");
            var serviceId = this.model.get("serviceId");
            var jsParam = {
                serverId: serverId,
                serviceId: serviceId
            };
            appRouter.navigate("serviceMgr/server/monitor/param/" + QueryString.stringify(jsParam), {
                trigger: true
            });
        },
        toServerServiceCfgUI: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var modelName = sidbarUtil.getModuleName();
            var serverURL = "/" + jcfManager.appName + "/service/toConfigServiceUI.action";
            var serverId = this.model.get("serverId");
            var serviceId = this.model.get("serviceId");
            var jsonParam = {
                serverId: serverId,
                serviceId: serviceId
            };
            var ajaxing = util.dealAjaxRequest4SimpleParam(serverURL, jsonParam);
            var queryString = {
                serverId: serverId,
                serviceId: serviceId
            };
            appRouter.navigate(modelName + "/server/cfg/param/" + QueryString.stringify(queryString));
            $.when(ajaxing).done(function(data) {
                var errorFlag = data.errorFlag;
                if (errorFlag == "") {
                    var model = new Backbone.Model(data.serviceParamInfo);
                    model.set("queueTypes", data.queueTypes || "");
                    model.set("messageModes", data.messageModes || "");
                    model.set("pageFlag", data.pageFlag || "");
                    model.set("serviceId", data.baseInfo.serviceId || "");
                    model.set("serverId", data.baseInfo.serverId || "");
                    model.set("serviceName", data.baseInfo.serviceName || "");
                    model.set("groupName", data.baseInfo.groupName || "");
                    model.set("currentVersion", data.baseInfo.currentVersion || "");
                    model.set("serverName", data.baseInfo.serverName || "");
                    //处理可能为空的情况
                    model.set("mode", data.serviceParamInfo.mode || "");
                    var configView = new ServerServiceCfgView({
                        model: model
                    });
                    jcfManager.contentRegion.show(configView);
                } else {
                    var tipModel = new ListTipModel();
                    tipModel.set("errList", [ "" + errorFlag ]);
                    var tipView = new ListTipView({
                        model: tipModel
                    });
                    jcfManager.tipInfoRegion.show(tipView);
                }
            });
        },
        toServerServiceRespUI: function(e) {
            //度量数据	
            e.stopPropagation();
            e.preventDefault();
            var autoFreshFlag = $("#freshPage4ServerServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            var RespOptView = require("travsky/jcf/1.0.0/view/service/respMoni_view-debug");
            this.model.set("checkGroupCategory", "1");
            jcfManager.dialogRegion.show(new RespOptView({
                model: this.model
            }));
            $("#queryDataModal").modal("show");
        },
        operServiceStatus: function(e) {
            //启动,停止服务
            e.preventDefault();
            var groupOrServer = "server";
            helper = new ServerOperHelper();
            var href = $(e.target).attr("href");
            var autoFreshFlag = $("#freshPage4ServerServiceFlag").val();
            window.clearInterval(autoFreshFlag);
            if ("stop" == href) {
                helper.stopService(this.model, groupOrServer);
            } else if ("forceStop" == href) {
                helper.forceStopService(this.model, groupOrServer);
            } else if ("start" == href) {
                helper.startService(this.model, groupOrServer);
            }
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes));
            return this;
        }
    });
    //列表视图
    var ListView = Marionette.CompositeView.extend({
        initialize: function() {},
        template: _.template(listTmpStr),
        events: {
            "click #allSelected": "allSelected"
        },
        childView: ItemView,
        childViewContainer: "tbody",
        allSelected: function(e) {
            var flag = e.target.checked;
            var $tbody = $(e.target).parents("thead").siblings("tbody");
            $tbody.find("input:checkbox[name='selected']").prop("checked", flag);
        }
    });
    var ServerServiceLayout = Marionette.LayoutView.extend({
        initialize: function(options) {
            this.queryString = options.queryString;
            this.on("showPageInfo", this.showPageInfo);
            var authSearch4ServerFlag = authCheck.getSearchService4ServerFlag();
            this.model.set("authSearch4ServerFlag", authSearch4ServerFlag);
            jcfManager.tipInfoRegion = this.tipInfoRegion;
        },
        template: _.template(layoutTmpStr),
        regions: {
            tipInfoRegion: "#tipInfoRegion",
            listRegion: "#listRegion",
            pagebarRegion: "#pagebarRegion"
        },
        events: {
            "click #searchServerServiceBtn": "searchServerService"
        },
        searchServerService: function() {
            var category = $("#search4ServiceType").val();
            var status = $("#search4RuningStatus").val();
            this.queryString.currentPage = "1";
            if (this.queryString.pageSize == undefined || this.queryString.pageSize == "") {
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            jsParam.serverId = this.queryString.serverId;
            jsParam.category = category;
            jsParam.status = status;
            var modelName = sidbarUtil.getModuleName();
            appRouter.navigate(modelName + "/server/param/" + QueryString.stringify(jsParam));
            this.showPageInfo2(jsParam);
        },
        showPageInfo: function() {
            if (this.queryString.currentPage == undefined || this.queryString.currentPage == "") {
                this.queryString.currentPage = "1";
                this.queryString.pageSize = jcfManager.defaultPageSize;
            }
            var jsParam = {};
            jsParam.currentPage = this.queryString.currentPage;
            jsParam.pageSize = this.queryString.pageSize;
            jsParam.serverId = this.queryString.serverId;
            jsParam.category = this.queryString.category;
            jsParam.status = this.queryString.status;
            this.showPageInfo2(jsParam);
        },
        showPageInfo2: function(jsParam) {
            var self = this;
            var refreshSpace = 2e3;
            //刷新时间间隔
            var refreshNum = util.getFefreshPageNum();
            //刷新次数
            var refreshTime = refreshSpace * refreshNum;
            //多少秒后执行清除刷新函数
            //保存当前url
            var curHash = window.location.hash;
            $("#freshPage4ServerServiceUrl").val(curHash);
            var serverURL = "/" + jcfManager.appName + "/service/searchServerService.action";
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            $.when(ajaxing).done(function(data) {
                var collection = new Backbone.Collection(data.recordList);
                var listView = new ListView({
                    collection: collection
                });
                self.listRegion.show(listView);
                var model = new Backbone.Model(data);
                model.set("uriSection", "server");
                var pbView = new PagebarView({
                    model: model,
                    queryString: self.queryString
                });
                self.pagebarRegion.show(pbView);
                //定时刷新页面服务的状态
                if (collection.length > 0) {
                    var ttt = setInterval(self.updatePageServiceStatus, refreshSpace, collection);
                    $("#freshPage4ServerServiceFlag").val(ttt);
                    setTimeout("window.clearInterval(" + ttt + ")", refreshTime);
                }
            });
        },
        updatePageServiceStatus: function(collection) {
            var curHash = window.location.hash;
            var oldUrl = $("#freshPage4ServerServiceUrl").val();
            var autoFreshFlag = $("#freshPage4ServerServiceFlag").val();
            if (oldUrl == curHash) {
                var serverURL = "/" + jcfManager.appName + "/service/searchServerServiceStatus.action";
                var ajaxing = util.dealAjaxRequestWithoutParam(serverURL);
                $.when(ajaxing).done(function(data) {
                    var model = new Backbone.Model(data);
                    collection.each(function(m) {
                        var serviceId = m.get("serviceId");
                        var cStatus = model.get("" + serviceId + "");
                        if (cStatus != undefined) {
                            m.set("serviceStatus", cStatus);
                        }
                    });
                });
            } else {
                window.clearInterval(autoFreshFlag);
            }
        }
    });
    return ServerServiceLayout;
});

define("travsky/jcf/1.0.0/template/service/serverServiceMgrLayout-debug.tpl", [], '<br/>\n<div id = "tipInfoRegion"></div>\n<div  id = "searchBarRegion">\n	<div class = "row">\n		<div class = "col-sm-2 text-right"><label for="addGroup_groupCategory" class="control-label">服务类型：</label></div>\n		<div class = "col-sm-2">\n			<select id = "search4ServiceType"  class  = "form-control input-sm">\n	         	 <option value="" selected="selected">全部</option>\n	         	 <%\n	         	 	for(var i = 0 ; i < categoryList.length ; i ++){\n         	 			if(paramCategory==categoryList[i].key){\n         	 				%><option selected = "selected" value="<%=categoryList[i].key%>"><%=categoryList[i].value%></option><%\n         	 			}else{\n         	 				%><option value="<%=categoryList[i].key%>"><%=categoryList[i].value%></option><%\n         	 			}\n	         	 	}\n	         	 %>\n         	 </select>\n		</div>\n		<div class = "col-sm-2 text-right"><label for="addGroup_groupCategory" class="control-label">运行状态：</label></div>\n		<div class = "col-sm-2">\n			<select id = "search4RuningStatus"  class  = "form-control input-sm">\n         	 	<option value="" selected="selected">全部</option>\n         	 	<%\n         	 		for(var j = 0 ; j < statusList.length ; j ++){\n         	 			if(paramStatus==statusList[j].key){\n         	 			   %><option selected = "selected" value="<%=statusList[j].key%>"><%=statusList[j].value%></option><%\n         	 			}else{\n         	 			   %><option value="<%=statusList[j].key%>"><%=statusList[j].value%></option><%\n         	 			}\n         	 		}\n         	 	%>\n         	 </select>\n		</div>\n		<div class = "col-sm-2"><button id= "searchServerServiceBtn" class = "btn">查询</button></div>\n	</div>\n</div>\n<br/>\n<div  id = "listRegion"></div>\n<div  id = "pagebarRegion"></div>\n<input id = "hiddenServerIdOnPage" type = "hidden" value = "<%=serverId%>"/>\n<input id = "freshPage4ServerServiceFlag" type = "hidden" />\n<input id = "freshPage4ServerServiceUrl" type = "hidden" />');

define("travsky/jcf/1.0.0/template/service/serverServiceItem-debug.tpl", [], '<!--\n<td>\n	<input type="checkbox" name="selected" class="select" value="selected"/>\n</td>\n-->\n<td><%=serviceName%></td>\n<td><%=serviceCategory%></td>\n<td><%=appVersion%></td>\n<td class="sericeStatus">\n	<%if(serviceStatus==1){\n		%>启动<%\n	}else if(serviceStatus==2){\n		%>停止<%\n	}else if(serviceStatus==3){\n		%>启动中<%\n	}else if(serviceStatus==4){\n		%>停止中<%\n	}else if(serviceStatus==5){\n		%>挂起<%\n	}else if(serviceStatus==6){\n		%>挂起中<%\n	}else if(serviceStatus==7){\n		%>异常<%\n	}else if(serviceStatus==8){\n		%>查询中<%\n	}else if(serviceStatus==9){\n		%>服务停止,补偿流程未停止<%\n	}else if (serviceStatus==10){\n		%>服务运行，补偿流程已停止<%\n	}else{\n		%>未知<%\n	}%>\n</td>\n\n<%\n	if(serviceCategory=="BusinessService"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n				\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n				    %>|<span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authJcfStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authJcfForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authJcfStartFlag=="true"){\n					%><a class="start myhand" href = "start">启动</a><%\n				}else{\n					%><span class = "text-info">启动</span><%\n				}%>\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n				    %>|<span class = "text-info">强制停止</span><%\n				}%>\n			<% \n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authJcfStopFlag=="true"){\n					%><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n					%><span class = "text-info">停止</span><%\n				}%>\n				<%if(authJcfForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n				    %>|<span class = "text-info">强制停止</span><%\n				}%>\n			<% \n			}else {\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authJcfCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authJcfMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n				%><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="sih"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authSihStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authSihStopFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authSihForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authSihStopFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n				<%if(authSihStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authSihStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authSihForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authSihCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authSihMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="http"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authHttpStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authHttpStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authHttpStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authHttpStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authHttpForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authHttpCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authHttpMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="webservice"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authWebStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authWebStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authWebForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>	\n				<%if(authWebStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n				<%if(authWebStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authWebStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authWebForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authWebCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authWebMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="tumsb"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authTbStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authTbStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authTbStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n				<%if(authTbStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authTbStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTbForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authTbCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = \'text-info\'>服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authTbMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="tumst"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authTtStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authTtStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus==4){\n			%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authTtStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n				<%if(authTtStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authTtStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authTtForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authTtCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authTtMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}else if (serviceCategory=="utl"){\n	 %>\n	 	<td class="serviceOperationTd">\n			<%if(serviceStatus=="1"){\n			%>\n				<%if(authUtlStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="2"){\n			%>\n				<%if(authUtlStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="3"){\n				%>停止||强制停止<%\n			}else if(serviceStatus=="4"){\n			%>\n				<%if(authUtlForceStopFlag=="true"){\n					%><a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if(serviceStatus=="5"){\n				%>挂起<%\n			}else if(serviceStatus=="6"){\n				%>挂起中<%\n			}else if(serviceStatus=="7"){\n				%>异常<%\n			}else if(serviceStatus=="8"){\n				%>查询中<%\n			}else if (serviceStatus=="9"){\n			%>\n				<%if(authUtlStartFlag=="true"){\n				   %><a class="start myhand" href = "start">启动</a><%\n				}else{\n				   %><span class = "text-info">启动</span><%\n				}%>\n				<%if(authUtlStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else if (serviceStatus=="10"){\n			%>\n				<%if(authUtlStopFlag=="true"){\n				   %><a class="stop myhand" href = "stop">停止</a><%\n				}else{\n				   %><span class = "text-info">停止</span><%\n				}%>\n				<%if(authUtlForceStopFlag=="true"){\n					%>|<a class="forceStop myhand" href = "forceStop">强制停止</a><%\n				}else{\n					%><span class = "text-info">强制停止</span><%\n				}%>\n			<%\n			}else{\n				%>未知<%\n			}%>\n		</td>\n		<td class="serverServiceCfgTd">\n			<%\n			if(serviceStatus!="3"&&serviceStatus!="4"&&serviceStatus!="5"&&serviceStatus!="6"&&serviceStatus!="7"&&serviceStatus!="8"&&authUtlCfgFlag=="true"){\n			  %><a  href = "#" class = "myhand">服务配置</a><%\n			}else{\n			  %><span class = "text-info">服务配置</span><%\n			}\n			%>\n		</td>\n		<td class = "serviceCfgMoniTd">\n			<%if(serviceStatus=="1"&&authUtlMoniFlag=="true"){\n				%><a class = "myhand">查看</a><%\n			}else{\n			    %><span class = "text-info">查看</span><%\n			}%>\n		</td>\n		<td class="serverServiceRespTd">\n			<!--<a  href = "#" class = "myhand">查看</a>-->\n			<span class = "text-info">查看</span>\n		</td>\n	 <%\n	}\n%>\n');

define("travsky/jcf/1.0.0/template/service/serverServiceList-debug.tpl", [], '<table class = "table table-bordered">\n    <thead>\n      <tr>\n      	<!--\n      	<th>\n      		<input type="checkbox" class="select" value="0" name="allselected" id="allSelected">\n      	</th>\n      	-->\n      	<th>名称</th>\n        <th>类型</th>\n        <th>版本</th>\n        <th>状态</th>\n        <th>操作</th>\n        <th>配置</th>\n        <th>详情监控</th>\n        <th>度量数据</th>\n      </tr>\n    </thead>\n    <tbody>\n    </tbody>\n</table>\n<div class="paginate">\n\n</div>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-2-2
 * Time: 上午09:42:57
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/serverServiceCfg_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/serverServiceCfg-debug.tpl");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var inputCheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil2-debug");
    var ServerServiceCfgView = Marionette.ItemView.extend({
        template: _.template(viewTemplateStr),
        initialize: function() {
            this.listenTo(this.model, "change:messageMode", this.render);
        },
        events: {
            "click #submitFormBtn": "submitForm",
            "click #backBtn": "toBackPage",
            "blur #inputQueue": "checkInputQueue",
            "blur #outputQueue": "checkOutputQueue",
            "blur #inMpeNum": "checkInMpeNum",
            "blur #outMpeNum": "checkOutMpeNum",
            "blur #requestQueueSize": "checkRequestQueueSize",
            "blur #invokeContextSize": "checkInvokeContextSize",
            "blur #threadPoolSize": "checkThreadPoolSize",
            "blur #upperLimit": "checkUpperLimit",
            "blur #invokeTimeout": "checkInvokeTimeout",
            "change #messageMode": "changeMessageMode"
        },
        changeMessageMode: function() {
            var val = $.trim($("#messageMode").val());
            this.model.set("messageMode", val);
        },
        toBackPage: function() {
            window.history.back();
        },
        checkInputQueue: function() {
            var id = "inputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkOutputQueue: function() {
            var id = "outputQueue";
            var value = $.trim($("#" + id).val());
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                inputCheckUtil.successInput(id);
            }
            return true;
        },
        checkInMpeNum: function() {
            var id = "inMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            }
            return flag;
        },
        checkOutMpeNum: function() {
            var id = "outMpeNum";
            var value = $.trim($("#" + id).val());
            var flag = true;
            if (value == "") {
                inputCheckUtil.clearInput(id);
            } else {
                var minNum = 1;
                var maxNum = 1e4;
                flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            }
            return flag;
        },
        checkRequestQueueSize: function() {
            var id = "requestQueueSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInvokeContextSize: function() {
            var id = "invokeContextSize";
            var minNum = 1;
            var maxNum = 1e3 * 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkThreadPoolSize: function() {
            var id = "threadPoolSize";
            var minNum = 1;
            var maxNum = 1e4;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkUpperLimit: function() {
            var id = "upperLimit";
            var minNum = 1;
            var maxNum = 99;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        checkInvokeTimeout: function() {
            var id = "invokeTimeout";
            var minNum = 1;
            var maxNum = 1e3;
            var flag = inputCheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minNum, maxNum);
            return flag;
        },
        submitForm: function() {
            var pageFlag = $.trim($("#hiddenPageFlag").val());
            var formObj = {};
            var flag = false;
            if ("page1" == pageFlag) {
                flag = this.checkForm1();
                if (flag) {
                    formObj = this.getFormObj1();
                }
            } else if ("page2" == pageFlag) {
                flag = this.checkForm2();
                if (flag) {
                    formObj = this.getFormObj2();
                }
            } else if ("page3" == pageFlag) {
                flag = this.checkForm3();
                if (flag) {
                    formObj = this.getFormObj3();
                }
            }
            //如果表单验证合法这提交数据
            if (flag) {
                var serverURL = "/" + jcfManager.appName + "/service/saveServiceConfig.action";
                var ajaxing = util.dealAjaxRequest4JSObj(serverURL, formObj);
                $.when(ajaxing).done(function(data) {
                    if (data.flag == "true") {
                        alert("成功!");
                    } else {
                        alert("失败!");
                    }
                });
            }
        },
        checkForm1: function() {
            if (this.checkValidateQueueNameAndNum() && this.checkThreadPoolSize() && this.checkUpperLimit()) {
                return true;
            }
            return false;
        },
        checkForm2: function() {
            if (this.checkRequestQueueSize() && this.checkInvokeContextSize() && this.checkThreadPoolSize() && this.checkUpperLimit()) {
                return true;
            }
            return false;
        },
        checkForm3: function() {
            if (this.checkInvokeTimeout() && this.checkThreadPoolSize()) {
                return true;
            }
            return true;
        },
        getFormObj1: function() {
            var formIds = [ "serverId", "serviceId", "inputQueue", "outputQueue", "inMpeNum", "outMpeNum", "mqServerInfo", "requestQueueSize", "invokeContextSize", "threadPoolSize", "messageMode", "upperLimit", "queueType" ];
            var formObj = util.getFormInputObj(formIds);
            return formObj;
        },
        getFormObj2: function() {
            var formIds = [ "serverId", "serviceId", "requestQueueSize", "invokeContextSize", "threadPoolSize", "messageMode", "upperLimit", "queueType" ];
            var formObj = util.getFormInputObj(formIds);
            return formObj;
        },
        getFormObj3: function() {
            var formIds = [ "serverId", "serviceId", "invokeServiceName", "invokeTimeout", "threadPoolSize" ];
            var formObj = util.getFormInputObj(formIds);
            return formObj;
        },
        checkValidateQueueNameAndNum: function() {
            //
            var flag = false;
            var id1 = "inputQueue";
            var id2 = "outputQueue";
            var flag1 = inputCheckUtil.checkNotNull(id1);
            var flag2 = inputCheckUtil.checkNotNull(id2);
            if (!flag1 && !flag2) {
                //如果都为空,则提示至少一个不为空
                //$("#"+id1+"Tip").html("接入队列和接出队列至少需要配置一个") ;
                inputCheckUtil.errInput(id1, "接入队列和接出队列至少需要配置一个");
                flag = false;
            } else {
                //有不为空的
                inputCheckUtil.successInput(id1);
                inputCheckUtil.successInput(id2);
                //接入mq队列---接入mq个数//接出mq队列---接出mq个数
                var val1 = $.trim($("#" + id1).val());
                if (val1 == "") {
                    //接入mq为空//判断接入mq是否为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        flag = inputCheckUtil.successInput(id1);
                    } else {
                        //
                        flag = inputCheckUtil.errInput(id1, "接入MQ队列名称不能为空!");
                    }
                } else {
                    //接入mq不为空
                    if ($.trim($("#inMpeNum").val()) == "") {
                        //接入mq个数为空
                        flag = inputCheckUtil.errInput("inMpeNum", "接入MQ连接数不能为空!");
                    } else {
                        flag = inputCheckUtil.successInput("inMpeNum");
                    }
                }
                ////////////////////////////////////////////////////////////
                if (flag) {
                    var val2 = $.trim($("#" + id2).val());
                    if (val2 == "") {
                        //接出mq为空//判断接出mq是否为空
                        if ($("#outMpeNum").val() == "") {
                            flag = inputCheckUtil.successInput(id2);
                        } else {
                            //
                            flag = inputCheckUtil.errInput(id2, "接出MQ队列名称不能为空");
                        }
                    } else {
                        //接入mq不为空
                        if ($("#outMpeNum").val() == "") {
                            //接入mq个数为空
                            flag = inputCheckUtil.errInput("outMpeNum", "接出MQ连接数不能为空");
                        } else {
                            flag = inputCheckUtil.successInput("outMpeNum");
                        }
                    }
                }
            }
            return flag;
        }
    });
    return ServerServiceCfgView;
});

define("travsky/jcf/1.0.0/template/service/serverServiceCfg-debug.tpl", [], '<br/>\n<input id = "hiddenPageFlag" type = "hidden" value = "<%=pageFlag%>"/>\n<%\n	if("page1"==pageFlag){//SIH/TUMST/TUMSB/UTL类型适配服务返回页面//SIHServiceData\n	   %>\n	   		<form class="form-horizontal" role="form">\n				<input type="hidden" id="serverId" value="<%=serverId%>" />\n	   			<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n			    <div class="form-group" id = "inputQueueDiv" >\n		            <label for="inputQueue" class="col-sm-4 control-label">接入MQ队列名称：</label>\n		            <div class="col-sm-4">\n		            	<input  id="inputQueue" value = "<%=inputQueue%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger"></span><span id = "inputQueueTip"></span></div>\n		        </div>\n		        \n		          \n		        <div class="form-group" id = "inMpeNumDiv" >\n		            <label for="inMpeNum" class="col-sm-4 control-label">接入MQ连接个数：</label>\n		            <div class="col-sm-4">\n		            	<input  id="inMpeNum" value = "<%=inMpeNum%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "inMpeNumTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "outputQueueDiv" >\n		            <label for="outputQueue" class="col-sm-4 control-label">接出MQ队列名称：</label>\n		            <div class="col-sm-4">\n		            	<input  id="outputQueue" value = "<%=outputQueue%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "outputQueueTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "outMpeNumDiv" >\n		            <label for="outMpeNum" class="col-sm-4 control-label">接出MQ连接个数：</label>\n		            <div class="col-sm-4">\n		            	<input  id="outMpeNum" value = "<%=outMpeNum%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "outMpeNumTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "mqServerInfoDiv" >\n		            <label for="mqServerInfo" class="col-sm-4 control-label">MQ服务器信息(IP/PORT/通道名/队列管理器名/超时转移时间):</label>\n		            <div class="col-sm-4">\n		            	<input  id="mqServerInfo" value = "<%=mqServerInfo%>"  type="text" class="form-control input-sm"  placeholder="" />\n		           		<input  id="mode" value = "<%=mode%>"  type="hidden" />\n		            	<input  id="service" value = "<%=serviceName%>"  type="hidden" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "mqServerInfoTip"></span></div>\n		        </div>\n		        \n		        \n		        <div class="form-group" id = "requestQueueSizeDiv" >\n		            <label for="requestQueueSize" class="col-sm-4 control-label">请求队列大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="requestQueueSize" value = "<%=requestQueueSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "requestQueueSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "invokeContextSizeDiv" >\n		            <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "invokeContextSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "threadPoolSizeDiv" >\n		            <label for="threadPoolSize" class="col-sm-4 control-label">适配服务线程池大小:</label>\n		            <div class="col-sm-4">\n		            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "messageModeDiv" >\n		            <label for="messageMode" class="col-sm-4 control-label">信息模式:</label>\n		            <div class="col-sm-4">\n		            	<input  id="messageMode" value = "<%=messageMode%>" readonly="readonly" type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "messageModeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "upperLimitDiv" >\n		            <label for="upperLimit" class="col-sm-4 control-label">队列预警值:</label>\n		            <div class="col-sm-4">\n		            	<input  id="upperLimit" value = "<%=upperLimit%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span class ="text-info">(%)</span><span id = "upperLimitTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "queueTypeDiv" >\n		            <label for="queueType" class="col-sm-4 control-label">队列类型:</label>\n		            <div class="col-sm-4">\n		            	<select id="queueType"   class="form-control input-sm">\n	            			<%if(messageMode=="one_way"){%>\n	            				<%for(var i = 0 ; i < queueTypes.length ; i ++){%>\n		            				<option <%if(queueType==queueTypes[i]){%>selected = "selected"<%}%>  value = "<%=queueTypes[i]%>"><%=queueTypes[i]%></option>\n		            			<%}%>\n	            			<%}else{%>\n	            				<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n	            			<%}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "queueTypeTip"></span></div>\n		        </div>\n				   \n				<div class="form-group">\n				   <div class="col-sm-offset-3">\n				       <button type="button" id = "submitFormBtn" class="btn btn-primary">修改</button>\n				       <button type="button" id = "backBtn" class="btn btn-primary" >返回</button>\n				   </div>\n			    </div>\n	   		</form>\n	   <%	\n	}else if ("page2"==pageFlag){//configBusinessService.jsp\n	   %>\n	   		<form class="form-horizontal" role="form">\n				<input type="hidden" id="serverId" value="<%=serverId%>" />\n	   			<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n	   			<div class="form-group" id = "requestQueueSizeDiv" >\n		            <label for="requestQueueSize" class="col-sm-4 control-label">请求队列大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="requestQueueSize" value = "<%=requestQueueSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "requestQueueSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "invokeContextSizeDiv" >\n		            <label for="invokeContextSize" class="col-sm-4 control-label">应答队列大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="invokeContextSize" value = "<%=invokeContextSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "invokeContextSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "threadPoolSizeDiv" >\n		            <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n		            <div class="col-sm-4">\n		            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "messageModeDiv" >\n		            <label for="messageMode" class="col-sm-4 control-label">信息模式：</label>\n		            <div class="col-sm-4">\n		            	<select id="messageMode"   class="form-control input-sm">\n		            		<%for(var j = 0 ; j < messageModes.length ; j ++){\n		            			if(messageMode== messageModes[j]){\n		            			  %><option selected = "selected" value = "<%=messageModes[j]%>"><%=messageModes[j]%></option><%\n		            			}else{\n		            			  %><option value = "<%=messageModes[j]%>"><%=messageModes[j]%></option><%\n		            			}\n		            		}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "messageModeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "upperLimitDiv" >\n		            <label for="upperLimit" class="col-sm-4 control-label">队列预警值：</label>\n		            <div class="col-sm-4">\n		            	<input  id="upperLimit" value = "<%=upperLimit%>"  type="text" class="form-control input-sm"  placeholder="" />\n		            </div>\n		            <div><span class = "text-danger">*</span><span class ="text-info">(%)</span><span id = "upperLimitTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group" id = "queueTypeDiv" >\n		            <label for="queueType" class="col-sm-4 control-label">队列类型:</label>\n		            <div class="col-sm-4">\n		            	<select id="queueType"   class="form-control input-sm">\n		            		<%if(messageMode=="one_way"){%>\n	            				<%for(var i = 0 ; i < queueTypes.length ; i ++){%>\n		            				<option <%if(queueType==queueTypes[i]){%>selected = "selected"<%}%>  value = "<%=queueTypes[i]%>"><%=queueTypes[i]%></option>\n		            			<%}%>\n	            			<%}else{%>\n	            				<option value="SimpleQueue" selected="selected" >SimpleQueue</option>\n	            			<%}%>\n		            	</select>\n		            </div>\n		            <div><span class = "text-danger">*</span><span id = "queueTypeTip"></span></div>\n		        </div>\n		        \n		        <div class="form-group">\n				   <div class="col-sm-offset-3">\n				       <button type="button" id = "submitFormBtn" class="btn btn-primary">修改</button>\n				       <button type="button" id = "backBtn" class="btn btn-primary" >返回</button>\n				   </div>\n			    </div>\n	   			\n	   		</form>	\n	   <%	\n	}else if ("page3"==pageFlag){//业务服务返回页面\n	   %>\n	   	<form class="form-horizontal" role="form">\n			<input type="hidden" id="serverId" value="<%=serverId%>" />\n	   		<input type="hidden" id="serviceId" value="<%=serviceId%>" /> \n	   		<div class="form-group" id = "invokeServiceNameDiv" >\n		        <label for="invokeServiceName" class="col-sm-4 control-label">调用服务名称：</label>\n		        <div class="col-sm-4">\n		           <input  id="invokeServiceName" value = "<%=invokeServiceName%>" readonly="readonly"  type="text" class="form-control input-sm"  placeholder="" />\n		        </div>\n		        <div><span class = "text-danger">*</span><span id = "invokeServiceNameTip"></span></div>\n		    </div>\n		    \n	   		<div class="form-group" id = "invokeTimeoutDiv" >\n		        <label for="invokeTimeout" class="col-sm-4 control-label">调用超时时间：</label>\n		        <div class="col-sm-4">\n		           <input  id="invokeTimeout" value = "<%=invokeTimeout%>"  type="text" class="form-control input-sm"  placeholder="" />\n		        </div>\n		        <div><span class = "text-danger">*</span><span id = "invokeTimeoutTip"></span></div>\n		    </div>\n		    \n		    \n		    <div class="form-group" id = "threadPoolSizeDiv" >\n		        <label for="threadPoolSize" class="col-sm-4 control-label">线程池大小：</label>\n	            <div class="col-sm-4">\n	            	<input  id="threadPoolSize" value = "<%=threadPoolSize%>"  type="text" class="form-control input-sm"  placeholder="" />\n	            </div>\n		        <div><span class = "text-danger">*</span><span id = "threadPoolSizeTip"></span></div>\n		    </div>\n		    \n	        <div class="form-group">\n			   <div class="col-sm-offset-3">\n			       <button type="button" id = "submitFormBtn" class="btn btn-primary">修改</button>\n			       <button type="button" id = "backBtn" class="btn btn-primary" >返回</button>\n			   </div>\n		    </div>\n		    \n	   	</form>\n	   <%	\n	}\n%>');

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-7
 * Time: 上午11:15:12
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/service/respMoni_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SidebarUtil-debug", "my97Date-debug", "querystring-debug", "travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug", "highcharts-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var sidbarUtil = require("travsky/jcf/1.0.0/util/SidebarUtil-debug");
    var my97Date = require("my97Date-debug");
    var QueryString = require("querystring-debug");
    require("bs-modal-debug")($);
    var viewTemplateStr = require("travsky/jcf/1.0.0/template/service/serviceChartOpt-debug.tpl");
    var GroupAddView = Marionette.LayoutView.extend({
        initialize: function() {
            this.listenTo(this.model, "change", this.render);
        },
        regions: {
            errInfoShowRegion: "#errInfoShowRegion",
            singleErrInfoShowRegion: "#singleErrInfoShowRegion"
        },
        template: _.template(viewTemplateStr),
        events: {
            "change #dataType": "changeGroupCategory",
            "click #queryDataBtn": "queryData",
            "click #startDate": "startDate",
            "click #endDate": "endDate"
        },
        changeGroupCategory: function() {
            var selectGC = this.$el.find("#dataType").val();
            this.model.set("checkGroupCategory", selectGC);
            $("#queryDataModal").modal("show");
        },
        startDate: function() {
            WdatePicker({
                el: $dp.$("startTime"),
                dateFmt: "yyyy-MM-dd HH:mm:ss"
            });
        },
        endDate: function() {
            WdatePicker({
                el: $dp.$("endTime"),
                dateFmt: "yyyy-MM-dd HH:mm:ss"
            });
        },
        getCacheConfigFormInputParam: function() {
            var ids = [ "dataType", "disposeType" ];
            var jsParam = util.getFormInputObj(ids);
            return jsParam;
        },
        checkCacheGroupCfgInfo: function() {
            if (this.checkGroupName() && this.checkGroupPassword() && this.checkBroadcastURL() && this.checkMaxSize4Store() && this.checkSingleDataMaxLength() && this.checkCacheNodeAlert() && this.checkJvmMemory() && this.checkJvmHeapAlert() && this.checkDataBackupNum() && this.checkStatisticsPath() && this.checkStatisticsSyncTime() && this.checkJvmHeapBlock() && this.checkMaxSize4Cache() && this.checkaNetworkPort() && this.checkaddTcpIPMember()) {
                return true;
            }
            return false;
        },
        queryData: function(e) {
            var jsParam = {};
            var modelName = sidbarUtil.getModuleName();
            var serverURL = "/" + jcfManager.appName + "/service/chartSearch.action";
            jsParam = this.getCacheConfigFormInputParam();
            jsParam.serviceName = this.model.get("serviceName");
            jsParam.serverName = this.model.get("serverName");
            jsParam.appVersion = this.model.get("appVersion");
            var ajaxing = util.dealAjaxRequest4JSObj(serverURL, jsParam);
            var self = this;
            self.remove();
            appRouter.navigate(modelName + "/server/MoniOption/param/" + QueryString.stringify(jsParam));
            $.when(ajaxing).done(function(data) {
                if (data.flag != "error") {
                    var model1 = new Backbone.Model(data);
                    model1.set("serverId", self.model.get("serverId"));
                    model1.set("appVersion", self.model.get("appVersion"));
                    var serverServiceChart_view = require("travsky/jcf/1.0.0/view/service/serverServiceChart_view-debug");
                    var sc_view = new serverServiceChart_view({
                        model: model1
                    });
                    jcfManager.contentRegion.show(sc_view);
                } else {
                    alert("度量数据加载失败");
                }
            });
        }
    });
    return GroupAddView;
});

define("travsky/jcf/1.0.0/template/service/serviceChartOpt-debug.tpl", [], '<div id = "queryDataModal" class="modal" aria-hidden="true" style="z-index:10400;"  data-backdrop="static">\n   <div class="modal-dialog" style = "width:700px;">\n      <div class="modal-content">\n         <div class="modal-header">\n            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n            <h4 class="modal-title" id="myModalLabel">数据查询选项</h4>\n         </div>\n         <div class="modal-body">\n         <form class="form-horizontal"  role="form" method= "POST">\n 	          <div class="form-group" id = "addGroup_groupCategoryDiv" >\n			      <label for="addGroup_groupCategory" class="col-sm-3 control-label">数据类型：</label>\n			      <div class="col-sm-5">\n			          <select id="dataType"  class  = "form-control input-sm">\n			          	 <%\n					      	   if(1==checkGroupCategory){\n					      		  %><option selected = "selected"  value = "1" >实时数据</option>\n					     			<option value = "2" >历史数据</option><%\n					      	   }else{\n					      	 	  %><option value = "1" >实时数据</option>\n					     			<option selected = "selected" value = "2" >历史数据</option><%\n					      	   }\n					     %>\n				     </select>\n			      </div>\n			  </div>	\n         	  			\n 			  <div class="form-group" id = "addGroup_groupNameDiv" >\n			      <label for="addGroup_groupCategory" class="col-sm-3 control-label">处理类型：</label>\n			      <div class="col-sm-5">\n			          <select id="disposeType"  class  = "form-control input-sm">\n					     <option selected = "selected"  value = "1" >处理时间</option>\n					     <option value = "2" >处理结果</option>\n				     </select>\n			      </div>\n			   </div>\n         </form>\n          <%\n		   	if(checkGroupCategory=="2"){//选择历史数据\n		  %>\n		   	   	<form class="form-horizontal" id = "addServerForm"  role="form" method= "POST">\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_groupPasswordDiv" >\n					      <label for="addGroup_groupPassword" class="col-sm-3 control-label">开始日期：</label>\n					      <div class="col-sm-5">\n					      	<input type="text" id="startTime" type="text" class="form-control input-sm"  placeholder="必填项" />\n							\n					      </div>\n					      <div>\n					      		<span class = "text-danger">\n					      			<img  id="startDate" src="./static/js/seajs-modules/My97DatePicker/skin/datePicker.gif"width="16" height="22" align="absmiddle">\n					      		</span>\n					      		<span id = "addGroup_groupPasswordTip"></span>\n					      </div>\n				    </div>\n		   	   		\n		   	   		<div class="form-group" id = "addGroup_broadcastURLDiv" >\n					      <label for="addGroup_broadcastURL" class="col-sm-3 control-label">结束日期：</label>\n					      <div class="col-sm-5">\n					      	<input type="text" id="endTime" type="text" class="form-control input-sm"  placeholder="必填项" />\n							\n					      </div>\n					      <div><span class = "text-danger">\n					      	<img  id="endDate" src="./static/js/seajs-modules/My97DatePicker/skin/datePicker.gif"width="16" height="22" align="absmiddle"></span>\n					      	<span id = "addGroup_groupPasswordTip"></span>\n					      </div>\n				    </div>\n		   	   	</form>\n		   	<%\n		   	}\n		   %>\n         </div>\n         <div class="modal-footer">\n            <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>\n            <button id = "queryDataBtn" type="button" class="btn btn-primary">查询 </button>\n         </div>\n      </div>\n</div>');

define("travsky/jcf/1.0.0/model/service/service_degrade_config_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var ServiceDegradeConfigModel = Backbone.Model.extend({
        urlRoot: "/" + appName + "/service/serviceDegradeConfig.action",
        defaults: function() {
            return {
                degradeServiceName: "",
                tpsSelected: false,
                degradeTPU: "",
                degradeTimeUnit: "1000",
                queueSelected: false,
                degradePercent: ""
            };
        },
        isTpsSelected: function() {
            return this.get("tpsSelected");
        },
        isQueueSelected: function() {
            return this.get("queueSelected");
        }
    });
    return ServiceDegradeConfigModel;
});

define("travsky/jcf/1.0.0/model/service/service_gray_config_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var ServiceGrayConfigModel = Backbone.Model.extend({
        urlRoot: "/" + appName + "/service/serviceGrayConfig.action",
        defaults: function() {
            return {
                serviceTrafficSelected: false,
                serviceHeaderSelected: false,
                serviceTraffic: "traffic",
                serviceHeader: "header"
            };
        },
        isServiceTrafficSelected: function() {
            return this.get("serviceTrafficSelected");
        },
        isServiceHeaderSelected: function() {
            return this.get("serviceHeaderSelected");
        }
    });
    return ServiceGrayConfigModel;
});

define("travsky/jcf/1.0.0/collection/dataSource/dataSource_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/dataSource_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var DataSourceModel = require("travsky/jcf/1.0.0/model/dataSource/dataSource_model-debug");
    var DataSourceCollection = Backbone.Collection.extend({
        model: DataSourceModel,
        url: "/" + appName + "/dataSource/getAlldataSourceList.action",
        parse: function(response) {
            return _.extend(response);
        }
    });
    return DataSourceCollection;
});

define("travsky/jcf/1.0.0/model/dataSource/dataSource_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceModel = Backbone.Model.extend({
        urlRoot: ""
    });
    return DataSourceModel;
});

define("travsky/jcf/1.0.0/view/dataSource/dataSourceList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceItem_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var DataSourceListTemplate = require("travsky/jcf/1.0.0/template/dataSource/dataSourceList-debug.tpl");
    var DataSourceItemView = require("travsky/jcf/1.0.0/view/dataSource/dataSourceItem_view-debug");
    var DataSourceListView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(DataSourceListTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            var searchGroupDataSourceListURL = "/" + jcfManager.appName + "/dataSource/getAllDataSource.action";
            util.dealAjaxRequestWithoutParam(searchGroupDataSourceListURL);
            this.dataSourceList = options.collection;
            this.dataSourceList.bind("reset", this.addAllDataSources, this);
            this.views = [];
        },
        render: function() {
            $(this.el).html(this.template());
            return this;
        },
        addDataSource: function(dataSource) {
            var dataSource_item_view = new DataSourceItemView({
                model: dataSource
            });
            this.$el.find("#dataSourceListBody").append(dataSource_item_view.render());
            this.views.push(dataSource_item_view);
        },
        addAllDataSources: function() {
            var _this = this;
            //遍历views数组，并对每个view调用Backbone的remove
            _.each(this.views, function(view) {
                view.remove().off();
            });
            //清空views数组，此时旧的view就变成没有任何被引用的不可达对象了
            //垃圾回收器会回收它们
            this.views = [];
            this.dataSourceList.each(function(model) {
                _this.addDataSource(model);
            });
        },
        refresh: function(data) {
            this.dataSourceList.refresh(data);
        }
    });
    return DataSourceListView;
});

define("travsky/jcf/1.0.0/template/dataSource/dataSourceList-debug.tpl", [], '<div id="dataSourceListHead" class="dsList">\n	<div class="allserverName">服务器名称</div>\n	<div class="alldsName">数据源名称</div>\n	<div class="alldsURL">URL</div>\n    <div class="alldsUserName">用户名</div>\n    <div class="alldsDriverClassName">驱动</div>\n</div>\n<div id="dataSourceListBody" class="dsList">\n	\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/dataSourceItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var DataSourceItemTemplate = require("travsky/jcf/1.0.0/template/dataSource/dataSourceItem-debug.tpl");
    var DataSourceItemView = Backbone.View.extend({
        template: _.template(DataSourceItemTemplate),
        tagName: "div",
        className: "dsList",
        events: {},
        initialize: function(options) {
            this.model = options.model;
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        }
    });
    return DataSourceItemView;
});

define("travsky/jcf/1.0.0/template/dataSource/dataSourceItem-debug.tpl", [], '<div class="allserverName"><%=serverName%></div>\n<div class="alldsName"><%=dataSourceName%></div>\n<div class="alldsURL"><%=URL%></div>\n<div class="alldsUserName"><%=userName%></div>\n<div class="alldsDriverClassName"><%=driverClassName%></div>');

define("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var GroupDataSourceModel = require("travsky/jcf/1.0.0/model/dataSource/group_dataSource_model-debug");
    var GroupDataSourceCollection = Backbone.Collection.extend({
        model: GroupDataSourceModel,
        url: "/" + appName + "/dataSource/groupDataSourceList.action",
        parse: function(response) {
            return _.extend(response);
        },
        selectAll: function() {
            this.each(function(dataSource) {
                dataSource.set("selected", true);
            });
        },
        clearSelectAll: function() {
            this.each(function(dataSource) {
                dataSource.set("selected", false);
            });
        },
        selectedDataSource: function() {
            return this.filter(function(dataSource) {
                return dataSource.isSelected();
            });
        },
        isAllSelected: function() {
            if (this.selectedDataSource().length == 0) {
                return false;
            }
            return this.selectedDataSource().length == this.length;
        },
        refresh: function(data) {
            this.fetch({
                data: data,
                reset: true
            });
        }
    });
    return GroupDataSourceCollection;
});

define("travsky/jcf/1.0.0/model/dataSource/group_dataSource_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: function() {
            return {
                showDataSourceConfig: false,
                showDataSourceMonitor: false,
                restart: false,
                connected: false,
                confirmRestart: false,
                confirmUndeploy: false,
                selected: false
            };
        },
        isSelected: function() {
            return this.get("selected") == true;
        }
    });
    return GroupDataSourceModel;
});

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceItem_view-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceWait_view-debug", "travsky/jcf/1.0.0/view/dataSource/tip_view-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var GroupDataSourceListTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceList-debug.tpl");
    var GroupDataSourceItemView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceItem_view-debug");
    var authCheck = require("travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug");
    var GroupDataSourceListView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(GroupDataSourceListTemplate),
        events: {
            "click #allSelected": "toggleSelectAll"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groupId = options.queryString.groupId;
            var jsonParam = {
                groupId: this.groupId
            };
            var searchGroupDataSourceListURL = "/" + jcfManager.appName + "/dataSource/getGroupDataSource.action";
            util.dealAjaxRequest4SimpleParam(searchGroupDataSourceListURL, jsonParam);
            this.dataSourceList = options.collection;
            this.dataSourceList.bind("change:restart", this.restartDataSource, this);
            this.dataSourceList.bind("change:uninstall", this.uninstallDataSource, this);
            this.dataSourceList.bind("reset", this.addAllGroupDataSources, this);
            this.dataSourceList.bind("remove", this.addAllGroupDataSources, this);
            this.dataSourceList.bind("change:selected", this.isSelectAll, this);
            this.views = [];
        },
        render: function() {
            $(this.el).html(this.template());
            return this;
        },
        addGroupDataSource: function(dataSource) {
            var groupUninstallAuthFlag = authCheck.getServerDataSourceUninstallAuth();
            var groupRestartAuthFlag = authCheck.getServerDataSourceRestartAuth();
            dataSource.set({
                groupUninstallAuthFlag: groupUninstallAuthFlag,
                groupRestartAuthFlag: groupRestartAuthFlag
            });
            var group_dataSource_item_view = new GroupDataSourceItemView({
                model: dataSource,
                groupId: this.groupId
            });
            this.$el.find("#dataSourceListBody").append(group_dataSource_item_view.render());
            this.views.push(group_dataSource_item_view);
        },
        addAllGroupDataSources: function() {
            var _this = this;
            //遍历views数组，并对每个view调用Backbone的remove
            _.each(this.views, function(view) {
                view.remove().off();
            });
            //清空views数组，此时旧的view就变成没有任何被引用的不可达对象了
            //垃圾回收器会回收它们
            this.views = [];
            this.dataSourceList.each(function(model) {
                _this.addGroupDataSource(model);
            });
        },
        toggleSelectAll: function() {
            var self = this;
            if (self.dataSourceList.isAllSelected()) {
                this.dataSourceList.clearSelectAll();
            } else {
                this.dataSourceList.selectAll();
            }
        },
        isSelectAll: function() {
            var self = this;
            if (self.dataSourceList.isAllSelected()) {
                this.$el.find("#allSelected").prop("checked", true);
            } else {
                this.$el.find("#allSelected").removeAttr("checked");
            }
        },
        uninstallDataSource: function(model) {
            this.render();
            this.refresh(QueryString.stringify(this.options.queryString));
        },
        restartDataSource: function(model) {
            this.render();
            this.refresh(QueryString.stringify(this.options.queryString));
        },
        refresh: function(data) {
            this.dataSourceList.refresh(data);
        }
    });
    return GroupDataSourceListView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceList-debug.tpl", [], '<div id="dataSourceListHead" class="dsList">\n	<div class="groupselect"><input id="allSelected" class="select" type="checkbox"></input></div>\n	<div class="groupserverName">服务器名称</div>\n	<div class="groupdsName">数据源名称</div>\n	<div class="groupdsURL">URL</div>\n    <div class="groupdsUserName">用户名</div>\n    <div class="groupdsundeploy">组卸载</div>\n    <div class="groupdsrestart">组重启</div>\n</div>\n<div id="dataSourceListBody" class="dsList">\n	\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/dataSource/dataSourceWait_view-debug", "travsky/jcf/1.0.0/view/dataSource/tip_view-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var GroupDataSourceItemTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceItem-debug.tpl");
    var DataSourceWaitView = require("travsky/jcf/1.0.0/view/dataSource/dataSourceWait_view-debug");
    var TipView = require("travsky/jcf/1.0.0/view/dataSource/tip_view-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var GroupDataSourceItemView = Backbone.View.extend({
        template: _.template(GroupDataSourceItemTemplate),
        tagName: "div",
        className: "dsList",
        events: {
            "click .groupdsundeploy a": "showGroupDataSourceUndeployView",
            "click .groupdsrestart a": "showGroupDataSourceRestartView",
            "click #cancel": "closeConfig",
            "click .select": "toggleSelect"
        },
        initialize: function(options) {
            this.model = options.model;
            this.groupId = options.groupId;
            this.model.bind("change:selected", this.modelChange, this);
            this.listenTo(this.model, "change", this.render);
            this.listenTo(this.model, "change:confirmRestart", this.groupDataSourceRestart);
            this.listenTo(this.model, "change:confirmUndeploy", this.groupDataSourceUndeploy);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        },
        showGroupDataSourceUndeployView: function() {
            var tipView = new TipView({
                headerMessage: "卸载组数据源",
                bodyMessage: "确定要卸载组数据源" + this.model.get("dataSourceName") + "么？",
                model: this.model,
                type: "undeploy"
            });
            this.$el.append(tipView.render());
            tipView.show();
        },
        groupDataSourceUndeploy: function() {
            var self = this;
            var dataSourceWaitView = new DataSourceWaitView();
            $("#tip").append(dataSourceWaitView.render());
            dataSourceWaitView.show();
            var jsonParam = {
                groupId: this.groupId,
                dsName: this.model.get("dataSourceName")
            };
            var uninstallDSByServerURL = "/" + jcfManager.appName + "/dataSource/groupDataSourceUninstall.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(uninstallDSByServerURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                dataSourceWaitView.remove();
                //删除当前记录的视图
                self.model.set("uninstall", true);
                if (data.flag) {
                    data.messageList = [ "组数据源卸载成功" ];
                }
                var globar = new GlobalView({
                    model: data
                });
                globar.render();
            });
        },
        showGroupDataSourceRestartView: function(e) {
            var tipView = new TipView({
                headerMessage: "重启组数据源",
                bodyMessage: "确定要重启组数据源" + this.model.get("dataSourceName") + "么？",
                model: this.model,
                type: "restart"
            });
            this.$el.append(tipView.render());
            tipView.show();
        },
        groupDataSourceRestart: function() {
            var self = this;
            var jsonParam = {
                groupId: this.groupId,
                dsName: this.model.get("dataSourceName")
            };
            var restartServerDSURL = "/" + jcfManager.appName + "/dataSource/groupDataSourceRestart.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(restartServerDSURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                self.model.set("restart", true);
                if (data.flag == "true") {
                    var t = new Date().getTime();
                    appRouter.navigate("dataSrcMgr/group/param/groupId=" + self.groupId + "&t=" + t, {
                        trigger: true
                    });
                } else {
                    data.messageList = [ "组数据源重启失败" ];
                    var globar = new GlobalView({
                        model: data
                    });
                    globar.render();
                }
            });
        },
        toggleSelect: function(e) {
            var self = this;
            self.model.set("selected", !self.model.get("selected"));
        },
        modelChange: function() {
            var self = this;
            if (self.model.hasChanged("selected")) {
                self.$el.toggleClass("active", self.model.isSelected());
                if (self.model.isSelected()) {
                    self.$(".select").prop("checked", self.model.isSelected());
                } else {
                    self.$(".select").removeAttr("checked");
                }
            }
        }
    });
    return GroupDataSourceItemView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceItem-debug.tpl", [], '<div class="groupselect"><input class="select" type="checkbox" <%if (selected == true){%>checked="true"<%}%>/></div>\n<div class="groupserverName"><%=serverName%></div>\n<div class="groupdsName"><%=dataSourceName%></div>\n<div class="groupdsURL"><%=URL%></div>\n<div class="groupdsUserName"><%=userName%></div>\n<div class="groupdsundeploy">\n	<%if(groupUninstallAuthFlag==\'true\'){\n		%><a href="javascript:void(0);">组卸载</a><%\n	}else{\n		%>组卸载<%\n	}%>\n</div>\n<div class="groupdsrestart">\n	<%if(groupRestartAuthFlag==\'true\'){\n		%><a href="javascript:void(0);">组重启</a><%\n	}else{\n		%>组重启<%\n	}%>\n</div>\n');

define("travsky/jcf/1.0.0/view/dataSource/dataSourceWait_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceWaitViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/dataSourceWait-debug.tpl");
    var DataSourceWaitView = Backbone.View.extend({
        tagName: "div",
        className: "tip",
        template: _.template(DataSourceWaitViewTemplate),
        events: {},
        initialize: function(options) {},
        render: function() {
            return this.$el.html(this.template());
        },
        show: function() {
            this.$el.find("#modal").modal("show");
        },
        remove: function() {
            this.$el.find("#modal").modal("hide");
        }
    });
    return DataSourceWaitView;
});

define("travsky/jcf/1.0.0/template/dataSource/dataSourceWait-debug.tpl", [], '<div id="modal" class="modal" aria-hidden="true" style="z-index: 10400;">\n    <div class="modal-dialog">\n    	<div class="modal-content">          \n			<div class="modal-header">        \n				<h3>操作中</h3>      \n			</div>        \n			<div class="modal-body">\n				<div>请稍后......</div>\n			</div>    \n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/tip_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var tipViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/tip-debug.tpl");
    var TipView = Backbone.View.extend({
        tagName: "div",
        className: "tip",
        template: _.template(tipViewTemplate),
        events: {
            "click .modal-footer .ok": "confirm",
            "click .modal-footer .cancel": "cancel"
        },
        initialize: function(options) {
            this.options = options || {};
            this.headerMessage = options.headerMessage;
            this.bodyMessage = options.bodyMessage;
            this.model = options.model;
            this.type = options.type;
        },
        render: function() {
            return this.$el.html(this.template({
                headerMessage: this.headerMessage,
                bodyMessage: this.bodyMessage
            }));
        },
        show: function() {
            this.$el.find("#modal").modal("show");
        },
        remove: function() {
            console.log("tip remove");
            this.$el.find("#modal").remove();
        },
        confirm: function() {
            this.remove();
            if (this.type == "restart") {
                this.model.set("confirmRestart", true);
            } else {
                this.model.set("confirmUndeploy", true);
            }
        },
        cancel: function() {
            if (this.type == "restart") {
                this.model.set("confirmRestart", false);
            } else {
                this.model.set("confirmUndeploy", false);
            }
            this.remove();
        }
    });
    return TipView;
});

define("travsky/jcf/1.0.0/template/dataSource/tip-debug.tpl", [], '<div id="modal" class="modal" aria-hidden="true" style="z-index: 10400;">\n    <div class="modal-dialog">\n    	<div class="modal-content">          \n			<div class="modal-header">        \n				<h3><%=headerMessage%></h3>      \n			</div>        \n			<div class="modal-body">\n				<div><p><%=bodyMessage%></p></div>\n			</div>    \n			<div class="modal-footer">      \n				<a id="confirm" class="btn ok btn-primary" href="javascript:void(0);">确定</a>\n				<a id="cancle" class="btn cancel" href="javascript:void(0);">取消</a>\n			</div>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/global_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var globalViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/global-debug.tpl");
    var GlobalView = Backbone.View.extend({
        el: "#global",
        template: _.template(globalViewTemplate),
        events: {
            "click .close-btn": "close"
        },
        initialize: function(options) {
            this.model = options.model;
        },
        render: function() {
            this.$el.html(this.template(this.model));
            return this;
        },
        close: function() {
            this.$el.find("div").remove();
        }
    });
    return GlobalView;
});

define("travsky/jcf/1.0.0/template/dataSource/global-debug.tpl", [], '<div id="<%if (flag == true){%>success<%}else{%>failure<%}%>">\n	<div style="display:inline-block">\n		<%for (var i = 0; i < messageList.length; i++){%>\n			<%=messageList[i]%>\n		<%}%>\n	</div>\n	<a class="close-btn"></a>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceListHead_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var GroupDataSourceListHeadTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceListHead-debug.tpl");
    var GroupDataSourceListView = Backbone.View.extend({
        el: "#content-header",
        template: _.template(GroupDataSourceListHeadTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.groupId = options.queryString.groupId;
            this.dataSourceList = options.collection;
            this.dataSourceList.bind("change:selected", this.addOptions, this);
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        }
    });
    return GroupDataSourceListView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceListHead-debug.tpl", [], '<div id="optionMenus">\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/groupDeployDataSource_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_deploy_model-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerList_view-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerItem_view-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var DataSourceUtil = require("travsky/jcf/1.0.0/util/DataSourceUtil-debug");
    var GroupDataSourceDeployModel = require("travsky/jcf/1.0.0/model/dataSource/group_dataSource_deploy_model-debug");
    var GroupDataSourceServerCollection = require("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug");
    var GroupDeployDataSourceTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDeployDataSource-debug.tpl");
    var GroupDataSourceServerListView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerList_view-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var GroupDeployDataSourceView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(GroupDeployDataSourceTemplate),
        events: {
            "blur #dataSourceName": "checkDataSourceName",
            "blur #userName": "checkUserName",
            "blur #password": "checkPassWord",
            "blur #URL": "checkURL",
            "click #save": "deployDataSource"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groupId = options.queryString.groupId;
            this.groupDataSourceServerCollection = new GroupDataSourceServerCollection();
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        },
        getServerList: function() {
            var groupDataSourceServerListView = new GroupDataSourceServerListView({
                groupId: this.groupId,
                collection: this.groupDataSourceServerCollection
            });
            this.groupDataSourceServerCollection.fetch({
                reset: true,
                data: QueryString.stringify(this.options.queryString)
            });
            groupDataSourceServerListView.render();
        },
        deployDataSource: function() {
            if (this.checkForm()) {
                var allSelectedItems = [];
                if (this.groupDataSourceServerCollection.selectedServer().length > 0) {
                    this.groupDataSourceServerCollection.each(function(model) {
                        var serverId = model.get("serverId");
                        var index = allSelectedItems.indexOf(serverId);
                        if (model.isSelected() && index < 0) {
                            allSelectedItems.push(serverId);
                        }
                        if (!model.isSelected() && index >= 0) {
                            allSelectedItems.splice(index, 1);
                        }
                    });
                    var groupDataSourceDeployModel = new GroupDataSourceDeployModel();
                    var dataSourceName = this.$el.find("#dataSourceName").val().trim();
                    var userName = this.$el.find("#userName").val().trim();
                    var password = this.$el.find("#password").val().trim();
                    var URL = this.$el.find("#URL").val().trim();
                    var driverClassName = this.$el.find("#driverClassName").val().trim();
                    groupDataSourceDeployModel.set("dataSourceName", dataSourceName);
                    groupDataSourceDeployModel.set("username", userName);
                    groupDataSourceDeployModel.set("password", password);
                    groupDataSourceDeployModel.set("URL", URL);
                    groupDataSourceDeployModel.set("driverClassName", driverClassName);
                    groupDataSourceDeployModel.save({
                        allSelectedItems: allSelectedItems
                    }, {
                        success: function(model, data) {
                            if (data.flag == true) {
                                data.messageList = [ "组部署数据源成功" ];
                            }
                            var globar = new GlobalView({
                                model: data
                            });
                            globar.render();
                        }
                    });
                } else {
                    var data = {};
                    data.flag = false;
                    data.messageList = [ "请选择需要部署的服务器" ];
                    var globar = new GlobalView({
                        model: data
                    });
                    globar.render();
                }
            } else {
                var data = {
                    flag: "false",
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        checkDataSourceName: function() {
            var flag = DataSourceUtil.checkDataSourceName("dataSourceName");
            return flag;
        },
        checkUserName: function() {
            var flag = DataSourceUtil.checkUserName("userName");
            return flag;
        },
        checkPassWord: function() {
            var flag = DataSourceUtil.checkPassWord("password");
            return flag;
        },
        checkURL: function() {
            var flag = DataSourceUtil.checkURL("URL");
            return flag;
        },
        checkForm: function() {
            if (this.checkDataSourceName() && this.checkUserName() && this.checkPassWord() && this.checkURL()) {
                return true;
            }
            return false;
        }
    });
    return GroupDeployDataSourceView;
});

define("travsky/jcf/1.0.0/util/DataSourceUtil-debug", [ "jquery-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var CheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug");
    var DataSourceUtil = {
        checkDataSourceName: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = "^[a-zA-Z0-9_#]*$";
                result = CheckUtil.checkMatchRegular(id, reg, "只能包含字母、数字、下划线和警号");
            }
            this.renderInput(id, result);
            return result;
        },
        checkUserName: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = "^[a-zA-Z0-9_#]*$";
                result = CheckUtil.checkMatchRegular(id, reg, "只能包含字母、数字、下划线和警号");
            }
            this.renderInput(id, result);
            return result;
        },
        checkPassWord: function(id) {
            //可以为空
            var val = $.trim($("#" + id).val());
            var result = true;
            if (val.length > 0) {
                if (this.checkStrContainChinese(val)) {
                    result = false;
                    var $tip = $("#" + id + "Tip");
                    $tip.html("不能包含中文!");
                }
                this.renderInput(id, result);
            }
            return result;
        },
        checkURL: function(id) {
            var result = CheckUtil.checkNotNull(id);
            this.renderInput(id, result);
            return result;
        },
        checkMaxActive: function(id) {
            var result;
            if (CheckUtil.checkNotNull(id)) {
                if (CheckUtil.checkIsNum(id)) {
                    if (CheckUtil.checkIsGreaterThanOrEqualNum(id, $("#maxIdle").val())) {
                        if (CheckUtil.checkIsGreaterThanOrEqualNum(id, $("#initialSize").val())) {
                            result = true;
                        } else {
                            result = false;
                        }
                    } else {
                        result = false;
                    }
                } else {
                    result = false;
                }
            } else {
                result = false;
            }
            this.renderInput(id, result);
            return result;
        },
        checkMaxWait: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                result = CheckUtil.checkIsNum(id);
            }
            this.renderInput(id, result);
            return result;
        },
        checkMaxIdle: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                result = CheckUtil.checkIsPositiveInteger(id);
            }
            if (result) {
                result = CheckUtil.checkIsGreaterThanOrEqualNum(id, 0);
            }
            if (result) {
                result = CheckUtil.checkIsLessThanOrEqualNum(id, 500);
            }
            this.renderInput(id, result);
            return result;
        },
        checkMinIdle: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                result = CheckUtil.checkIsNotNegativeInteger(id);
            }
            if (result) {
                result = CheckUtil.checkIsGreaterThanOrEqualNum(id, 0);
            }
            if (result) {
                result = CheckUtil.checkIsLessThanOrEqualNum(id, 500);
            }
            if (result) {
                result = CheckUtil.checkIsLessThanOrEqualNum(id, $("#maxIdle").val());
            }
            this.renderInput(id, result);
            return result;
        },
        checkInitialSize: function(id) {
            var result = CheckUtil.checkInputMatchIsNotNegativeAndNotNull(id);
            this.renderInput(id, result);
            return result;
        },
        checkStrContainChinese: function(valStr) {
            //判断是否含有中文,如果含有返回:true,否则返回:false//本方法为
            for (var i = 0; i < valStr.length; i++) {
                var temp = valStr.charAt(i);
                if (temp.charCodeAt() > 16384 && temp.charCodeAt() < 65024) {
                    return true;
                }
            }
            return false;
        },
        renderInput: function(id, result) {
            if (result) {
                var item = $("#" + id);
                item.parent().addClass("has-success");
                if (item.parent().hasClass("has-error")) {
                    item.parent().removeClass("has-error");
                }
            } else {
                var item = $("#" + id);
                item.parent().addClass("has-error");
                if (item.parent().hasClass("has-success")) {
                    item.parent().removeClass("has-success");
                }
            }
        }
    };
    return DataSourceUtil;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2014-12-26
 * Time: 下午05:59:26
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", [ "jquery-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var InputUtil = {
        checkInputFileNameNotContainExt: function(id, maxLength) {
            //文件名不能包含后缀
            var flag = this.checkInputMatchMaxLength(id, maxLength);
            var value = $("#" + id).val();
            //
            if (flag) {
                if (value.indexOf(".") > -1) {
                    var errTip = "日志保存路径不能含有后缀名";
                    flag = this.errInput(id, errTip);
                } else {
                    flag = this.successInput(id);
                }
            }
            return flag;
        },
        checkInputMatchRegularCanNull: function(id, maxLength, regular, errTip) {
            //输入框匹配正则，且可为空
            var value = $.trim($("#" + id).val());
            if (value.length == 0) {
                //return this.successInput(id) ;
                this.clearInput(id);
                //没有输入的直接不报错即可
                return true;
            } else {
                var flag = this.checkMaxLengthValid(id, maxLength);
                if (flag) {
                    flag = this.checkMatchRegular(id, regular, errTip);
                }
                return flag;
            }
        },
        checkInputMatchRegularAndNotNull: function(id, maxLength, regular, errTip) {
            //输入框匹配正则，不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkMatchRegular(id, regular, errTip);
            }
            return flag;
        },
        checkInputMatchPort: function(id) {
            //输入框是否符合端口，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            if (flag) {
                var $curObj = $("#" + id);
                var value = $curObj.val();
                var portNum = parseInt(value);
                if (portNum < 1024 || portNum > 65535) {
                    var errTip = "端口应为1024~65535之间的数字";
                    flag = this.errInput(id, errTip);
                } else {
                    flag = this.successInput(id);
                }
            }
            return flag;
        },
        checkInputMatchIP: function(id) {
            //输入框是否满足IP格式，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsIP(id);
            }
            return flag;
        },
        checkInputMatchPositiveIntegerAndMaxLengthCanNull: function(id, maxLength) {
            //正整数长度有限，可为空
            var val = $.trim($("#" + id).val());
            if (val.length == 0) {
                this.clearInput(id);
                return true;
            } else {
                var flag = this.checkMaxLengthValid(id, maxLength);
                if (flag) {
                    flag = this.checkIsPositiveInteger(id);
                }
                return flag;
            }
        },
        checkInputMatchPositiveIntegerAndMaxLength: function(id, maxLength) {
            //正整数且长度有限，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            return flag;
        },
        checkInputMatchIntegerAndMaxLength: function(id, maxLength) {
            //正数且长度有限，且不能为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkInteger(id);
            }
            return flag;
        },
        checkInputMatchInt_MinNum__MaxNum: function(id, minNum, maxNum) {
            //正整数且长度有限，且不能为空//且最大最小值范围
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsPositiveInteger(id);
            }
            if (flag) {
                var $curObj = $("#" + id);
                var value = $curObj.val();
                var num = parseInt(value);
                if (num >= minNum && num <= maxNum) {
                    flag = this.successInput(id);
                } else {
                    var errTip = "正整数范围[" + minNum + "-" + maxNum + "]";
                    flag = this.errInput(id, errTip);
                }
            }
            return flag;
        },
        checkInputMatchNumAndMaxLength: function(id, maxLength) {
            //输入框符合数字，长度有限，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            if (flag) {
                flag = this.checkIsNum(id);
            }
            return flag;
        },
        checkInputMatchMaxLengthCanNull: function(id, maxLength) {
            //输入框符合最大长度，可为空
            var val = $.trim($("#" + id).val());
            var flag = true;
            if (val.length > 0) {
                flag = this.checkMaxLengthValid(id, maxLength);
            } else {
                this.clearInput(id);
            }
            return flag;
        },
        checkInputMatchMaxLength: function(id, maxLength) {
            //输入框符合最大长度，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkMaxLengthValid(id, maxLength);
            }
            return flag;
        },
        checkInputMatchGoodLength: function(id, minLength, maxLength) {
            //输入框符合长度，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkGoodLengthValid(id, minLength, maxLength);
            }
            return flag;
        },
        checkInputMatchIsNotNegativeAndNotNull: function(id) {
            //输入框符合长度，且不为空
            var flag = this.checkNotNull(id);
            if (flag) {
                flag = this.checkIsNotNegativeInteger(id);
            }
            return flag;
        },
        checkInteger: function(id) {
            //正数校验，可以为0
            var value = $("#" + id).val();
            var reg1 = /^\d+$/;
            var flag = reg1.test(value);
            if (flag) {
                this.successInput(id);
            } else {
                var errTip = "只能输入正数";
                this.errInput(id, errTip);
            }
            return flag;
        },
        checkIsPositiveInteger: function(id) {
            var $curObj = $("#" + id);
            var value = $.trim($curObj.val());
            var reg1 = /^[0-9]*[1-9][0-9]*$/;
            if (!reg1.test(value)) {
                var errTip = "只能输入正整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsNum: function(id) {
            var $curObj = $("#" + id);
            var value = $.trim($curObj.val());
            if (isNaN(value) || value.indexOf(".") > -1) {
                var errTip = "只能输入整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsNumValue: function(id, value) {
            if (isNaN(value) || value.indexOf(".") > -1) {
                var errTip = "只能输入整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsIP: function(id) {
            var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            var errTip = "IP格式不合法";
            var flag = this.checkMatchRegular(id, regular, errTip);
            return flag;
        },
        checkGoodString: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            var regular = "^\\w+$";
            if (!val.match(regular)) {
                var errTip = "含有非法字符(只能含有字母、整数、下划线)";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkMatchRegular: function(id, regular, errTip) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (!val.match(regular)) {
                var errTip = "格式不符合要求(" + errTip + ")";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkMatchRegularValue: function(id, regular, errTip, value) {
            if (!value.match(regular)) {
                var errTip = "格式不符合要求(" + errTip + ")";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkGoodLengthValid: function(id, minLength, maxLength) {
            //长度范围内检查,如:[5-10]位
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length > maxLength) {
                var errTip = "最大允许输入" + maxLength + "位";
                return this.errInput(id, errTip);
            } else if (val.length < minLength) {
                var errTip = "最小允许输入" + minLength + "位";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkMaxLengthValid: function(id, maxLength) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length > maxLength) {
                var errTip = "最大允许输入" + maxLength + "位";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkNotNull: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            if (val.length == 0) {
                this.errInput(id, "不能为空");
            } else {
                return this.successInput(id);
            }
        },
        checkStrongPassword: function(id) {
            var $curObj = $("#" + id);
            var val = $.trim($curObj.val());
            var result = false;
            var str0 = /[a-z]/g;
            //小写字母
            var str1 = /[A-Z]/g;
            //大写字母
            var num = /[0-9]/g;
            //数字
            var other = /[\x21-\x2f\x3a-\x40\x5b-\x60\x7b-\x7e]/g;
            //特殊字符
            var all = /^[\x21-\x7e]{8,20}$/g;
            //强密码条件
            var i = 4;
            if (all.test(val)) {
                if (!str0.test(val)) i--;
                if (!str1.test(val)) i--;
                if (!num.test(val)) i--;
                if (!other.test(val)) i--;
                if (i >= 3) {
                    return this.successInput(id);
                } else {
                    return this.errInput(id, "密码应同时包含大小写字母、数字、特殊字符中的至少三种！");
                }
            }
            return this.errInput(id, "密码长度应该为8-20位");
        },
        checkIpAndPortInArray: function(id, array, errTip) {
            var $curObj = $("#" + id);
            var flag = true;
            var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5]):([0-9]|[1-9]\d|[1-9]\d{2}|[1-9]\d{3}|[1-5]\d{4}|6[0-4]\d{3}|65[0-4]\d{2}|655[0-2]\d|6553[0-5])$/;
            for (i = 0; i < array.length; i++) {
                if (!array[i].match(regular)) {
                    var errTip = "格式不符合要求(" + errTip + ")";
                    return this.errInput(id, errTip);
                }
            }
            return this.successInput(id);
        },
        checkEmail: function(id) {
            var $obj = $("#" + id);
            var patten = new RegExp(/^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]+$/);
            var email = $.trim($obj.val());
            var flag = patten.test(email);
            var errTip = "邮箱格式有误";
            if (flag) {
                this.successInput(id);
            } else {
                this.errInput(id, errTip);
            }
            return flag;
        },
        checkIsNotNegativeInteger: function(id) {
            var $curObj = $("#" + id);
            var value = $.trim($curObj.val());
            var reg1 = /^\d+$/;
            if (!reg1.test(value)) {
                var errTip = "只能输入非负整数";
                return this.errInput(id, errTip);
            } else {
                return this.successInput(id);
            }
        },
        checkIsGreaterThanNum: function(id, num) {
            var value = parseInt($("#" + id).val());
            if (value > num) {
                return this.successInput(id);
            } else {
                var errTip = "填入数据应该大于" + num;
                return this.errInput(id, errTip);
            }
        },
        checkIsLessThanNum: function(id, num) {
            var value = parseInt($("#" + id).val());
            if (value < num) {
                return this.successInput(id);
            } else {
                var errTip = "填入数据应该小于" + num;
                return this.errInput(id, errTip);
            }
        },
        checkIsGreaterThanOrEqualNum: function(id, num) {
            var value = parseInt($("#" + id).val());
            if (value >= num) {
                return this.successInput(id);
            } else {
                var errTip = "填入数据不能小于" + num;
                return this.errInput(id, errTip);
            }
        },
        checkIsLessThanOrEqualNum: function(id, num) {
            var value = parseInt($("#" + id).val());
            if (value <= num) {
                return this.successInput(id);
            } else {
                var errTip = "填入数据不能大于" + num;
                return this.errInput(id, errTip);
            }
        },
        errInput: function(id, errTip) {
            var $obj = $("#" + id);
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            if ($div.hasClass("has-success")) {
                $div.removeClass("has-success");
                $tip.removeClass("text-success");
            }
            if (!$div.hasClass("has-error")) {
                $div.addClass("has-error");
                $tip.addClass("text-danger");
            }
            $tip.html(errTip);
            $obj.focus();
            return false;
        },
        checkServerAndPortList: function(id) {
            var list = $.trim($("#" + id).val());
            var flag = true;
            var serverPortList = list.split(" ");
            for (var i = 0; i < serverPortList.length; i++) {
                if (flag) {
                    flag = this.checkServerAndPort_Value(id, serverPortList[i]);
                }
            }
            return flag;
        },
        checkServerAndPort_Value: function(id, value) {
            var tempList = value.split(":");
            if (tempList.length == 2) {
                var prefix = tempList[0];
                var postfix = tempList[1];
                var flag = this.checkIsIPs(id, prefix);
                if (flag) {
                    flag = this.checkInputMatchPort1(id, postfix);
                }
                return flag;
            } else {
                this.errInput(id, "服务器列表格式不正确");
                return false;
            }
        },
        checkIsIPs: function(id, value) {
            var regular = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            var errTip = "IP格式不合法";
            var flag = this.checkMatchRegularValue(id, regular, errTip, value);
            return flag;
        },
        checkInputMatchPort1: function(id, value) {
            //输入框是否符合端口，且不为空
            var portNum = parseInt(value);
            var flag = this.checkIsNumValue(id, value);
            if (flag) {
                if (portNum < 1024 || portNum > 65535) {
                    var errTip = "端口应为1024~65535之间的数字";
                    flag = this.errInput(id, errTip);
                } else {
                    flag = this.successInput(id);
                }
            }
            return flag;
        },
        successInput: function(id) {
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            if ($div.hasClass("has-error")) {
                $div.removeClass("has-error");
                $tip.removeClass("text-danger");
            }
            if (!$div.hasClass("has-success")) {
                $div.addClass("has-success");
                $tip.addClass("text-success");
            }
            //$tip.html("输入成功") ;
            $tip.html("");
            return true;
        },
        clearInput: function(id) {
            var $div = $("#" + id + "Div");
            var $tip = $("#" + id + "Tip");
            $div.removeClass("has-error").removeClass("has-success");
            $tip.removeClass("text-danger").removeClass("text-success");
            $tip.html("");
        }
    };
    return InputUtil;
});

define("travsky/jcf/1.0.0/model/dataSource/group_dataSource_deploy_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceDeployModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/dataSource/groupDeployDataSource.action",
        defaults: {
            dataSourceName: "",
            URL: "",
            userName: "",
            password: "",
            driverClassName: ""
        },
        parse: function(response) {
            this.flag = response.flag;
            this.message = response.message;
            return _.extend(response);
        }
    });
    return GroupDataSourceDeployModel;
});

define("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var GroupDataSourceModel = require("travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug");
    var GroupDataSourceCollection = Backbone.Collection.extend({
        model: GroupDataSourceModel,
        url: "/" + appName + "/dataSource/searchAllServerByGroup.action",
        parse: function(response) {
            this.flag = response.flag;
            this.serverList = response.serverList;
            return _.extend(response.serverList);
        },
        selectAll: function() {
            this.each(function(server) {
                server.set("selected", true);
            });
        },
        clearSelectAll: function() {
            this.each(function(server) {
                server.set("selected", false);
            });
        },
        selectedServer: function() {
            return this.filter(function(server) {
                return server.isSelected();
            });
        },
        isAllSelected: function() {
            if (this.selectedServer().length == 0) {
                return false;
            }
            return this.selectedServer().length == this.length;
        }
    });
    return GroupDataSourceCollection;
});

define("travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceServerModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: function() {
            return {
                selected: false
            };
        },
        isSelected: function() {
            return this.get("selected") == true;
        }
    });
    return GroupDataSourceServerModel;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDeployDataSource-debug.tpl", [], '<div id="groupDataSourceServerList">\n\n</div>\n<div id="addDataSource">\n	<div class="line">\n		<div class="content">\n			<label>数据源名称：</label>\n		</div>\n		<div class="value">\n			<input id="dataSourceName" name="dataSourceName" class="length form-control" type="text" value="" placeholder="必填项：字母、数字、下划线、#">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="dataSourceNameTip">&nbsp;</span>\n		</div>\n		<div class="content">\n			<label>用户名：</label>\n		</div>\n		<div class="value">\n			<input id="userName" name="userName" class="length form-control" type="text" value="" placeholder="必填项：字母、数字、下划线、#">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="userNameTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>密码： </label>\n		</div>\n		<div class="value">\n			<input id="password" name="password" class="length form-control" type="password" placeholder="必填项">\n	  	</div>\n	  	<div class="warn">\n	  		<span class = "text-danger">*</span>\n	  		<span id = "passwordTip"></span>\n	  	</div>\n	  	<div class="content">\n	  		<label>Url：</label>\n	  	</div>\n		<div class="value">\n			<input type="text" id="URL" name="URL" class="length form-control" type="text" value="" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class = "text-danger">*</span>\n			<span id = "URLTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>驱动：</label>\n		</div>\n		<div class="value">\n			<select id="driverClassName" name="driverClassName" class="length" autocomplete="off">\n				<option value="com.ibm.db2.jcc.DB2Driver">com.ibm.db2.jcc.DB2Driver</option>\n				<option value="oracle.jdbc.OracleDriver">oracle.jdbc.OracleDriver</option>\n				<option value="org.postgresql.Driver">org.postgresql.Driver</option>\n				<option value="com.mysql.jdbc.Driver">com.mysql.jdbc.Driver</option>    		\n			</select>\n		</div>\n		<div class="warn">\n			<span id="driverClassNameTip">&nbsp;</span>\n		</div>\n	</div>\n	<div>\n		<div class="col-sm-offset-4">\n			<button id="save" class="btn btn-primary" type="button">部署</button>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_server_model-debug", "travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerItem_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceServerCollection = require("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_server_collection-debug");
    var GroupDeployDataSourceTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceServerList-debug.tpl");
    var GroupDataSourceServerItemView = require("travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerItem_view-debug");
    var GroupDeployDataSourceView = Backbone.View.extend({
        el: "#groupDataSourceServerList",
        template: _.template(GroupDeployDataSourceTemplate),
        events: {
            "click #allSelected": "toggleSelectAll"
        },
        initialize: function(options) {
            this.options = options || {};
            this.groupId = options.groupId;
            this.serverList = options.collection;
            this.serverList.bind("reset", this.addAllGroupServers, this);
            this.serverList.bind("change:selected", this.isSelectAll, this);
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        },
        addGroupServer: function(server) {
            var group_dataSource_server_item_view = new GroupDataSourceServerItemView({
                model: server,
                groupId: this.groupId
            });
            this.$el.find("tbody").append(group_dataSource_server_item_view.render());
            this.views.push(group_dataSource_server_item_view);
        },
        addAllGroupServers: function() {
            var _this = this;
            //遍历views数组，并对每个view调用Backbone的remove
            _.each(this.views, function(view) {
                view.remove().off();
            });
            //清空views数组，此时旧的view就变成没有任何被引用的不可达对象了
            //垃圾回收器会回收它们
            this.views = [];
            this.serverList.each(function(model) {
                _this.addGroupServer(model);
            });
        },
        toggleSelectAll: function() {
            var self = this;
            if (self.serverList.isAllSelected()) {
                this.serverList.clearSelectAll();
            } else {
                this.serverList.selectAll();
            }
        },
        isSelectAll: function() {
            var self = this;
            if (self.serverList.isAllSelected()) {
                this.$el.find("#allSelected").prop("checked", true);
            } else {
                this.$el.find("#allSelected").removeAttr("checked");
            }
        }
    });
    return GroupDeployDataSourceView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceServerList-debug.tpl", [], '<table id="serverList" class="table table-bordered">\n	<thead>\n		<tr>\n			<th><input id="allSelected" type="checkBox"/></th>\n			<th>服务器名称</th>\n			<th>服务器类型</th>\n			<th>服务器IP</th>\n	    	<th>服务器管理端口</th>\n	  	</tr>\n	</thead>\n	<tbody>\n	</tbody>\n</table>');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceServerItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDeployDataSourceServerItemTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceServerItem-debug.tpl");
    var allSelectedItems = [];
    var GroupDeployDataSourceServerItemView = Backbone.View.extend({
        template: _.template(GroupDeployDataSourceServerItemTemplate),
        tagName: "tr",
        events: {
            "click .select": "toggleSelect"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.model.bind("change:selected", this.modelChange, this);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        },
        toggleSelect: function(e) {
            var self = this;
            self.model.set("selected", !self.model.get("selected"));
        },
        modelChange: function() {
            var self = this;
            if (self.model.hasChanged("selected")) {
                self.$el.toggleClass("active", self.model.isSelected());
                if (self.model.isSelected()) {
                    self.$(".select").prop("checked", self.model.isSelected());
                } else {
                    self.$(".select").removeAttr("checked");
                }
                var serverId = self.model.get("serverId");
                var index = allSelectedItems.indexOf(serverId);
                if (self.model.isSelected() && index < 0) {
                    allSelectedItems.push(serverId);
                }
                if (!self.model.isSelected() && index >= 0) {
                    allSelectedItems.splice(index, 1);
                }
            }
        }
    });
    return GroupDeployDataSourceServerItemView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceServerItem-debug.tpl", [], '<td><input class="select" type="checkbox"></td>\n<td><%=serverName%></td>\n<td>JCF服务器</td>\n<td><%=serverIp%></td>\n<td><%=serverManagePort%></td>\n');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var DataSourceUtil = require("travsky/jcf/1.0.0/util/DataSourceUtil-debug");
    var GroupDataSourceConfigTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceConfig-debug.tpl");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var GroupDataSourceConfigView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(GroupDataSourceConfigTemplate),
        events: {
            "blur #userName": "checkUserName",
            "blur #password": "checkPassword",
            "blur #URL": "checkURL",
            "blur #maxActive": "checkMaxActive",
            "blur #maxWait": "checkMaxWait",
            "blur #maxIdle": "checkMaxIdle",
            "blur #minIdle": "checkMinIdle",
            "blur #initialSize": "checkInitialSize",
            "click #save": "saveConfig"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.groupId = options.queryString.groupId;
            this.listenTo(this.model, "change", this.render);
        },
        render: function() {
            this.$el.html(this.template(this.model.toJSON()));
            return this;
        },
        saveConfig: function() {
            if (this.checkForm()) {
                var self = this;
                var userName = self.$el.find("#userName").val();
                var password = self.$el.find("#password").val();
                var URL = self.$el.find("#URL").val();
                var driverClassName = self.$el.find("#driverClassName").val();
                var maxActive = self.$el.find("#maxActive").val();
                var maxWait = self.$el.find("#maxWait").val();
                var maxIdle = self.$el.find("#maxIdle").val();
                var minIdle = self.$el.find("#minIdle").val();
                var initialSize = self.$el.find("#initialSize").val();
                if (self.model.get("userName") != userName) {
                    self.model.set("userName", userName);
                }
                if (password != "") {
                    self.model.set("password", password);
                    self.model.set("passwordChanged", true);
                }
                if (self.model.get("URL") != URL) {
                    self.model.set("URL", URL);
                }
                if (self.model.get("driverClassName") != driverClassName) {
                    self.model.set("driverClassName", driverClassName);
                }
                if (self.model.get("maxActive") != maxActive) {
                    self.model.set("maxActive", maxActive);
                }
                if (self.model.get("maxWait") != maxWait) {
                    self.model.set("maxWait", maxWait);
                }
                if (self.model.get("maxIdle") != maxIdle) {
                    self.model.set("maxIdle", maxIdle);
                }
                if (self.model.get("minIdle") != minIdle) {
                    self.model.set("minIdle", minIdle);
                }
                if (self.model.get("initialSize") != initialSize) {
                    self.model.set("initialSize", initialSize);
                }
                self.model.save({
                    groupId: self.groupId
                }, {
                    success: function(model, data) {
                        if (data.flag) {
                            self.model.set("maxActive", maxActive);
                            self.model.set("maxWait", maxWait);
                            self.model.set("maxIdle", maxIdle);
                            self.model.set("minIdle", minIdle);
                            self.model.set("initialSize", initialSize);
                            data.messageList = [ "组数据源修改成功。***重启后生效***" ];
                        }
                        var globar = new GlobalView({
                            model: data
                        });
                        globar.render();
                    }
                });
            } else {
                var data = {
                    flag: "false",
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        checkUserName: function() {
            var flag = DataSourceUtil.checkUserName("userName");
            return flag;
        },
        checkPassword: function() {
            var flag = DataSourceUtil.checkPassWord("password");
            return flag;
        },
        checkURL: function() {
            var flag = DataSourceUtil.checkURL("URL");
            return flag;
        },
        checkMaxActive: function() {
            var flag = DataSourceUtil.checkMaxActive("maxActive");
            return flag;
        },
        checkMaxWait: function() {
            var flag = DataSourceUtil.checkMaxWait("maxWait");
            return flag;
        },
        checkMaxIdle: function() {
            var flag = DataSourceUtil.checkMaxIdle("maxIdle");
            return flag;
        },
        checkMinIdle: function() {
            var flag = DataSourceUtil.checkMinIdle("minIdle");
            return flag;
        },
        checkInitialSize: function() {
            var flag = DataSourceUtil.checkInitialSize("initialSize");
            return flag;
        },
        checkForm: function() {
            if (this.checkUserName() && this.checkPassword() && this.checkURL() && this.checkMaxActive() && this.checkMaxWait() && this.checkMaxIdle() && this.checkMinIdle() && this.checkInitialSize()) {
                return true;
            }
            return false;
        }
    });
    return GroupDataSourceConfigView;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceConfig-debug.tpl", [], '<div class="dataSourceConfig">\n	<div class="line">\n		<div class="content">\n			<label>服务器名称：</label>\n		</div>\n		<div class="value">\n			<input id="serverName" name="serverName" class="length readonly" type="text" value="<%=serverName%>" readonly="true">\n		</div>\n		<div class="warn">\n			<span id="dataSourceNameTip">&nbsp;</span>\n		</div>\n		<div class="content">\n			<label>用户名：</label>\n		</div>\n		<div class="value">\n			<input id="userName" name="userName" class="length form-control" type="text" value="<%=userName%>" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="userNameTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>密码： </label>\n		</div>\n		<div class="value">\n			<input id="password" name="password" class="length form-control" type="text">\n	  	</div>\n	  	<div class="warn">\n	  		<span class = "text-danger">*</span>\n	  		<span id = "passwordTip"></span>\n	  	</div>\n	  	<div class="content">\n	  		<label>Url：</label>\n	  	</div>\n		<div class="value">\n			<input id="URL" name="URL" class="length form-control" type="text" value="<%=URL%>" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class = "text-danger">*</span>\n			<span id = "URLTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>驱动：</label>\n		</div>\n		<div class="value">\n			<select id="driverClassName" name="driverClassName" class="length" autocomplete="off">\n				<option value="com.ibm.db2.jcc.DB2Driver" <%if(driverClassName=="com.ibm.db2.jcc.DB2Driver"){%>selected="selected"<%}%>>com.ibm.db2.jcc.DB2Driver</option>\n				<option value="oracle.jdbc.OracleDriver" <%if(driverClassName=="oracle.jdbc.OracleDriver"){%>selected="selected"<%}%>>oracle.jdbc.OracleDriver</option>\n				<option value="org.postgresql.Driver" <%if(driverClassName=="org.postgresql.Driver"){%>selected="selected"<%}%>>org.postgresql.Driver</option>\n				<option value="com.mysql.jdbc.Driver" <%if(driverClassName=="com.mysql.jdbc.Driver"){%>selected="selected"<%}%>>com.mysql.jdbc.Driver</option>    		\n			</select>\n		</div>\n		<div class="warn">\n			<span id="driverClassNameTip">&nbsp;</span>\n		</div>\n		<div class="content">\n			<label>最大连接数：</label>\n		</div>\n		<div class="value">\n			<input id="maxActive" name="maxActive" class="length form-control" value="<%=maxActive%>" type="text" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="maxActiveTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>最大等待连接时间：</label>\n		</div>\n		<div class="value">\n			<input id="maxWait" name="maxWait" class="length form-control" value="<%=maxWait%>" type="text" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span class = "text-info">(单位:毫秒)</span>\n			<span id="maxWaitTip"></span>\n		</div>\n		<div class="content">\n			<label>最大空闲数：</label>\n		</div>\n		<div class="value">\n			<input id="maxIdle" name="maxIdle" class="length form-control" value="<%=maxIdle%>" type="text" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="maxIdleTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>最小空闲数：</label>\n		</div>\n		<div class="value">\n			<input id="minIdle" name="minIdle" class="length form-control" value="<%=minIdle%>" type="text" placeholder="必填项">\n	  	</div>\n		<div class="warn">\n			<span class = "text-danger">*</span>\n			<span id = "minIdleTip"></span>\n		</div>\n		<div class="content">\n			<label>初始连接数：</label>\n		</div>\n		<div class="value">\n			<input id="initialSize" name="initialSize" class="length form-control" value="<%=initialSize%>" type="text" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="initialSizeTip"></span>\n		</div>\n	</div>\n	<div>\n		<div class="col-sm-offset-4">\n			<button id="save" class="btn btn-primary" type="button">保存</button>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/groupDataSourceConfigHead_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/collection/dataSource/group_dataSource_name_collection-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_name_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var GroupDataSourceNameCollection = require("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_name_collection-debug");
    var GroupDataSourceConfigHeadTemplate = require("travsky/jcf/1.0.0/template/dataSource/groupDataSourceConfigHead-debug.tpl");
    var GroupDataSourceConfigHeadView = Backbone.View.extend({
        el: "#content-header",
        template: _.template(GroupDataSourceConfigHeadTemplate),
        events: {
            "change #groupDataSourceName": "getConfig"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.queryString = options.queryString;
            this.groupId = options.queryString.groupId;
            this.dataSourceList = this.getGroupDataSourceList();
            this.dataSourceList.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                dataSourceNameList: this.dataSourceList.toJSON()
            }));
            return this;
        },
        getGroupDataSourceList: function() {
            var groupDataSourceNameCollection = new GroupDataSourceNameCollection();
            groupDataSourceNameCollection.fetch({
                data: QueryString.stringify(this.options.queryString),
                reset: true
            });
            return groupDataSourceNameCollection;
        },
        getConfig: function() {
            if ($("#groupDataSourceName").val() != "") {
                this.model.fetch({
                    data: {
                        groupId: this.groupId,
                        dsName: $("#groupDataSourceName").val()
                    }
                });
            }
        }
    });
    return GroupDataSourceConfigHeadView;
});

define("travsky/jcf/1.0.0/collection/dataSource/group_dataSource_name_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/group_dataSource_name_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var GroupDataSourceNameModel = require("travsky/jcf/1.0.0/model/dataSource/group_dataSource_name_model-debug");
    var GroupDataSourceNameCollection = Backbone.Collection.extend({
        model: GroupDataSourceNameModel,
        url: "/" + appName + "/dataSource/getGroupDataSourceNameList.action",
        parse: function(response) {
            return _.extend(response);
        }
    });
    return GroupDataSourceNameCollection;
});

define("travsky/jcf/1.0.0/model/dataSource/group_dataSource_name_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceNameModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: function() {
            return {
                dataSourceName: ""
            };
        }
    });
    return GroupDataSourceNameModel;
});

define("travsky/jcf/1.0.0/template/dataSource/groupDataSourceConfigHead-debug.tpl", [], '<div class="dataSourceConfig">\n	<div class="line">\n		<div class="content">\n			<label>组数据源名称</label>\n		</div>\n		<div class="value">\n			<select id="groupDataSourceName" name="groupDataSourceName" class="length" autocomplete="off">\n				<option></option>\n				<%for (var i = 0; i < dataSourceNameList.length; i++){%>\n					<option><%=dataSourceNameList[i].dataSourceName%></option>\n				<%}%> \n			</select>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/model/dataSource/group_dataSource_config_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var GroupDataSourceConfigModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/dataSource/groupDataSourceConfig.action",
        defaults: {
            serverName: "",
            dataSourceName: "",
            URL: "",
            userName: "",
            password: "",
            driverClassName: "",
            maxActive: 0,
            maxWait: 0,
            maxIdle: 0,
            minIdle: 0,
            initialSize: 0,
            passwordChanged: false
        },
        parse: function(response) {
            this.flag = response.flag;
            this.configData = response.configData;
            return _.extend(response.configData);
        }
    });
    return GroupDataSourceConfigModel;
});

define("travsky/jcf/1.0.0/view/dataSource/serverDataSourceList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceItem_view-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_config_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceConfig_view-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_monitor_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceMonitor_view-debug", "travsky/jcf/1.0.0/view/dataSource/tip_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var ServerDataSourceCollection = require("travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug");
    var ServerDataSourceListTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDataSourceList-debug.tpl");
    var ServerDataSourceItemView = require("travsky/jcf/1.0.0/view/dataSource/serverDataSourceItem_view-debug");
    var ServerDataSourceListView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(ServerDataSourceListTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.serverId = options.queryString.serverId;
            this.dataSourceList = this.getDataSources();
            this.dataSourceList.bind("change:restart", this.restartDataSource, this);
            this.dataSourceList.bind("change:uninstall", this.uninstallDataSource, this);
            this.dataSourceList.bind("reset", this.addAllServerDataSources, this);
            this.dataSourceList.bind("remove", this.addAllServerDataSources, this);
            this.views = [];
        },
        render: function() {
            $(this.el).html(this.template());
            return this;
        },
        addServerDataSource: function(dataSource) {
            var server_dataSource_item_view = new ServerDataSourceItemView({
                model: dataSource,
                serverId: this.serverId
            });
            this.$el.find("#dataSourceListBody").append(server_dataSource_item_view.render());
            this.views.push(server_dataSource_item_view);
        },
        addAllServerDataSources: function() {
            if (this.dataSourceList.flag == "1") {
                if (this.dataSourceList.length > 0) {
                    var _this = this;
                    //遍历views数组，并对每个view调用Backbone的remove
                    _.each(this.views, function(view) {
                        view.remove().off();
                    });
                    //清空views数组，此时旧的view就变成没有任何被引用的不可达对象了
                    //垃圾回收器会回收它们
                    this.views = [];
                    this.dataSourceList.each(function(model) {
                        _this.addServerDataSource(model);
                    });
                } else {
                    alert("当前服务器没有部署数据源");
                }
            } else if (this.dataSourceList.flag == "0") {
                alert("数据库查询异常");
            } else if (this.dataSourceList.flag == "2") {
                alert("连接异常，请查看服务器状态");
            }
        },
        getDataSources: function() {
            var server_dataSource_collection = new ServerDataSourceCollection();
            server_dataSource_collection.fetch({
                data: QueryString.stringify(this.options.queryString),
                reset: true
            });
            return server_dataSource_collection;
        },
        uninstallDataSource: function(model) {
            this.render();
            this.dataSourceList.remove(model);
        },
        restartDataSource: function(model) {
            this.render();
            this.dataSourceList.fetch({
                data: QueryString.stringify(this.options.queryString),
                reset: true
            });
        }
    });
    return ServerDataSourceListView;
});

define("travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var ServerDataSourceModel = require("travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug");
    var ServerDataSourceCollection = Backbone.Collection.extend({
        model: ServerDataSourceModel,
        url: "/" + appName + "/dataSource/serverDataSourceList.action",
        parse: function(response) {
            this.flag = response.flag;
            this.dataSourceList = response.dataSourceList;
            return _.extend(response.dataSourceList);
        }
    });
    return ServerDataSourceCollection;
});

define("travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerDataSourceModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: function() {
            return {
                showDataSourceConfig: false,
                showDataSourceMonitor: false,
                restart: false,
                connected: false,
                confirmRestart: false,
                confirmUndeploy: false
            };
        },
        isShowConfig: function() {
            return this.get("showDataSourceConfig") == true;
        },
        isShowMonitor: function() {
            return this.get("showDataSourceMonitor") == true;
        },
        isConnected: function() {
            return this.get("connected") == true;
        }
    });
    return ServerDataSourceModel;
});

define("travsky/jcf/1.0.0/template/dataSource/serverDataSourceList-debug.tpl", [], '<div id="dataSourceListHead" class="dsList">\n	<div class="dsName">数据源名称</div>\n	<div class="dsURL">URL</div>\n    <div class="dsUserName">用户名</div>\n    <div class="dsInitialSize">初始连接数</div>\n    <div class="dsmaxWait">最大等待时间</div>\n    <div class="dsmaxIdle">最大空闲数</div>\n    <div class="dsminIdle">最小空闲数</div>\n    <div class="dsconfig">配置</div>\n    <div class="dsundeploy">卸载</div>\n    <div class="dsrestart">重启</div>\n    <div class="dsdetail">查看</div>\n</div>\n<div id="dataSourceListBody" class="dsList">\n	\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/serverDataSourceItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_config_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceConfig_view-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_monitor_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverDataSourceMonitor_view-debug", "travsky/jcf/1.0.0/view/dataSource/tip_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var DataSourceAuthCheckUtil = require("travsky/jcf/1.0.0/util/DataSourceAuthCheckUtil-debug");
    var ServerDataSourceConfigModel = require("travsky/jcf/1.0.0/model/dataSource/server_dataSource_config_model-debug");
    var ServerDataSourceConfigView = require("travsky/jcf/1.0.0/view/dataSource/serverDataSourceConfig_view-debug");
    var ServerDataSourceMonitorModel = require("travsky/jcf/1.0.0/model/dataSource/server_dataSource_monitor_model-debug");
    var ServerDataSourceMonitorView = require("travsky/jcf/1.0.0/view/dataSource/serverDataSourceMonitor_view-debug");
    var ServerDataSourceItemTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDataSourceItem-debug.tpl");
    var TipView = require("travsky/jcf/1.0.0/view/dataSource/tip_view-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var ServerDataSourceItemView = Backbone.View.extend({
        template: _.template(ServerDataSourceItemTemplate),
        tagName: "div",
        className: "dsList",
        events: {
            "click .dsconfig a": "serverDataSourceConfig",
            "click .dsundeploy a": "showServerDataSourceUndeployView",
            "click .dsrestart a": "showServerDataSourceRestartView",
            "click .dsdetail a": "serverDataSourceDetail",
            "click #cancel": "closeConfig",
            "click .modal-footer .ok": "confirm",
            "click .modal-footer .cancel": "cancel"
        },
        initialize: function(options) {
            this.model = options.model;
            this.serverId = options.serverId;
            this.listenTo(this.model, "change", this.render);
            this.listenTo(this.model, "change:confirmRestart", this.serverDataSourceRestart);
            this.listenTo(this.model, "change:confirmUndeploy", this.serverDataSourceUndeploy);
            this.dataSourceConfigAuth = DataSourceAuthCheckUtil.getServerDataSourceConfigAuth();
            this.dataSourceUndeployAuth = DataSourceAuthCheckUtil.getServerDataSourceUninstallAuth();
            this.dataSourceRestartAuth = DataSourceAuthCheckUtil.getServerDataSourceRestartAuth();
            this.dataSourceDetailViewAuth = DataSourceAuthCheckUtil.getServerDataSourceDetailViewAuth();
        },
        render: function() {
            return this.$el.html(this.template({
                model: this.model.toJSON(),
                dataSourceConfigAuth: this.dataSourceConfigAuth,
                dataSourceUndeployAuth: this.dataSourceUndeployAuth,
                dataSourceRestartAuth: this.dataSourceRestartAuth,
                dataSourceDetailViewAuth: this.dataSourceDetailViewAuth
            }));
        },
        serverDataSourceConfig: function(e) {
            e.preventDefault();
            if (this.model.isShowConfig()) {
                this.model.set("showDataSourceConfig", false);
            } else {
                this.model.set("showDataSourceConfig", true);
                this.model.set("showDataSourceMonitor", false);
                var dataSourceConfig = new ServerDataSourceConfigModel();
                dataSourceConfig.parentView = this;
                var server_dataSource_config_view = new ServerDataSourceConfigView({
                    model: dataSourceConfig,
                    serverId: this.serverId,
                    item: this.model
                });
                dataSourceConfig.fetch({
                    data: {
                        serverId: this.serverId,
                        dsName: this.model.get("dataSourceName")
                    }
                });
                this.$el.append(server_dataSource_config_view.render());
            }
        },
        showServerDataSourceUndeployView: function() {
            var tipView = new TipView({
                headerMessage: "卸载数据源",
                bodyMessage: "确定要卸载数据源" + this.model.get("dataSourceName") + "么？",
                model: this.model,
                type: "undeploy"
            });
            this.$el.append(tipView.render());
            tipView.show();
        },
        serverDataSourceUndeploy: function() {
            var self = this;
            var jsonParam = {
                serverId: this.serverId,
                dsName: this.model.get("dataSourceName")
            };
            var uninstallDSByServerURL = "/" + jcfManager.appName + "/dataSource/uninstallDSByServer.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(uninstallDSByServerURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("uninstall", true);
                    data.messageList = [ "数据源" + self.model.get("dataSourceName") + "卸载成功" ];
                } else {
                    data.messageList = [ "数据源" + self.model.get("dataSourceName") + "卸载失败" ];
                }
                var globar = new GlobalView({
                    model: data
                });
                globar.render();
            });
        },
        showServerDataSourceRestartView: function(e) {
            var tipView = new TipView({
                headerMessage: "重启数据源",
                bodyMessage: "确定要重启数据源" + this.model.get("dataSourceName") + "么？",
                model: this.model,
                type: "restart"
            });
            this.$el.append(tipView.render());
            tipView.show();
        },
        serverDataSourceRestart: function() {
            var self = this;
            var jsonParam = {
                serverId: this.serverId,
                dsName: this.model.get("dataSourceName")
            };
            var restartServerDSURL = "/" + jcfManager.appName + "/dataSource/restartDSByServer.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(restartServerDSURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                if (data.flag) {
                    self.model.set("restart", true);
                    data.messageList = [ "数据源" + self.model.get("dataSourceName") + "重启成功" ];
                } else {
                    data.messageList = [ "数据源" + self.model.get("dataSourceName") + "重启失败" ];
                }
                var globar = new GlobalView({
                    model: data
                });
                globar.render();
            });
        },
        serverDataSourceDetail: function() {
            if (this.model.isShowMonitor()) {
                this.model.set("showDataSourceMonitor", false);
                this.render();
            } else {
                this.render();
                this.model.set("showDataSourceMonitor", true);
                this.model.set("showDataSourceConfig", false);
                var dataSourceMonitor = new ServerDataSourceMonitorModel();
                var server_dataSource_monitor_view = new ServerDataSourceMonitorView({
                    model: dataSourceMonitor,
                    serverId: this.serverId
                });
                dataSourceMonitor.fetch({
                    data: {
                        serverId: this.serverId,
                        dsName: this.model.get("dataSourceName")
                    }
                });
                this.$el.append(server_dataSource_monitor_view.render());
            }
        }
    });
    return ServerDataSourceItemView;
});

define("travsky/jcf/1.0.0/model/dataSource/server_dataSource_config_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerDataSourceConfigModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/dataSource/serverDataSourceConfig.action",
        defaults: {
            dataSourceName: "",
            URL: "",
            userName: "",
            password: "",
            driverClassName: "",
            maxActive: 0,
            maxWait: 0,
            maxIdle: 0,
            minIdle: 0,
            initialSize: 0,
            passwordChanged: false
        },
        parse: function(response) {
            this.flag = response.flag;
            this.configData = response.configData;
            return _.extend(response.configData);
        }
    });
    return ServerDataSourceConfigModel;
});

define("travsky/jcf/1.0.0/view/dataSource/serverDataSourceConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceUtil = require("travsky/jcf/1.0.0/util/DataSourceUtil-debug");
    var ServerDataSourceConfigTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDataSourceConfig-debug.tpl");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var ServerDataSourceConfigView = Backbone.View.extend({
        template: _.template(ServerDataSourceConfigTemplate),
        tagName: "div",
        className: "dataSourceConfig",
        events: {
            "blur #userName": "checkUserName",
            "blur #password": "checkPassword",
            "blur #URL": "checkURL",
            "blur #maxActive": "checkMaxActive",
            "blur #maxWait": "checkMaxWait",
            "blur #maxIdle": "checkMaxIdle",
            "blur #minIdle": "checkMinIdle",
            "blur #initialSize": "checkInitialSize",
            "click #save": "saveConfig",
            "click #cancel": "cancelConfig"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.serverId = options.serverId;
            this.item = options.item;
            this.listenTo(this.model, "change", this.render);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        },
        saveConfig: function() {
            if (this.checkForm()) {
                var self = this;
                var userName = self.$el.find("#userName").val();
                var password = self.$el.find("#password").val();
                var URL = self.$el.find("#URL").val();
                var driverClassName = self.$el.find("#driverClassName").val();
                var maxActive = self.$el.find("#maxActive").val();
                var maxWait = self.$el.find("#maxWait").val();
                var maxIdle = self.$el.find("#maxIdle").val();
                var minIdle = self.$el.find("#minIdle").val();
                var initialSize = self.$el.find("#initialSize").val();
                if (self.model.get("userName") != userName) {
                    self.model.set("userName", userName);
                }
                if (password != "") {
                    self.model.set("password", password);
                    self.model.set("passwordChanged", true);
                }
                if (self.model.get("URL") != URL) {
                    self.model.set("URL", URL);
                }
                if (self.model.get("driverClassName") != driverClassName) {
                    self.model.set("driverClassName", driverClassName);
                }
                if (self.model.get("maxActive") != maxActive) {
                    self.model.set("maxActive", maxActive);
                }
                if (self.model.get("maxWait") != maxWait) {
                    self.model.set("maxWait", maxWait);
                }
                if (self.model.get("maxIdle") != maxIdle) {
                    self.model.set("maxIdle", maxIdle);
                }
                if (self.model.get("minIdle") != minIdle) {
                    self.model.set("minIdle", minIdle);
                }
                if (self.model.get("initialSize") != initialSize) {
                    self.model.set("initialSize", initialSize);
                }
                self.model.save({
                    serverId: self.serverId
                }, {
                    success: function(model, data) {
                        if (data.flag == "1") {
                            self.item.set("showDataSourceConfig", false);
                            self.item.set("maxActive", maxActive);
                            self.item.set("maxWait", maxWait);
                            self.item.set("maxIdle", maxIdle);
                            self.item.set("minIdle", minIdle);
                            self.item.set("initialSize", initialSize);
                            data.messageList = [ "数据源配置成功。***重启后生效***" ];
                        } else if (data.flag == "2") {
                            data.messageList = [ "连接异常，数据源配置失败" ];
                        } else {
                            data.messageList = [ "未知异常，数据源配置失败" ];
                        }
                        var globar = new GlobalView({
                            model: data
                        });
                        globar.render();
                    }
                });
            } else {
                var data = {
                    flag: "false",
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        cancelConfig: function() {
            this.item.set("showDataSourceConfig", false);
        },
        checkUserName: function() {
            var flag = DataSourceUtil.checkUserName("userName");
            return flag;
        },
        checkPassword: function() {
            var flag = DataSourceUtil.checkPassWord("password");
            return flag;
        },
        checkURL: function() {
            var flag = DataSourceUtil.checkURL("URL");
            return flag;
        },
        checkMaxActive: function() {
            var flag = DataSourceUtil.checkMaxActive("maxActive");
            return flag;
        },
        checkMaxWait: function() {
            var flag = DataSourceUtil.checkMaxWait("maxWait");
            return flag;
        },
        checkMaxIdle: function() {
            var flag = DataSourceUtil.checkMaxIdle("maxIdle");
            return flag;
        },
        checkMinIdle: function() {
            var flag = DataSourceUtil.checkMinIdle("minIdle");
            return flag;
        },
        checkInitialSize: function() {
            var flag = DataSourceUtil.checkInitialSize("initialSize");
            return flag;
        },
        checkForm: function() {
            if (this.checkUserName() && this.checkPassword() && this.checkURL() && this.checkMaxActive() && this.checkMaxWait() && this.checkMaxIdle() && this.checkMinIdle() && this.checkInitialSize()) {
                return true;
            }
            return false;
        }
    });
    return ServerDataSourceConfigView;
});

define("travsky/jcf/1.0.0/template/dataSource/serverDataSourceConfig-debug.tpl", [], '<div class="line">\n	<div class="content">\n		<label>数据源名称：</label>\n	</div>\n	<div class="value">\n		<input id="dataSourceName" name="dataSourceName" class="length readonly" type="text" value="<%=dataSourceName%>" readonly="true">\n	</div>\n	<div class="warn">\n		<span id="dataSourceNameTip">&nbsp;</span>\n	</div>\n	<div class="content">\n		<label>用户名：</label>\n	</div>\n	<div class="value">\n		<input id="userName" name="userName" class="length form-control" type="text" value="<%=userName%>" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class="text-danger">*</span>\n		<span id="userNameTip"></span>\n	</div>\n</div>\n<div class="line">\n	<div class="content">\n		<label>密码： </label>\n	</div>\n	<div class="value">\n		<input id="password" name="password" class="length form-control" type="text">\n  	</div>\n  	<div class="warn">\n  		<span class = "text-danger">*</span>\n  		<span id = "passwordTip"></span>\n  	</div>\n  	<div class="content">\n  		<label>Url：</label>\n  	</div>\n	<div class="value">\n		<input id="URL" name="URL" class="length form-control" type="text" value="<%=URL%>" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class = "text-danger">*</span>\n		<span id = "URLTip"></span>\n	</div>\n</div>\n<div class="line">\n	<div class="content">\n		<label>驱动：</label>\n	</div>\n	<div class="value">\n		<select id="driverClassName" name="driverClassName" class="length" autocomplete="off">\n			<option value="com.ibm.db2.jcc.DB2Driver" <%if(driverClassName=="com.ibm.db2.jcc.DB2Driver"){%>selected="selected"<%}%>>com.ibm.db2.jcc.DB2Driver</option>\n			<option value="oracle.jdbc.OracleDriver" <%if(driverClassName=="oracle.jdbc.OracleDriver"){%>selected="selected"<%}%>>oracle.jdbc.OracleDriver</option>\n			<option value="org.postgresql.Driver" <%if(driverClassName=="org.postgresql.Driver"){%>selected="selected"<%}%>>org.postgresql.Driver</option>\n			<option value="com.mysql.jdbc.Driver" <%if(driverClassName=="com.mysql.jdbc.Driver"){%>selected="selected"<%}%>>com.mysql.jdbc.Driver</option>    		\n		</select>\n	</div>\n	<div class="warn">\n		<span id="driverClassNameTip">&nbsp;</span>\n	</div>\n	<div class="content">\n		<label>最大连接数：</label>\n	</div>\n	<div class="value">\n		<input id="maxActive" name="maxActive" class="length form-control" value="<%=maxActive%>" type="text" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class="text-danger">*</span>\n		<span id="maxActiveTip"></span>\n	</div>\n</div>\n<div class="line">\n	<div class="content">\n		<label>最大等待连接时间：</label>\n	</div>\n	<div class="value">\n		<input id="maxWait" name="maxWait" class="length form-control" value="<%=maxWait%>" type="text" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class="text-danger">*</span>\n		<span class = "text-info">(单位:毫秒)</span>\n		<span id="maxWaitTip"></span>\n	</div>\n	<div class="content">\n		<label>最大空闲数：</label>\n	</div>\n	<div class="value">\n		<input id="maxIdle" name = "maxIdle" class="length form-control" value="<%=maxIdle%>" type="text" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class="text-danger">*</span>\n		<span id="maxIdleTip"></span>\n	</div>\n</div>\n<div class="line">\n	<div class="content">\n		<label>最小空闲数：</label>\n	</div>\n	<div class="value">\n		<input id="minIdle" name="minIdle" class="length form-control" value="<%=minIdle%>" type="text" placeholder="必填项">\n  	</div>\n	<div class="warn">\n		<span class = "text-danger">*</span>\n		<span id = "minIdleTip"></span>\n	</div>\n	<div class="content">\n		<label>初始连接数：</label>\n	</div>\n	<div class="value">\n		<input id="initialSize" name="initialSize" class="length form-control" value="<%=initialSize%>" type="text" placeholder="必填项">\n	</div>\n	<div class="warn">\n		<span class="text-danger">*</span>\n		<span id="initialSizeTip"></span>\n	</div>\n</div>\n<div>\n	<div class="col-sm-offset-4">\n		<button id="save" class="btn btn-primary" type="button">保存</button>\n		<button id="cancel" class="btn btn-primary" type="button">取消</button>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/model/dataSource/server_dataSource_monitor_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerDataSourceMonitorModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/dataSource/detailDSByServer.action",
        defaults: {
            activeNum: 0,
            idleNum: 0
        },
        parse: function(response) {
            this.activeNum = response.activeNum;
            this.idleNum = response.idleNum;
            this.flag = response.flag;
            return _.extend(response);
        }
    });
    return ServerDataSourceMonitorModel;
});

define("travsky/jcf/1.0.0/view/dataSource/serverDataSourceMonitor_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerDataSourceMonitorTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDataSourceMonitor-debug.tpl");
    var ServerDataSourceMonitorView = Backbone.View.extend({
        template: _.template(ServerDataSourceMonitorTemplate),
        tagName: "div",
        className: "dataSourceMonitor",
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.listenTo(this.model, "change", this.render);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        }
    });
    return ServerDataSourceMonitorView;
});

define("travsky/jcf/1.0.0/template/dataSource/serverDataSourceMonitor-debug.tpl", [], '<div class="monitorList">\n	<div class="content">当前已用连接数</div>\n	<div class="value"><%=activeNum%></div>\n</div>\n<div class="monitorList">\n	<div class="content">当前空闲连接数</div>\n	<div class="value"><%=idleNum%></div>\n</div>');

define("travsky/jcf/1.0.0/template/dataSource/serverDataSourceItem-debug.tpl", [], '<div class="dsName"><%=model.dataSourceName%></div>\n<div class="dsURL"><%=model.URL%></div>\n<div class="dsUserName"><%=model.userName%></div>\n<div class="dsInitialSize"><%=model.initialSize%></div>\n<div class="dsmaxWait"><%=model.maxWait%></div>\n<div class="dsmaxIdle"><%=model.maxIdle%></div>\n<div class="dsminIdle"><%=model.minIdle%></div>\n<div class="dsconfig">\n	<%if (dataSourceConfigAuth == "true"){%>\n		<a href="javascript:void(0);">配置</a>\n	<%}else{%>\n		配置\n	<%}%>\n</div>\n<div class="dsundeploy">\n	<%if (dataSourceUndeployAuth == "true"){%>\n		<a href="javascript:void(0);">卸载</a>\n	<%}else{%>\n		卸载\n	<%}%>\n</div>\n<div class="dsrestart">\n	<%if (dataSourceRestartAuth == "true"){%>\n		<a href="javascript:void(0);">重启</a>\n	<%}else{%>\n		重启\n	<%}%>\n</div>\n<div class="dsdetail">\n	<%if (dataSourceDetailViewAuth == "true"){%>\n		<a href="javascript:void(0);">查看</a>\n	<%}else{%>\n		查看\n	<%}%>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/serverDeployDataSource_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/DataSourceUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_deploy_model-debug" ], function(require, exports, module) {
    //新增数据源页面
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var DataSourceUtil = require("travsky/jcf/1.0.0/util/DataSourceUtil-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var ServerDataSourceDeployModel = require("travsky/jcf/1.0.0/model/dataSource/server_dataSource_deploy_model-debug");
    var ServerDeployDataSourceTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverDeployDataSource-debug.tpl");
    var ServerDeployDataSourceView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(ServerDeployDataSourceTemplate),
        events: {
            "blur #dataSourceName": "checkDataSourceName",
            "blur #userName": "checkUserName",
            "blur #password": "checkPassWord",
            "blur #URL": "checkURL",
            "click #save": "deployDataSource"
        },
        initialize: function(options) {
            this.options = options || {};
            this.serverId = options.queryString.serverId;
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        },
        deployDataSource: function() {
            if (this.checkForm()) {
                var serverDataSourceDeployModel = new ServerDataSourceDeployModel();
                var dataSourceName = this.$el.find("#dataSourceName").val().trim();
                var userName = this.$el.find("#userName").val().trim();
                var password = this.$el.find("#password").val().trim();
                var URL = this.$el.find("#URL").val().trim();
                var driverClassName = this.$el.find("#driverClassName").val().trim();
                serverDataSourceDeployModel.set("dataSourceName", dataSourceName);
                serverDataSourceDeployModel.set("username", userName);
                serverDataSourceDeployModel.set("password", password);
                serverDataSourceDeployModel.set("URL", URL);
                serverDataSourceDeployModel.set("driverClassName", driverClassName);
                serverDataSourceDeployModel.save({
                    serverId: this.serverId
                }, {
                    success: function(model, data) {
                        if (data.flag == true) {
                            data.messageList = [ "数据源部署成功，请检测连通性" ];
                        } else {
                            data.messageList = [ data.message ];
                        }
                        var globar = new GlobalView({
                            model: data
                        });
                        globar.render();
                    }
                });
            } else {
                var data = {
                    flag: "false",
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        checkDataSourceName: function() {
            var flag = DataSourceUtil.checkDataSourceName("dataSourceName");
            return flag;
        },
        checkUserName: function() {
            var flag = DataSourceUtil.checkUserName("userName");
            return flag;
        },
        checkPassWord: function() {
            var flag = DataSourceUtil.checkPassWord("password");
            return flag;
        },
        checkURL: function() {
            var flag = DataSourceUtil.checkURL("URL");
            return flag;
        },
        checkForm: function() {
            if (this.checkDataSourceName() && this.checkUserName() && this.checkPassWord() && this.checkURL()) {
                return true;
            }
            return false;
        }
    });
    return ServerDeployDataSourceView;
});

define("travsky/jcf/1.0.0/model/dataSource/server_dataSource_deploy_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerDataSourceDeployModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/dataSource/serverDeployDataSource.action",
        defaults: {
            dataSourceName: "",
            URL: "",
            userName: "",
            password: "",
            driverClassName: ""
        },
        parse: function(response) {
            this.flag = response.flag;
            this.message = response.message;
            return _.extend(response);
        }
    });
    return ServerDataSourceDeployModel;
});

define("travsky/jcf/1.0.0/template/dataSource/serverDeployDataSource-debug.tpl", [], '<div id="addDataSource">\n	<div class="line">\n		<div class="content">\n			<label>数据源名称：</label>\n		</div>\n		<div class="value">\n			<input id="dataSourceName" name="dataSourceName" class="length form-control" type="text" value="" placeholder="必填项：字母、数字、下划线、#">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="dataSourceNameTip"></span>\n		</div>\n		<div class="content">\n			<label>用户名：</label>\n		</div>\n		<div class="value">\n			<input id="userName" name="userName" class="length form-control" type="text" value="" placeholder="必填项：字母、数字、下划线、#">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="userNameTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>密码： </label>\n		</div>\n		<div class="value">\n			<input id="password" name="password" class="length form-control" type="password" placeholder="必填项">\n	  	</div>\n	  	<div class="warn">\n	  		<span class = "text-danger">*</span>\n	  		<span id = "passwordTip"></span>\n	  	</div>\n	  	<div class="content">\n	  		<label>Url：</label>\n	  	</div>\n		<div class="value">\n			<input type="text" id="URL" name="URL" class="length form-control" type="text" value="" placeholder="必填项">\n		</div>\n		<div class="warn">\n			<span class = "text-danger">*</span>\n			<span id = "URLTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>驱动：</label>\n		</div>\n		<div class="value">\n			<select id="driverClassName" name="driverClassName" class="length" autocomplete="off">\n				<option value="com.ibm.db2.jcc.DB2Driver">com.ibm.db2.jcc.DB2Driver</option>\n				<option value="oracle.jdbc.OracleDriver">oracle.jdbc.OracleDriver</option>\n				<option value="org.postgresql.Driver">org.postgresql.Driver</option>\n				<option value="com.mysql.jdbc.Driver">com.mysql.jdbc.Driver</option>    		\n			</select>\n		</div>\n		<div class="warn">\n			<span id="driverClassNameTip">&nbsp;</span>\n		</div>\n	</div>\n	<div>\n		<div class="col-sm-offset-4">\n			<button id="save" class="btn btn-primary" type="button">部署</button>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/dataSource/server_dataSource_model-debug", "travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceItem_view-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var ServerDataSourceCollection = require("travsky/jcf/1.0.0/collection/dataSource/server_dataSource_collection-debug");
    var ServerTestDataSourceListTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverTestDataSourceList-debug.tpl");
    var ServerTestDataSourceItemView = require("travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceItem_view-debug");
    var ServerTestDataSourceListView = Backbone.View.extend({
        el: "#content-body",
        tagName: "div",
        className: "dsTestList",
        template: _.template(ServerTestDataSourceListTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.serverId = options.queryString.serverId;
            this.dataSourceTestList = this.getDataSources();
            this.dataSourceTestList.bind("reset", this.addAllServerDataSources, this);
        },
        render: function() {
            this.$el.html(this.template());
            return this;
        },
        addServerDataSource: function(dataSource) {
            var server_test_dataSource_item_view = new ServerTestDataSourceItemView({
                model: dataSource,
                serverId: this.serverId
            });
            this.$el.find("#dataSourceTestListBody").append(server_test_dataSource_item_view.render());
        },
        addAllServerDataSources: function() {
            if (this.dataSourceTestList.flag == "1") {
                this.dataSourceTestList.each(this.addServerDataSource, this);
            } else if (this.dataSourceTestList.flag == "0") {
                alert("数据库查询异常");
            } else if (this.dataSourceTestList.flag == "2") {
                alert("连接异常，请查看服务器状态");
            }
        },
        getDataSources: function() {
            var server_dataSource_collection = new ServerDataSourceCollection();
            server_dataSource_collection.fetch({
                data: QueryString.stringify(this.options.queryString),
                reset: true
            });
            return server_dataSource_collection;
        }
    });
    return ServerTestDataSourceListView;
});

define("travsky/jcf/1.0.0/template/dataSource/serverTestDataSourceList-debug.tpl", [], '<div id="dataSourceTestListHead" class="dsTestList">\n	<div class="dsName">数据源名称</div>\n	<div class="dsStatus">数据源状态</div>\n	<div class="dsURL">URL</div>\n    <div class="dsUserName">用户名</div>\n    <div class="dsTest">数据源测试连接</div>\n</div>\n<div id="dataSourceTestListBody" class="dsTestList">\n	\n</div>');

define("travsky/jcf/1.0.0/view/dataSource/serverTestDataSourceItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/dataSource/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ServerTestDataSourceItemTemplate = require("travsky/jcf/1.0.0/template/dataSource/serverTestDataSourceItem-debug.tpl");
    var GlobalView = require("travsky/jcf/1.0.0/view/dataSource/global_view-debug");
    var ServerTestDataSourceItemView = Backbone.View.extend({
        template: _.template(ServerTestDataSourceItemTemplate),
        tagName: "div",
        className: "dsTestList dsItem",
        events: {
            "click .dsTest": "serverDataSourceTestConnect"
        },
        initialize: function(options) {
            this.model = options.model;
            this.serverId = options.serverId;
            this.listenTo(this.model, "change", this.render);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        },
        serverDataSourceTestConnect: function() {
            var self = this;
            var jsonParam = {
                serverId: this.serverId,
                dsName: this.model.get("dataSourceName")
            };
            var testDSConnectionURL = "/" + jcfManager.appName + "/dataSource/testDSConnection.action";
            var ajaxing = util.dealAjaxRequest4SimpleParam(testDSConnectionURL, jsonParam);
            $.when(ajaxing).done(function(data) {
                data.dataSourceName = self.model.get("dataSourceName");
                if (data.flag) {
                    data.messageList = [ "数据源" + data.dataSourceName + "测试连接成功" ];
                    self.model.set("connected", true);
                } else {
                    data.messageList = [ "数据源" + data.dataSourceName + "测试连接失败，原因：" + data.message ];
                    self.model.set("connected", false);
                }
                var globar = new GlobalView({
                    model: data
                });
                globar.render();
            });
        }
    });
    return ServerTestDataSourceItemView;
});

define("travsky/jcf/1.0.0/template/dataSource/serverTestDataSourceItem-debug.tpl", [], '<div class="dsName <%if(connected==true){%>connect<%}%>"><%=dataSourceName%></div>\n<div class="dsStatus <%if(connected==true){%>connect<%}%>"><%if(connected==true){%>已连接<%}else{%>未连接<%}%></div>\n<div class="dsURL"><%=URL%></div>\n<div class="dsUserName"><%=userName%></div>\n<div class="dsTest">测试连接</div>');

define("travsky/jcf/1.0.0/view/context/highcharts-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "highcharts-debug", "exporting-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var highcharts = require("highcharts-debug");
    var exporting = require("exporting-debug");
    var ContainerTemplate = require("travsky/jcf/1.0.0/template/context/highchart-debug.tpl");
    var ContainerView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(ContainerTemplate),
        initialize: function() {
            this.render();
        },
        render: function() {
            this.$el.html(this.template());
            var chart;
            $(function() {
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: "content-body",
                        //图表放置的容器，DIV             
                        defaultSeriesType: "spline",
                        //图表类型为曲线图             
                        events: {
                            load: function() {
                                var series = this.series[0];
                                //每隔5秒钟，图表更新一次，y数据值在0-100之间的随机数                     
                                setInterval(function() {
                                    var x = new Date().getTime(), // 当前时间                         
                                    y = Math.random() * 100;
                                    series.addPoint([ x, y ], true, true);
                                }, 5e3);
                            }
                        }
                    },
                    title: {
                        text: "CPU使用记录走势图"
                    },
                    xAxis: {
                        //设置X轴             
                        type: "datetime",
                        //X轴为日期时间类型             
                        tickPixelInterval: 150
                    },
                    yAxis: {
                        //设置Y轴             
                        title: "",
                        max: 100,
                        //Y轴最大值             
                        min: 0
                    },
                    tooltip: {
                        //当鼠标悬置数据点时的提示框             
                        formatter: function() {
                            //格式化提示信息                 
                            return "CPU使用率" + Highcharts.dateFormat("%H:%M:%S", this.x) + "" + Highcharts.numberFormat(this.y, 2) + "%";
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    exporting: {
                        enabled: false
                    },
                    credits: {
                        text: "JCF Domain Info",
                        //设置LOGO区文字             
                        url: "#"
                    },
                    series: [ {
                        data: function() {
                            //设置默认数据，                 
                            var data = [], time = new Date().getTime(), i;
                            for (i = -19; i <= 0; i++) {
                                data.push({
                                    x: time + i * 5e3,
                                    y: Math.random() * 100
                                });
                            }
                            return data;
                        }()
                    } ]
                });
            });
            return this;
        }
    });
    return ContainerView;
});

define("travsky/jcf/1.0.0/template/context/highchart-debug.tpl", [], '<div id="charts">\nHello highcharts\n</div>');

define("travsky/jcf/1.0.0/model/context/server_context_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ServerContextModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/context/serverContextConfig.action",
        defaults: {
            optime: "",
            exptime: "",
            servers: ""
        },
        parse: function(response) {
            this.optime = response.optime;
            this.exptime = response.exptime;
            this.servers = response.servers;
            return _.extend(response);
        }
    });
    return ServerContextModel;
});

define("travsky/jcf/1.0.0/view/context/serverContextInfo_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/context/tip_view-debug", "travsky/jcf/1.0.0/view/context/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var ContextAuthCheckUtil = require("travsky/jcf/1.0.0/util/ContextAuthCheckUtil-debug");
    var TipView = require("travsky/jcf/1.0.0/view/context/tip_view-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/context/global_view-debug");
    var ServerContextInfoTemplate = require("travsky/jcf/1.0.0/template/context/serverContextInfo-debug.tpl");
    var ServerContextInfoView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(ServerContextInfoTemplate),
        events: {
            "click #contextRestart": "restartMemcache"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.queryString = options.queryString;
            this.listenTo(this.model, "change", this.render);
            this.restartContextAuth = ContextAuthCheckUtil.getServerContextRestartAuth();
        },
        render: function() {
            this.$el.html(this.template({
                model: this.model.toJSON(),
                restartContextAuth: this.restartContextAuth
            }));
            return this;
        },
        restartMemcache: function() {
            var restartContextURL = "/" + jcfManager.appName + "/context/restartServerContext.action";
            var jsObj = {};
            jsObj.serverId = this.queryString.serverId;
            var reqing = util.dealAjaxRequest4SimpleParam(restartContextURL, jsObj);
            $.when(reqing).done(function(data) {
                if (data.flag) {
                    data.messageList = [ "重启上下文成功" ];
                } else {
                    data.messageList = [ "重启上下文失败" ];
                }
                var global = new GlobalView({
                    model: data
                });
                global.render();
            });
        }
    });
    return ServerContextInfoView;
});

define("travsky/jcf/1.0.0/view/context/tip_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var tipViewTemplate = require("travsky/jcf/1.0.0/template/context/tip-debug.tpl");
    var flag = "";
    var TipView = Backbone.View.extend({
        tagName: "div",
        className: "tip",
        template: _.template(tipViewTemplate),
        events: {
            "click .modal-footer .ok": "confirm",
            "click .modal-footer .cancel": "cancel"
        },
        initialize: function(options) {
            this.options = options || {};
            this.headerMessage = options.headerMessage;
            this.bodyMessage = options.bodyMessage;
            this.model = options.model;
            this.type = options.type;
        },
        render: function() {
            return this.$el.html(this.template({
                headerMessage: this.headerMessage,
                bodyMessage: this.bodyMessage
            }));
        },
        show: function() {
            this.$el.find(".modal").fadeIn();
        },
        remove: function() {
            this.$el.find(".modal").fadeOut();
            this.$el.find(".modal").remove();
            this.$el.find(".modal-backdrop").remove();
        },
        confirm: function() {
            if (this.type == "restart") {
                this.model.set("confirmRestart", true);
            } else {
                this.model.set("confirmUndeploy", true);
            }
        },
        cancel: function() {
            if (this.type == "restart") {
                this.model.set("confirmRestart", false);
            } else {
                this.model.set("confirmUndeploy", false);
            }
            this.remove();
        }
    });
    return TipView;
});

define("travsky/jcf/1.0.0/template/context/tip-debug.tpl", [], '<div class="modal-backdrop  in" style="z-index: 10400;"></div>\n<div class="modal" aria-hidden="true" style="z-index: 10400;">\n    <div class="modal-dialog">\n    	<div class="modal-content">          \n			<div class="modal-header">        \n				<h3><%=headerMessage%></h3>      \n			</div>        \n			<div class="modal-body">\n				<div><p><%=bodyMessage%></p></div>\n			</div>    \n			<div class="modal-footer">      \n				<a id="confirm" class="btn ok btn-primary" href="javascript:void(0);">确定</a>\n				<a id="cancle" class="btn cancel" href="javascript:void(0);">取消</a>\n			</div>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/context/global_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var globalViewTemplate = require("travsky/jcf/1.0.0/template/context/global-debug.tpl");
    var GlobalView = Backbone.View.extend({
        el: "#global",
        template: _.template(globalViewTemplate),
        events: {
            "click .close-btn": "close"
        },
        initialize: function(options) {
            this.model = options.model;
        },
        render: function() {
            this.$el.html(this.template(this.model));
            return this;
        },
        close: function() {
            this.$el.find("div").remove();
        }
    });
    return GlobalView;
});

define("travsky/jcf/1.0.0/template/context/global-debug.tpl", [], '<div id="<%if (flag == true){%>success<%}else{%>failure<%}%>">\n	<div style="display:inline-block">\n		<%for (var i = 0; i < messageList.length; i++){%>\n			<%=messageList[i]%>\n		<%}%>\n	</div>\n	<a class="close-btn"></a>\n</div>');

define("travsky/jcf/1.0.0/template/context/serverContextInfo-debug.tpl", [], '<div id="serverContextInfo">\n	<div class="line">\n		<div class="content">\n			<label>超时时间：</label>\n		</div>\n		<div class="value">\n			<%=model.optime%>(毫秒)\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>失效时间： </label>\n		</div>\n		<div class="value">\n			<%=model.exptime%>(秒)\n	  	</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>服务器地址：</label>\n		</div>\n		<div class="value">\n			<%=model.servers%>\n		</div>\n	</div>\n	<div>\n		<div class="col-sm-offset-0">\n			<%if (restartContextAuth == "true"){%>\n				<button id="contextRestart" class="btn btn-primary" type="button">重启</button>\n			<%}else{%>\n				<button id="contextRestartDisable" class="btn btn-primary" type="button">重启</button>\n			<%}%>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/view/context/serverContextConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/ContextUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/view/context/tip_view-debug", "travsky/jcf/1.0.0/view/context/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var ContextUtil = require("travsky/jcf/1.0.0/util/ContextUtil-debug");
    var ServerContextConfigTemplate = require("travsky/jcf/1.0.0/template/context/serverContextConfig-debug.tpl");
    var TipView = require("travsky/jcf/1.0.0/view/context/tip_view-debug");
    var GlobalView = require("travsky/jcf/1.0.0/view/context/global_view-debug");
    var ServerContextConfigView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(ServerContextConfigTemplate),
        events: {
            "click #contextSave": "saveConfig",
            "blur #optime": "checkOptime",
            "blur #exptime": "checkExptime",
            "blur #servers": "checkServers"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.serverId = options.queryString.serverId;
            this.listenTo(this.model, "change", this.render);
        },
        render: function() {
            this.$el.html(this.template(this.model.toJSON()));
            return this;
        },
        saveConfig: function() {
            if (this.checkOptime() && this.checkExptime() && this.checkServers()) {
                var self = this;
                var optime = self.$el.find("#optime").val();
                var exptime = self.$el.find("#exptime").val();
                var servers = self.$el.find("#servers").val();
                if (self.model.get("optime") != optime) {
                    self.model.set("optime", optime);
                }
                if (self.model.get("exptime") != exptime) {
                    self.model.set("exptime", exptime);
                }
                if (self.model.get("servers") != servers) {
                    self.model.set("servers", servers);
                }
                self.model.save({
                    serverId: self.serverId
                }, {
                    success: function(model, data) {
                        if (data.flag) {
                            data.messageList = [ "修改上下文配置成功，请重启" ];
                        } else {
                            data.messageList = [ "修改上下文配置失败" ];
                        }
                        var global = new GlobalView({
                            model: data
                        });
                        global.render();
                    }
                });
            } else {
                var data = {
                    flag: "false",
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        checkOptime: function() {
            var flag = ContextUtil.checkOptime("optime");
            return flag;
        },
        checkExptime: function() {
            var flag = ContextUtil.checkExptime("exptime");
            return flag;
        },
        checkServers: function() {
            var flag = ContextUtil.checkServers("servers");
            return flag;
        }
    });
    return ServerContextConfigView;
});

define("travsky/jcf/1.0.0/util/ContextUtil-debug", [ "jquery-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var CheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug");
    var ContextUtil = {
        checkOptime: function(id) {
            var length = 10;
            var result = CheckUtil.checkInputMatchPositiveIntegerAndMaxLength(id, length);
            this.renderInput(id, result);
            return result;
        },
        checkExptime: function(id) {
            var maxValue = 1e4;
            var minValue = 0;
            var result = CheckUtil.checkInputMatchInt_MinNum__MaxNum(id, minValue, maxValue);
            this.renderInput(id, result);
            return result;
        },
        checkServers: function(id) {
            var result = CheckUtil.checkServerAndPortList(id);
            this.renderInput(id, result);
            return result;
        },
        renderInput: function(id, result) {
            if (result) {
                var item = $("#" + id);
                item.parent().addClass("has-success");
                if (item.parent().hasClass("has-error")) {
                    item.parent().removeClass("has-error");
                }
            } else {
                var item = $("#" + id);
                item.parent().addClass("has-error");
                if (item.parent().hasClass("has-success")) {
                    item.parent().removeClass("has-success");
                }
            }
        }
    };
    return ContextUtil;
});

define("travsky/jcf/1.0.0/template/context/serverContextConfig-debug.tpl", [], '<div id="serverContextConfig">\n	<div class="line">\n		<div class="content">\n			<label>超时时间：</label>\n		</div>\n		<div class="value">\n			<input id="optime" name="optime" class="length form-control" type="text" placeholder="必填项： 建议：600 单位：（毫秒）" value="<%=optime%>">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span><span>(单位:毫秒)&nbsp;</span>\n			<span id="optimeTip" class="text-danger"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>失效时间： </label>\n		</div>\n		<div class="value">\n			<input id="exptime" name="exptime" class="length form-control" type="text" placeholder="必填项：范围：0~10000 单位：（秒）" value="<%=exptime%>">\n	  	</div>\n	  	<div class="warn">\n			<span class="text-danger">*</span><span>(单位:秒)&nbsp;</span>\n			<span id="exptimeTip" class="text-danger"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>服务器地址：</label>\n		</div>\n		<div class="value">\n			<input id="servers"  name="servers" class="length form-control" type="text" placeholder="必填项：格式IP:PORT IP:PORT" value="<%=servers%>">\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="serversTip" class="text-danger"></span>\n		</div>\n	</div>\n	<div>\n		<div class="col-sm-offset-0">\n			<button id="contextSave" class="btn btn-primary" type="button">保存</button>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/collection/log/log_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/log/log_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var LogModel = require("travsky/jcf/1.0.0/model/log/log_model-debug");
    var logCollection = Backbone.Collection.extend({
        model: LogModel,
        url: "/" + appName + "/log/getAllAppLogFile.action",
        parse: function(response) {
            return _.extend(response);
        },
        refresh: function() {
            this.fetch({
                reset: true
            });
        }
    });
    return logCollection;
});

define("travsky/jcf/1.0.0/model/log/log_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var LogModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: {
            confirmDelete: false
        }
    });
    return LogModel;
});

define("travsky/jcf/1.0.0/view/log/logList_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "querystring-debug", "travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/log/logItem_view-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/log/global_view-debug", "travsky/jcf/1.0.0/view/log/tip_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var QueryString = require("querystring-debug");
    var LogListTemplate = require("travsky/jcf/1.0.0/template/log/logList-debug.tpl");
    var LogAuthCheckUtil = require("travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug");
    var LogListItemView = require("travsky/jcf/1.0.0/view/log/logItem_view-debug");
    var LogListView = Backbone.View.extend({
        el: "#content-body",
        template: _.template(LogListTemplate),
        events: {},
        initialize: function(options) {
            this.options = options || {};
            this.logList = options.collection;
            this.logDeleteAuth = LogAuthCheckUtil.getLogDeleteAuth();
            //点击应用按钮的权限
            this.logList.bind("reset", this.addAllLogs, this);
            this.views = [];
            this.logList.bind("change:delete", this.deleteFile, this);
        },
        render: function() {
            $(this.el).html(this.template());
            return this;
        },
        addLog: function(log) {
            var logDeleteAuth = LogAuthCheckUtil.getLogDeleteAuth();
            log.set("logDeleteAuth", logDeleteAuth);
            var log_list_item_view = new LogListItemView({
                model: log
            });
            this.$el.find("#logListBody").append(log_list_item_view.render());
            this.views.push(log_list_item_view);
        },
        addAllLogs: function() {
            var _this = this;
            //遍历views数组，并对每个view调用Backbone的remove
            _.each(this.views, function(view) {
                view.remove().off();
            });
            //清空views数组，此时旧的view就变成没有任何被引用的不可达对象了
            //垃圾回收器会回收它们
            this.views = [];
            this.logList.each(function(model) {
                _this.addLog(model);
            });
        },
        refresh: function() {
            this.logList.refresh();
        },
        deleteFile: function() {
            this.render();
            this.refresh();
        }
    });
    return LogListView;
});

define("travsky/jcf/1.0.0/template/log/logList-debug.tpl", [], '<div id="logListHead" class="logList">\n	<div class="groupName">分组名称</div>\n	<div class="appName">应用名称</div>\n	<div class="fileName">文件名称</div>\n    <div class="fileDelete">删除</div>\n</div>\n<div id="logListBody" class="logList">\n	\n</div>');

define("travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    AuthCheckUtil.getLogManagementAuth = function() {
        var code = "7_1_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogAppNameConfigAuth = function() {
        var code = "7_2_1";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogLevelConfigAuth = function() {
        var code = "7_2_2";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogTraceConfigAuth = function() {
        var code = "7_2_3";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogRunningConfigAuth = function() {
        var code = "7_2_4";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogSizeConfigAuth = function() {
        var code = "7_2_6";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogNumberConfigAuth = function() {
        var code = "7_2_7";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogViewAuth = function() {
        var code = "7_2_8";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogFileNameConfigAuth = function() {
        var code = "7_2_9";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogPathConfigAuth = function() {
        var code = "7_2_10";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogDeleteAuth = function() {
        //删除应用日志权限
        var code = "7_2_11";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    }, AuthCheckUtil.getLogUpdateAuth = function() {
        //添加应用日志权限
        var code = "7_2_12";
        var flag = jcfManager.authModel.get(code) || "";
        return flag;
    };
    return AuthCheckUtil;
});

define("travsky/jcf/1.0.0/view/log/logItem_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/view/log/global_view-debug", "travsky/jcf/1.0.0/view/log/tip_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var LogItemTemplate = require("travsky/jcf/1.0.0/template/log/logItem-debug.tpl");
    var GlobalView = require("travsky/jcf/1.0.0/view/log/global_view-debug");
    var TipView = require("travsky/jcf/1.0.0/view/log/tip_view-debug");
    var LogItemView = Backbone.View.extend({
        template: _.template(LogItemTemplate),
        tagName: "div",
        className: "logList",
        events: {
            "click .fileDelete a": "showDeleteFileView"
        },
        initialize: function(options) {
            this.model = options.model;
            this.listenTo(this.model, "change:confirmDelete", this.deleteFile);
        },
        render: function() {
            return this.$el.html(this.template(this.model.toJSON()));
        },
        showDeleteFileView: function() {
            var tipView = new TipView({
                headerMessage: "删除应用配置文件",
                bodyMessage: "确定要删除应用配置文件" + this.model.get("fileName") + "么？",
                model: this.model,
                type: "delete"
            });
            this.$el.append(tipView.render());
            tipView.show();
        },
        deleteFile: function() {
            var self = this;
            var jsonData = {
                groupId: this.model.get("groupId"),
                appName: this.model.get("appName"),
                filePath: this.model.get("filePath")
            };
            var deleteAppLogConfigFile = "/" + jcfManager.appName + "/log/deleteAppLogConfigFile.action";
            var reqing = util.dealAjaxRequest4SimpleParam(deleteAppLogConfigFile, jsonData);
            $.when(reqing).done(function(data) {
                if (data.flag) {
                    self.model.set("delete", true);
                    data.messageList = [ "应用配置文件删除成功" ];
                }
                var globar = new GlobalView({
                    model: data
                });
                globar.render();
            });
        }
    });
    return LogItemView;
});

define("travsky/jcf/1.0.0/template/log/logItem-debug.tpl", [], '<div class="groupName"><%=groupName%></div>\n<div class="appName"><%=appName%></div>\n<div class="fileName"><%=fileName%></div>\n<div class="fileDelete">\n	<%if(logDeleteAuth==\'true\'){\n	   %><a href="javascript:void(0);">删除</a><%\n	}else{\n	   %>删除<%\n	}%>\n</div>\n');

define("travsky/jcf/1.0.0/view/log/global_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var globalViewTemplate = require("travsky/jcf/1.0.0/template/log/global-debug.tpl");
    var GlobalView = Backbone.View.extend({
        el: "#global",
        template: _.template(globalViewTemplate),
        events: {
            "click .close-btn": "close"
        },
        initialize: function(options) {
            this.model = options.model;
        },
        render: function() {
            $("#groupAppName").parent().addClass("move");
            this.$el.html(this.template(this.model));
            return this;
        },
        close: function() {
            $("#groupAppName").parent().removeClass("move");
            this.$el.find("div").remove();
        }
    });
    return GlobalView;
});

define("travsky/jcf/1.0.0/template/log/global-debug.tpl", [], '<div id="<%if (flag){%>success<%}else{%>failure<%}%>">\n	<div style="display:inline-block">\n		<%for (var i = 0; i < messageList.length; i++){%>\n			<%=messageList[i]%>\n		<%}%>\n	</div>\n	<a class="close-btn"></a>\n</div>');

define("travsky/jcf/1.0.0/view/log/tip_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var tipViewTemplate = require("travsky/jcf/1.0.0/template/dataSource/tip-debug.tpl");
    var flag = "";
    var TipView = Backbone.View.extend({
        tagName: "div",
        className: "tip",
        template: _.template(tipViewTemplate),
        events: {
            "click .modal-footer .ok": "confirm",
            "click .modal-footer .cancel": "cancel"
        },
        initialize: function(options) {
            this.options = options || {};
            this.headerMessage = options.headerMessage;
            this.bodyMessage = options.bodyMessage;
            this.model = options.model;
            this.type = options.type;
        },
        render: function() {
            return this.$el.html(this.template({
                headerMessage: this.headerMessage,
                bodyMessage: this.bodyMessage
            }));
        },
        show: function() {
            this.$el.find(".modal").fadeIn();
        },
        remove: function() {
            this.$el.find(".modal").fadeOut();
            this.$el.find(".modal").remove();
            this.$el.find(".modal-backdrop").remove();
        },
        confirm: function() {
            if (this.type == "delete") {
                this.model.set("confirmDelete", true);
            }
        },
        cancel: function() {
            if (this.type == "delete") {
                this.model.set("confirmDelete", false);
            }
            this.remove();
        }
    });
    return TipView;
});

define("travsky/jcf/1.0.0/view/log/logConfig_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "marionette-debug", "querystring-debug", "travsky/jcf/1.0.0/util/LogUtil-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug", "travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug", "travsky/jcf/1.0.0/view/log/global_view-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var Marionette = require("marionette-debug");
    var QueryString = require("querystring-debug");
    var LogUtil = require("travsky/jcf/1.0.0/util/LogUtil-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var LogAuthCheckUtil = require("travsky/jcf/1.0.0/util/LogAuthCheckUtil-debug");
    var LogConfigTemplate = require("travsky/jcf/1.0.0/template/log/logConfig-debug.tpl");
    var GlobalView = require("travsky/jcf/1.0.0/view/log/global_view-debug");
    var LogConfigView = Marionette.ItemView.extend({
        el: "#content-body",
        template: _.template(LogConfigTemplate),
        events: {
            "change #appConfigFileName": "hasSameFile",
            "blur #appConfigFileName": "checkAppConfigFileName",
            "blur #logSavePath": "checkLogSavePath",
            "blur #maxLogFileSize": "checkMaxLogFileSize",
            "blur #logFileMaxBackupIndex": "checkLogFileMaxBackupIndex",
            "blur #runningLogSavePath": "checkRunningLogSavePath",
            "blur #maxRunningLogFileSize": "checkMaxRunningLogFileSize",
            "blur #runningLogFileMaxBackupIndex": "checkRunningLogFileMaxBackupIndex",
            "click #save": "saveConfig",
            "click #isRunningSelect": "isRunningSelect"
        },
        initialize: function(options) {
            this.options = options || {};
            this.model = options.model;
            this.collection = options.collection;
            this.groupId = options.queryString.groupId;
            this.listenTo(this.model, "change", this.render);
            this.logUpdateAuth = LogAuthCheckUtil.getLogUpdateAuth();
            //点击应用按钮的权限
            this.logFileNameAuth = LogAuthCheckUtil.getLogFileNameConfigAuth();
            this.logSavePathAuth = LogAuthCheckUtil.getLogPathConfigAuth();
            this.logSizeAuth = LogAuthCheckUtil.getLogSizeConfigAuth();
            this.logNumberAuth = LogAuthCheckUtil.getLogNumberConfigAuth();
            this.logLevelAuth = LogAuthCheckUtil.getLogLevelConfigAuth();
            this.logRunningAuth = LogAuthCheckUtil.getLogRunningConfigAuth();
        },
        render: function() {
            this.$el.html(this.template({
                model: this.model.toJSON(),
                logFileNameAuth: this.logFileNameAuth,
                logSavePathAuth: this.logSavePathAuth,
                logSizeAuth: this.logSizeAuth,
                logNumberAuth: this.logNumberAuth,
                logLevelAuth: this.logLevelAuth,
                logRunningAuth: this.logRunningAuth,
                logUpdateAuth: this.logUpdateAuth
            }));
            return this;
        },
        saveConfig: function() {
            if (this.checkForm()) {
                var self = this;
                var appName = $("#groupAppName").val();
                var appConfigFileName = self.$el.find("#appConfigFileName").val();
                var logSavePath = self.$el.find("#logSavePath").val();
                var maxLogFileSize = self.$el.find("#maxLogFileSize").val();
                var logFileMaxBackupIndex = self.$el.find("#logFileMaxBackupIndex").val();
                var logLevel = self.$el.find("#logLevel").val();
                var logAppenderType = self.$el.find("#logAppenderType").val();
                var runningLogSavePath = self.$el.find("#runningLogSavePath").val();
                var maxRunningLogFileSize = self.$el.find("#maxRunningLogFileSize").val();
                var runningLogFileMaxBackupIndex = self.$el.find("#runningLogFileMaxBackupIndex").val();
                if (self.model.get("appConfigFileName") != appConfigFileName) {
                    self.model.set("appConfigFileName", appConfigFileName);
                }
                if (self.model.get("logSavePath") != logSavePath) {
                    self.model.set("logSavePath", logSavePath);
                }
                if (self.model.get("maxLogFileSize") != maxLogFileSize) {
                    self.model.set("maxLogFileSize", maxLogFileSize);
                }
                if (self.model.get("logFileMaxBackupIndex") != logFileMaxBackupIndex) {
                    self.model.set("logFileMaxBackupIndex", logFileMaxBackupIndex);
                }
                if (self.model.get("logLevel") != logLevel) {
                    self.model.set("logLevel", logLevel);
                }
                if (self.model.get("logAppenderType") != logAppenderType) {
                    self.model.set("logAppenderType", logAppenderType);
                }
                if (this.model.isRunningSelected()) {
                    if (self.model.get("runningLogSavePath") != runningLogSavePath) {
                        self.model.set("runningLogSavePath", runningLogSavePath);
                    }
                    if (self.model.get("maxRunningLogFileSize") != maxRunningLogFileSize) {
                        self.model.set("maxRunningLogFileSize", maxRunningLogFileSize);
                    }
                    if (self.model.get("runningLogFileMaxBackupIndex") != runningLogFileMaxBackupIndex) {
                        self.model.set("runningLogFileMaxBackupIndex", runningLogFileMaxBackupIndex);
                    }
                }
                self.model.save({
                    appName: appName,
                    groupId: self.groupId
                }, {
                    success: function(model, data) {
                        if (data.flag) {
                            data.messageList = [ "应用日志配置成功" ];
                        }
                        var globar = new GlobalView({
                            model: data
                        });
                        globar.render();
                    }
                });
            } else {
                var data = {
                    flag: false,
                    messageList: "页面参数验证失败"
                };
                var global = new GlobalView({
                    model: data
                });
                global.render();
            }
        },
        isRunningSelect: function() {
            var appConfigFileName = this.$el.find("#appConfigFileName").val();
            var logSavePath = this.$el.find("#logSavePath").val();
            var maxLogFileSize = this.$el.find("#maxLogFileSize").val();
            var logFileMaxBackupIndex = this.$el.find("#logFileMaxBackupIndex").val();
            var logLevel = this.$el.find("#logLevel").val();
            var logAppenderType = this.$el.find("#logAppenderType").val();
            var runningLogSavePath = this.$el.find("#runningLogSavePath").val();
            var maxRunningLogFileSize = this.$el.find("#maxRunningLogFileSize").val();
            var runningLogFileMaxBackupIndex = this.$el.find("#runningLogFileMaxBackupIndex").val();
            this.model.set("appConfigFileName", appConfigFileName);
            this.model.set("logSavePath", logSavePath);
            this.model.set("maxLogFileSize", maxLogFileSize);
            this.model.set("logFileMaxBackupIndex", logFileMaxBackupIndex);
            this.model.set("logLevel", logLevel);
            this.model.set("logAppenderType", logAppenderType);
            this.model.set("runningLogSavePath", runningLogSavePath);
            this.model.set("maxRunningLogFileSize", maxRunningLogFileSize);
            this.model.set("runningLogFileMaxBackupIndex", runningLogFileMaxBackupIndex);
            if (this.model.isRunningSelected()) {
                this.model.set("isRunningSelect", false);
            } else {
                this.model.set("isRunningSelect", true);
            }
        },
        hasSameFile: function() {
            var appLogConfigName = this.$el.find("#appConfigFileName").val();
            var groupId = this.groupId;
            var jsonData = {
                groupId: groupId,
                appLogConfigName: appLogConfigName
            };
            var hasSameFileName = "/" + jcfManager.appName + "/log/hasSameFileName.action";
            var reqing = util.dealAjaxRequest4SimpleParam(hasSameFileName, jsonData);
            $.when(reqing).done(function(data) {
                if (data.flag) {
                    data.flag = false;
                    data.messageList = [ "已包含同名配置文件，会导致同名文件的覆盖" ];
                    var globar = new GlobalView({
                        model: data
                    });
                    globar.render();
                }
            });
        },
        checkAppName: function() {
            var flag = LogUtil.checkAppConfigFileName("groupAppName");
            return flag;
        },
        checkAppConfigFileName: function() {
            var flag = LogUtil.checkAppConfigFileName("appConfigFileName");
            return flag;
        },
        checkLogSavePath: function() {
            var flag = LogUtil.checkLogSavePath("logSavePath");
            return flag;
        },
        checkMaxLogFileSize: function() {
            //应用日志大小
            var flag = LogUtil.checkMaxLogFileSize("maxLogFileSize");
            return flag;
        },
        checkLogFileMaxBackupIndex: function() {
            //应用日志最多存放个数
            var flag = LogUtil.checkLogFileMaxBackupIndex("logFileMaxBackupIndex");
            return flag;
        },
        checkRunningLogSavePath: function() {
            var flag = LogUtil.checkRunningLogSavePath("runningLogSavePath");
            return flag;
        },
        checkMaxRunningLogFileSize: function() {
            //性能日志文件最大大小
            var flag = LogUtil.checkMaxRunningLogFileSize("maxRunningLogFileSize");
            return flag;
        },
        checkRunningLogFileMaxBackupIndex: function() {
            //性能日志最多存放个数
            var flag = LogUtil.checkRunningLogFileMaxBackupIndex("runningLogFileMaxBackupIndex");
            return flag;
        },
        checkForm: function() {
            var flag = false;
            if (this.checkAppName() && this.checkAppConfigFileName() && this.checkLogSavePath() && this.checkMaxLogFileSize() && this.checkLogFileMaxBackupIndex()) {
                flag = true;
            }
            if (flag && this.model.isRunningSelected()) {
                flag = this.checkRunningLogSavePath() && this.checkMaxRunningLogFileSize() && this.checkRunningLogFileMaxBackupIndex();
            }
            return flag;
        }
    });
    return LogConfigView;
});

define("travsky/jcf/1.0.0/util/LogUtil-debug", [ "jquery-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "backbone-debug", "underscore-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var CheckUtil = require("travsky/jcf/1.0.0/util/SpecialPatternInputCheckUtil-debug");
    var LogUtil = {
        checkAppName: function() {
            var result = CheckUtil.checkNotNull(id);
            console.log(result);
            this.renderInput(id, result);
            return result;
        },
        checkAppConfigFileName: function(id) {
            var result = CheckUtil.checkNotNull(id);
            this.renderInput(id, result);
            return result;
        },
        checkLogSavePath: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = /^\w+(\/\w+)*$/;
                result = CheckUtil.checkMatchRegular(id, reg, "不能输入含有后缀或者以/开头或结尾");
            }
            this.renderInput(id, result);
            return result;
        },
        checkMaxLogFileSize: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = /^\d+[kKmMgG][bB]$/;
                result = CheckUtil.checkMatchRegular(id, reg, "单位只能为KB,kb,MB,mb,GB,gb");
            }
            this.renderInput(id, result);
            return result;
        },
        checkLogFileMaxBackupIndex: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                result = CheckUtil.checkIsPositiveInteger(id);
            }
            this.renderInput(id, result);
            return result;
        },
        checkRunningLogSavePath: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = /^\w+(\/\w+)*$/;
                result = CheckUtil.checkMatchRegular(id, reg, "不能输入含有后缀或者以/结尾");
            }
            this.renderInput(id, result);
            return result;
        },
        checkMaxRunningLogFileSize: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                var reg = /^\d+[kKmMgG][bB]$/;
                result = CheckUtil.checkMatchRegular(id, reg, "单位只能为KB,kb,MB,mb,GB,gb");
            }
            this.renderInput(id, result);
            return result;
        },
        checkRunningLogFileMaxBackupIndex: function(id) {
            var result = CheckUtil.checkNotNull(id);
            if (result) {
                result = CheckUtil.checkIsPositiveInteger(id);
            }
            this.renderInput(id, result);
            return result;
        },
        renderInput: function(id, result) {
            if (result) {
                var item = $("#" + id);
                item.parent().addClass("has-success");
                if (item.parent().hasClass("has-error")) {
                    item.parent().removeClass("has-error");
                }
            } else {
                var item = $("#" + id);
                item.parent().addClass("has-error");
                if (item.parent().hasClass("has-success")) {
                    item.parent().removeClass("has-success");
                }
            }
        }
    };
    return LogUtil;
});

define("travsky/jcf/1.0.0/template/log/logConfig-debug.tpl", [], '<div id="appLogConfig">\n	<div class="line">\n		<div class="content">\n			<label>应用日志配置文件名称：</label>\n		</div>\n		<div class="value">\n			<input id="appConfigFileName" name="appConfigFileName" class="form-control input-sm <%if (logFileNameAuth!="true"){%>readonly<%}%>" type="text" value="<%=model.appConfigFileName%>" placeholder="必填项" <%if (logFileNameAuth!="true"){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="appConfigFileNameTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>应用日志存放路径：</label>\n		</div>\n		<div class="value">\n			<input id="logSavePath" name="logSavePath" class="form-control input-sm <%if (logSavePathAuth!="true"){%>readonly<%}%>" type="text" value="<%=model.logSavePath%>" placeholder="如:app/abc 或  abc" <%if (logSavePathAuth!="true"){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="logSavePathTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>应用日志文件最大大小：</label>\n		</div>\n		<div class="value">\n			<input id="maxLogFileSize" name="maxLogFileSize" class="form-control input-sm <%if (logSizeAuth!="true"){%>readonly<%}%>" type="text" value="<%=model.maxLogFileSize%>" <%if (logSizeAuth!="true"){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span class ="text-info">(单位:KB,kb,MB,mb,GB,gb)</span>\n			<span id="maxLogFileSizeTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>应用日志最多存放个数：</label>\n		</div>\n		<div class="value">\n			<input id="logFileMaxBackupIndex" name="logFileMaxBackupIndex" class="form-control input-sm <%if (logNumberAuth!="true"){%>readonly<%}%>" type="text" value="<%=model.logFileMaxBackupIndex%>" <%if (logNumberAuth!="true"){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="logFileMaxBackupIndexTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>应用日志级别：</label>\n		</div>\n		<div class="value">\n			<%if (logLevelAuth=="true"){%>\n				<select id="logLevel" name="logLevel" class="form-control input-sm">\n					<option value="FATAL" <%if (model.logLevel == "FATAL"){%>selected="true"<%}%>>FATAL</option>\n					<option value="ERROR" <%if (model.logLevel == "ERROR"){%>selected="true"<%}%>>ERROR</option>\n					<option value="WARN" <%if (model.logLevel == "WARN"){%>selected="true"<%}%>>WARN</option>\n					<option value="INFO" <%if (model.logLevel == "INFO"){%>selected="true"<%}%>>INFO</option>\n					<option value="DEBUG" <%if (model.logLevel == "DEBUG"){%>selected="true"<%}%>>DEBUG</option>\n			 	</select>\n			<%}else{%>\n				<input id="logLevel" name="logLevel" class="form-control input-sm readonly" type="text" value="<%=model.logLevel%>" readonly="true">\n			<%}%>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>应用日志格式：</label>\n		</div>\n		<div class="value">\n			<%if (logLevelAuth=="true"){%>\n				<select id="logAppenderType" name="logAppenderType" class="form-control input-sm">\n					<option value="dateAndSize" <%if (model.logAppenderType == "dateAndSize"){%>selected="true"<%}%>>按日期和大小</option>\n					<option value="hourAndSize" <%if (model.logAppenderType == "hourAndSize"){%>selected="true"<%}%>>按小时和大小</option>\n		 		</select>\n			<%}else{%>\n				<input id="logAppenderType" name="logAppenderType"  type="hidden" value="<%=model.logAppenderType%>" >\n				<input id="logAppenderTypeShow" name="logAppenderTypeShow" class="form-control input-sm readonly" type="text" <%if("dateAndSize"==model.logAppenderType){%>value = "按日期和大小"<%}else if ("hourAndSize"==model.logAppenderType){%>value = "按小时和大小"<%}%> value="" readonly="true">\n			<%}%>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n		</div>\n	</div>\n	<div class="line">\n		<label class="control-label">\n      		是否记录性能日志：\n      		<%if (logRunningAuth=="true"){%>\n      			<input id="isRunningSelect" type="checkbox" <%if (model.isRunningSelect){%>checked="checked"<%}%>>\n      		<%}else{%>\n      			<input id="isRunningSelect" type="checkbox" <%if (model.isRunningSelect){%>checked="checked"<%}%> disabled="true">\n      		<%}%>\n      	</label>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>性能日志存放路径：</label>\n		</div>\n		<div class="value">\n			<input id="runningLogSavePath" name="runningLogSavePath" class="form-control input-sm <%if (!model.isRunningSelect){%>redaonly<%}%>" type="text" placeholder="如:app/abc 或  abc" value="<%=model.runningLogSavePath%>" <%if (!model.isRunningSelect){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n      		<span id="runningLogSavePathTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>性能日志文件最大大小：</label>\n		</div>\n		<div class="value">\n			<input id="maxRunningLogFileSize" name="maxRunningLogFileSize" class="form-control input-sm <%if (!model.isRunningSelect){%>redaonly<%}%>" type="text" value="<%=model.maxRunningLogFileSize%>" <%if (!model.isRunningSelect){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n      		<span id="maxRunningLogFileSizeTip"></span>\n		</div>\n	</div>\n	<div class="line">\n		<div class="content">\n			<label>性能日志最多存放个数：</label>\n		</div>\n		<div class="value">\n			<input id="runningLogFileMaxBackupIndex" name="runningLogFileMaxBackupIndex" class="form-control input-sm <%if (!model.isRunningSelect){%>redaonly<%}%>" type="text" value="<%=model.runningLogFileMaxBackupIndex%>" <%if (!model.isRunningSelect){%>readonly="true"<%}%>>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n      		<span id="runningLogFileMaxBackupIndexTip"></span>\n		</div>\n	</div>\n   	<div class="line">\n      	<div class="content">\n         	<button id="save" class="btn btn-primary <%if(logUpdateAuth!=\'true\'){%>disabled<%}%>" type="button">应用</button>\n      	</div>\n   	</div>\n</div>\n');

define("travsky/jcf/1.0.0/view/log/logConfigHead_view-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var LogAppConfigHeadTemplate = require("travsky/jcf/1.0.0/template/log/logConfigHead-debug.tpl");
    var GroupDataSourceConfigHeadView = Backbone.View.extend({
        el: "#content-header",
        template: _.template(LogAppConfigHeadTemplate),
        events: {
            "change #appName": "getConfig"
        },
        initialize: function(options) {
            this.current = "";
            this.options = options || {};
            this.model = options.model;
            this.queryString = options.queryString;
            this.groupId = options.queryString.groupId;
            this.logAppNameList = this.collection;
            this.logAppNameList.bind("reset", this.render, this);
        },
        render: function() {
            this.$el.html(this.template({
                appNameList: this.logAppNameList.toJSON(),
                current: this.current
            }));
            return this;
        },
        getConfig: function() {
            $("#groupAppName").attr("value", $("#appName").val());
            if ($("#appName").val() != "") {
                this.model.fetch({
                    data: {
                        groupId: this.groupId,
                        appName: $("#appName").val()
                    },
                    reset: true
                });
            } else {
                this.model.setDefault();
            }
        }
    });
    return GroupDataSourceConfigHeadView;
});

define("travsky/jcf/1.0.0/template/log/logConfigHead-debug.tpl", [], '<div id="appLogConfigHead">\n	<div class="line">\n		<div class="content">\n			<label>应用日志名称</label>\n		</div>\n		<div class="value">\n			<select id="appName" name="appName" class="length" autocomplete="off">\n				<option></option>\n				<%for (var i = 0; i < appNameList.length; i++){%>\n					<option><%=appNameList[i].appName%></option>\n				<%}%> \n			</select>\n			<span style="position:absolute;border-top:1pt solid #c1c1c1;border-left:1pt solid #c1c1c1;border-bottom:1pt solid #c1c1c1;width:230px;height:30px;left: 535px;top: 60px;">\n				<input id="groupAppName" name="groupAppName" type="text" class="control-form input-sm" value="" style="width:227px;height:28px;border:0pt;"/>\n			</span>\n		</div>\n		<div class="warn">\n			<span class="text-danger">*</span>\n			<span id="groupAppNameTip"></span>\n		</div>\n	</div>\n</div>');

define("travsky/jcf/1.0.0/collection/log/log_app_name_collection-debug", [ "jquery-debug", "backbone-debug", "underscore-debug", "travsky/jcf/1.0.0/util/CommonUtil-debug", "travsky/jcf/1.0.0/view/errorPage_view-debug", "marionette-debug", "travsky/jcf/1.0.0/view/alert_view-debug", "bs-modal-debug", "travsky/jcf/1.0.0/model/alert_model-debug", "travsky/jcf/1.0.0/model/log/log_app_name_model-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var util = require("travsky/jcf/1.0.0/util/CommonUtil-debug");
    var appName = util.getAppName();
    var LogAppNameModel = require("travsky/jcf/1.0.0/model/log/log_app_name_model-debug");
    var LogAppNameCollection = Backbone.Collection.extend({
        model: LogAppNameModel,
        url: "/" + appName + "/log/toAddAppLogUI.action",
        parse: function(response) {
            this.flag = response.flag;
            this.appNameList = response.appNameList;
            return _.extend(response.appNameList);
        },
        refresh: function(params) {
            this.fetch(params);
        }
    });
    return LogAppNameCollection;
});

define("travsky/jcf/1.0.0/model/log/log_app_name_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var LogAppNameModel = Backbone.Model.extend({
        urlRoot: "",
        defaults: function() {
            return {
                appName: ""
            };
        }
    });
    return LogAppNameModel;
});

define("travsky/jcf/1.0.0/model/log/log_config_model-debug", [ "jquery-debug", "backbone-debug", "underscore-debug" ], function(require, exports, module) {
    var $ = jQuery = require("jquery-debug");
    var Backbone = require("backbone-debug");
    var _ = require("underscore-debug");
    var LogConfigModel = Backbone.Model.extend({
        urlRoot: "/" + jcfManager.appName + "/log/appLogConfig.action",
        defaults: {
            appConfigFileName: "",
            logSavePath: "",
            maxLogFileSize: "512MB",
            logFileMaxBackupIndex: "10",
            logLevel: "INFO",
            logAppenderType: "dateAndSize",
            isRunningSelect: false,
            runningLogSavePath: "",
            maxRunningLogFileSize: "512MB",
            runningLogFileMaxBackupIndex: "10"
        },
        parse: function(response) {
            return _.extend(response);
        },
        isRunningSelected: function() {
            return this.get("isRunningSelect") == true;
        },
        setDefault: function() {
            this.set("appConfigFileName", "");
            this.set("logSavePath", "");
            this.set("maxLogFileSize", "512MB");
            this.set("logFileMaxBackupIndex", "10");
            this.set("logLevel", "INFO");
            this.set("logAppenderType", "dateAndSize");
            this.set("isRunningSelect", false);
            this.set("runningLogSavePath", "");
            this.set("maxRunningLogFileSize", "512MB");
            this.set("runningLogFileMaxBackupIndex", "10");
        }
    });
    return LogConfigModel;
});

/**
 * Created with eclipse.
 * User: yichengjie
 * Date: 2015-4-22
 * Time: 下午02:52:46
 * To change this template use File | Settings | File Templates.
 */
define("travsky/jcf/1.0.0/view/AuthCheck4Menu-debug", [], function(require, exports, module) {
    var AuthCheckUtil = {};
    AuthCheckUtil.getServerFlag = function() {
        //服务器管理模块
        var jmm = jcfManager.authModel;
        var code = "2_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getDeployFlag = function() {
        ///部署管理模块
        var jmm = jcfManager.authModel;
        var code = "3_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getServiceFlag = function() {
        //服务管理模块
        var jmm = jcfManager.authModel;
        var code = "4_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getDatasourceFlag = function() {
        //数据源管理模块
        var jmm = jcfManager.authModel;
        var code = "5_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getMemcacheFlag = function() {
        //上下文管理模块
        var jmm = jcfManager.authModel;
        var code = "6_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    AuthCheckUtil.getLogFlag = function() {
        //日志管理模块
        var jmm = jcfManager.authModel;
        var code = "7_1";
        var flag = jmm.get(code) || "";
        return flag;
    };
    return AuthCheckUtil;
});
